     /*** SUG102M FORMATIEREN/SCHREIBEN HW RECON INPUT FILES          */00015027
0SUG102M: PROC (OEIPTR,                                                 00020013
                DATAREC_PTR,                                            00030013
                HASH_PTR,                                               00040013
                PTR_INT_AREA,                                           00050013
                Z_TAB,                                                  00060013
                TOSGEFU);                                               00070013
0              @QYLXIK: ENTRY;     DCL @SCHFIRST BIT(1)                 00080013
               STATIC INIT('1'B); IF @SCHFIRST THEN DO;                 00090013
               @SCHFIRST='0'B;        ON  UNDEFINEDFILE                 00100013
               (SYSPRINT) GOTO @END; PUT FILE(SYSPRINT)                 00110013
               EDIT    ('SUG102M  VERSION 2011.02.22' ,                 00120026
               ' 18H17.06      MIT DEM VERSIONS-ENTRY',                 00130013
               ' @QYLXIK',' ')     (SKIP,A,A,A,SKIP,A);                 00140013
               @END: ON UNDEFINEDFILE(SYSPRINT) SYSTEM;                 00150013
               END;     /* ENDE DER VERSIONS-GRUPPE  */                 00160013
 DCL KLASS CHAR (30) INIT ('IBM INTERNAL USE ONLY');                    00170013
 /*       I  B  M      I N T E R N A L   U S E   O N L Y              */00180013
 /*             COPYRIGHT  IBM  DEUTSCHLAND  GMBH   1985/1986         */00190013
     /***                                                             */00200013
     /***                                                             */00210013
     /*** CALLED BY:   SUG100M                                        */00220013
     /***                                                             */00230013
     /*** ARGUMENTS:   OEIPTR:      ZEIGT AUF CEOEI                   */00240013
     /***              DATAREC_PTR: ZEIGT AUF ALLGEMEINEN DATENTEIL   */00250013
     /***              HASH_PTR:    ZEIGT AUF KONTROLLSUMMENSTRUKTUR  */00260013
     /***              PTR_INT_AREA:ZEIGT AUF INTERFACE AREA          */00270013
     /***              Z_TAB:       ZAEHLERTABELLE                    */00280013
     /***              TOSGEFU:     TOS BEREITS IN CEDS VORHANDEN ?   */00290013
     /***                                                             */00300013
     /*** EXTERNAL MODULES : - RCB0E1M   COMMON ERROR ROUTINE         */00310013
     /***                                                             */00320013
     /*** CALLS:       RCB004M : ERRECHNEN / KONVERTIEREN DATUM       */00330013
     /***              RCB018M : ERMITTELN HASH TOTALS (KONTROLL-     */00340013
     /***                        SUMMEN) JE AUSGABEFILE               */00350013
     /***              DP60343 : STANDARD-ABBRUCH                     */00360013
     /***                        (REMOVED 24/07/00 - HM)              */00370013
     /***              SUG421M : BINARY AUF INTERNE TAB. TB_T400      */00380013
     /***                                                             */00390013
     /*** INPUT:       OEISTRU AUS SUG100M                            */00400013
     /***              SUG1TW0 : UMSETZUNG WARRANTY CATEGORY IN       */00410013
     /***                        TYPE OF MAINTENANCE                  */00420013
     /***              VSAMOEI : VSAM CEOEI F. ZUGRIFF MIT KEY        */00430013
     /***                                                             */00440013
     /*** OUTPUT:      RCBBCA0 : HW PRODUCT FILE NEU                  */00450013
     /***              RCBBCA2 : HW STATUS FILE NEU                   */00460013
     /***              RCBBCA3 : OU / HW PRODUCT FILE NEU             */00470013
     /***              RCBBCA4 : HW / CUSTOMER FILE NEU               */00480013
     /***              RCBBCA5 : HW SUPPLY CONTRACT FILE NEU          */00490013
     /***              RCBBCA7 : HW PRODUCT OFFERING IN ORDER F. NEU  */00500013
     /***              RCBBCA8 : REALIZATION OF HW PO FILE NEU        */00510013
     /***              RCBBCAB : MODIFIABLE INFO HW PRODUCT F. NEU    */00520013
     /***              RCB0M10 : MESSAGE FILE                         */00530013
     /***                                                             */00540013
     /*** INCLUDES:    DIX0361:  CEOEI                                */00550013
     /***              RCBBAAS1: ALLGEMEINER DATENTEIL RECON FILES    */00560013
     /***              RCB050S:  HW PRODUCT                           */00570013
     /***              RCB110S:  HW STATUS                            */00580013
     /***              RCB170S:  OU / HW PRODUCT                      */00590013
     /***              RCB190S:  HW / CUSTOMER                        */00600013
     /***              RCB220S:  HW SUPPLY CONTRACT                   */00610013
     /***              RCB260S:  HW PRODUCT OFFERING IN ORDER         */00620013
     /***              RCB300S:  REALIZATION OF HW PROD. OFFERING     */00630013
     /***              RCB380S:  MODIFIABLE INFO HW PRODUCT           */00640013
     /***              RCBZ01S:  INTERF. AREA ( PARAM. F.COMMON MOD.) */00650013
     /***              RCBZ03S:  PARAMETERSTRUKT. F. DATUMSERRECHNUNG */00660013
     /***              SUG102I:  UMSETZUNG WARR. CATEG. IN TYPE OF WAR*/00670013
     /***                                                             */00680013
     /*** PROGRAMMER:  B. MUELLER                                     */00690013
     /*** DATE:        30.04.93                                       */00700013
     /***                                                             */00710013
     /*** AENDERUNG:   25.03.94                                       */00720013
     /*** DURCH:       B. MUELLER                                     */00730013
     /*** GRUND:       CEDS 2.0 FINAL CUTOVER                         */00740013
     /***              DATENBEREINIGUNG CEOEI, AUSBAU ABGLEICH MIT    */00750013
     /***              OEI ALT, AUSBAU LOGIK AUF STATUS 5.            */00760013
     /***                                                             */00770013
     /*** AENDERUNG:   26.10.94                                       */00780013
     /*** DURCH:       B. MUELLER                                     */00790013
     /*** GRUND:       AIM 10: DOPPELTE ORDERS IN BMICS EXTRAKT       */00800013
     /***              BEI MODELLAENDERUNG.                           */00810013
     /***              BEI SERIALIZED ORDERS MUSS DAS EFFECTIVE_DATE  */00820013
     /***              IN HW REALIZATION FILE BLANK ENTHALTEN, DAMIT  */00830013
     /***              CEDS EINEN T300-EINTRAG BEGINNEND AB LAUFDATUM */00840013
     /***              ERZEUGT.                                       */00850013
     /***                                                             */00860013
     /*** AENDERUNG:   28.11.94                                       */00870013
     /*** DURCH:       B. MUELLER                                     */00880013
     /*** GRUND:       GARKL 'Z' (ANDAUERNDE GARANTIE) NACH 'A'       */00890013
     /***              DEFAULTEN, DA 'Z' BEI DEN EXTRAKTEN IN         */00900013
     /***              TOM '3' (PER CALL) UMGESETZT WIRD (AIM #347).  */00910013
     /***                                                             */00920013
     /*** AENDERUNG:   24.01.95                                       */00930013
     /*** DURCH:       B. MUELLER                                     */00940013
     /*** GRUND:       CEDS 2.1: GEAENDERTE TABLE LAYOUTS             */00950013
     /***              T0220_SUPPL_CTR: SOURCE_INDICATOR NEU          */00960013
     /***              T0260_HW_IN_ORD: MEASUREMENT_VALUE ENTFERNT    */00970013
     /***              T0380_HW_PR_MOD: MEASUREMENT_VALUE ENTFERNT,   */00980013
     /***                               CPU_TYPE NEU                  */00990013
     /***                                                             */01000013
     /*** AENDERUNG:   17.10.95                                       */01010013
     /*** DURCH:       A. FISCHER                                     */01020013
     /*** GRUND:       CEDS 2.2:                                      */01030013
     /***              - UMSETZUNG WARR. CAT. IN TYPE OF WARRANTY     */01040013
     /***                INKL. ANPASSUNG LAUFPROTOKOLL                */01050013
     /***                PROC LOAD_WC_TAB, TOW IST NEU                */01060013
     /***                FILE SUG1TW0 IST NEU                         */01070013
     /***              - UEBERARBEITUNG NULLINDICATOR-HANDLING        */01080013
     /***              - RECOMPILE WEGEN INCLUDE-AENDERUNG RCBZ01S    */01090013
     /***                                                             */01100013
     /*** AENDERUNG:   02.09.96                                       */01110013
     /*** DURCH:       A. FISCHER                                     */01120013
     /*** GRUND:       AIM 391 CEDS 2.3:                              */01130013
     /***              - ANPASSUNG WEGEN INCLUDE-AENDERUNG            */01140013
     /***                RCB170S/SI: EFFECTIVE_DATE_OU ENTFAELLT      */01150013
     /***                SUG170IN  : EFFECTIVE_DATE_OU ENTFAELLT      */01160013
     /***                RCB260S/SI: EFFECTIVE_DATE_OU ENTFAELLT      */01170013
     /***                SUG260IN  : EFFECTIVE_DATE_OU ENTFAELLT      */01180013
     /***                OU_HW     ZUWEISUNG ENTFERNT (RCB170S)       */01190013
     /***                HW_IN_ORD ZUWEISUNG ENTFERNT (RCB260S)       */01200013
     /***                                                             */01210013
     /*** AENDERUNG:   07.10.98                                       */01220013
     /*** DURCH:       W. BECHTEL                                     */01230013
     /*** GRUND:       AIM 410 CEDS 3.0 INKL. QF A1 UND A2:           */01240013
     /***              - ANPASSUNG WEGEN INCLUDE-AENDERUNG            */01250013
     /***                RCB220S: SERVICE_LVL_CODE ZUSAETZLICH INST.  */01260013
     /***                RCB220SI: INDNULL(12) VON 11 AUF 12 PLAETZE  */01270013
     /***                HW_SUPPLY_REC  VON 99 AUF 104 (RCB220S/SI)   */01280013
     /***                (NUR RECOMPILE)                              */01290013
     /***              - AENDERUNG DER ZUWEISUNGS-LOGIK BZGL. NULL-   */01300013
     /***                INDICATOR FUER TAB 220 SERVICE_LVL_CODE      */01310013
     /***                (SIEHE VERMERK REQ. 410)                     */01320013
     /***                                                             */01330013
     /*** AMENDED:     24.07.00                                       */01340013
     /*** BY:          H MEDHURST                                     */01350013
     /*** REASON:      COMMON ERROR ROUTINE NOW USED                  */01360013
     /***                                                             */01370013
     /*** AMENDED:     29.10.02                                       */01380013
     /*** BY:          SUNDAR SRINIVAS                                */01390013
     /*** REASON:      CHANGE REQUEST C0073-1002                      */01400013
     /***              3 ZEROS CONCATENATED IN OU_CODE ASSIGNMENT     */01410013
     /***              IN TABLE LIKE FILES T170 AND T260 ARE REMOVED. */01420013
     /***                                                             */01421020
     /*** AMENDED:     27.11.09                                       */01422020
     /*** BY:                                                         */01423020
     /*** REASON:      A10-A11 CHANGE 030A                            */01424020
     /***                                                             */01430013
     /***   FUNKTIONSBESCHREIBUNG:                                    */01440013
     /***                                                             */01450013
     /***    DAS PROGRAMM ERSTELLT AUS DER CEOEI FOLGENDE HW RECON    */01460013
     /***    INPUT FILES:                                             */01470013
     /***                                                             */01480013
     /***    BEI INSTALLIERTER HW  (STATUS = '3' ODER '4')            */01490013
     /***      - HW PRODUCT RECORD                                    */01500013
     /***      - HW STATUS RECORD                                     */01510013
     /***      - OU/HW PRODUCT RECORD                                 */01520013
     /***      - HW/CUSTOMER RECORD                                   */01530013
     /***      - HW SUPPLY CONTRACT RECORD                            */01540013
     /***      - REALIZATION OF HW PO RECORD                          */01550013
     /***      - MODIFIABLE INFO HW PRODUCT RECORD                    */01560013
     /***                                                             */01570013
     /***    BEI HW AUFTRAG  (STATUS = '0')                           */01580013
     /***      - HW PROD. OFFERING IN ORDER RECORD                    */01590013
     /***                                                             */01600013
     /***    BEI SERIALIZED ORDER WIRD GEPRUEFT, OB ZU DIESEM BEREITS */01610013
     /***    EIN MASCHINENSATZ AUF VSAM OEI VORHANDEN IST.            */01620013
     /***    - WENN JA, WIRD DER SERIALIZED ORDER NICHT VERARBEITET.  */01630013
     /***    - WENN NEIN, WERDEN FOLGENDE HW RECON FILES ERSTELLT:    */01640013
     /***      - HW PRODUCT RECORD                                    */01650013
     /***      - HW PRODUCT OFFERING IN ORDER RECORD                  */01660013
     /***      - REALIZATION OF HW PO RECORD                          */01670013
     /***                                                             */01680013
     /***    FUER JEDE FILE WERDEN HASH TOTALS (KONTROLLSUMMEN)       */01690013
     /***    ERRECHNET UND VOM HAUPTPROGRAMM AUF DIE PARAMETER TABLE  */01700013
     /***    UEBERNOMMEN.                                             */01710013
     /***                                                             */01720013
     /***    BEI INSTALLIERTER HW UND SERIALIZED ORDER, FUER DEN      */01730013
     /***    NOCH KEIN MASCHINENSATZ AUF OEI VORHANDEN IST, WIRD      */01740013
     /***    DIE PICD0-FILE ERSTELLT. SIE ENTHAELT HW-INFORMATIONEN,  */01750013
     /***    DIE ZUR ERSTELLUNG DER SOFTWARE RECON INPUT FILES BE-    */01760013
     /***    NOETIGT WERDEN.                                          */01770013
     /***                                                             */01780013
     /***                                                             */01790013
     /***    VOM AUFRUFENDEN PGM WERDEN FOLGENDE PARAMETER UEBERGEBEN:*/01800013
     /***                                                             */01810013
     /***    - OEIPTR:       ZEIGT AUF CEOEI                          */01820013
     /***    - DATAREC_PTR:  ZEIGT AUF ALLGEMEINEN DATENTEIL          */01830013
     /***    - HASH_PTR:     ZEIGT AUF KONTROLLSUMMENSTRUKTUR         */01840013
     /***    - PTR_INT_AREA: ZEIGT AUF INTERFACE AREA (ENTHAELT       */01850013
     /***                    PARAMETER F. COMMON SUB-MOD. UND RUNDATE */01860013
     /***                    AUS RCB001 U. SYSTEMDATUM)               */01870013
     /***    - Z_TAB:        ZAEHLERTABELLE                           */01880013
     /***    - TOSGEFU:      HINWEIS, OB TOS BEREITS IN CEDS (T110)   */01890013
     /***                    VORHANDEN IST. ABHAENGIG DAVON WIRD DAS  */01900013
     /***                    EFFECTIVE_DATE IN RCBBCA3, RCBBCA8 UND   */01910013
     /***                    RCBBCAB GEFUELLT ODER BLANK GELASSEN.    */01920013
     /***                                                             */01930013
     /***                                                             */01940013
     /***    ABBRUCH-FAELLE:                                          */01950013
     /***       - FEHLER BEIM LESEN MIT KEY AUF VSAM OEI              */01960013
     /***       LOAD_WC_TAB:                                          */01970013
     /***       - FALSCHE SATZART BEI WC-UMSETZUNGSTABELLE            */01980013
     /***       - SORTFEHLER BEI WC-UMSETZUNGSTABELLE                 */01990013
     /***       - DEFAULTEINTRAG BEI WC-UMSETZUNGSTABELLE FEHLT       */02000013
     /***       - WC-UMSETZUNGSTABELLE LEER                           */02010013
     /***                                                             */02020013
     /***                                                             */02030013
     /*** VERARBEITUNGSSCHRITTE:                                      */02040013
     /***                                                             */02050013
     /***    P R O G R A M M V O R S P A N N                          */02060013
     /***    LADEN UMSETZUNGSETZUNGSTABELLE WC IN TOW                 */02070013
     /***    BEI 1. AUFRUF                                            */02080013
     /***                                                             */02090013
     /***                                                             */02100013
     /***    H A U P T V E R A R B E I T U N G                        */02110013
     /***                                                             */02120013
     /***                                                             */02130013
     /***                                                             */02140013
     /***                                                             */02150013
     /***   S C H L U S S - V E R A R B E I T U N G                   */02160013
     /***                                                             */02170013
     /***                                                             */02180013
     /***                                                             */02190013
1/*-------------------------------------------------------------------*/02191029
 /* MAINTENANCE LOG  :                                                */02192029
 /* ---------------                                                   */02193029
 /*                                                                   */02194029
 /*  DATE       | WORK-ITEMNO. | DESCRIPTION                          */02195029
 /*  --------------------------------------------------------------   */02196029
 /*  2011-02-28 | TREC 80315   | MOVING THE SLC-CODE IRRESPECTIVE OF  */02197030
 /*             |              | ANY CONDITION                        */02198030
 /********************************************************************/ 02199029
1/*-------------------------------------------------------------------*/02200013
0 DEFAULT RANGE (*) STATIC;                                             02210013
-/*-------------------------------------------------------------------*/02220013
 /*                                                                   */02230013
 /*         V E R E I N B A R U N G E N                               */02240013
 /*                                                                   */02250013
 /*-------------------------------------------------------------------*/02260013
-/*-------------------------------------------------------------------*/02270013
 /***   PLIXOPTION   -   N U R   FUER   M A I N   PROGRAMME         ***/02280013
 /*-------------------------------------------------------------------*/02290013
-/*-------------------------------------------------------------------*/02300013
 /***   BIT                                                         ***/02310013
 /*-------------------------------------------------------------------*/02320013
   DCL  FIRST      BIT(1) EXTERNAL INIT ('1'B);  /*1. AUFRUF SUG102M  */02330013
   DCL  UNGUELTIG      BIT(1);               /* SCHDATE UNGUELTIG ?   */02340013
   DCL  TWO_RECORDS    BIT(1);             /* 2 HW SUPP.CTR.REC. ERST.*/02350013
                                           /* WENN ITEM IN GARANTIE   */02360013
   DCL  FUTURE_IDATE   BIT(1);             /* IDATE ZUKUENFTIG ?      */02370013
   DCL  FUTURE_DKAUF   BIT(1);             /* DKAUF ZUKUENFTIG ?      */02380013
   DCL  FUTURE_DTRANS  BIT(1);             /* DTRANS ZUKUENFTIG ?     */02390013
   DCL  TOSGEFU        BIT(1);             /*TOS IN T110 OLD GEFUNDEN?*/02400013
   DCL  SWITCH_F_TOW   BIT(1)      INIT ('0'B);  /*QF-AK 3.3 FW       */02410014
   DCL  SWITCH_F_SLC   BIT(1)      INIT ('0'B);  /*QF-AK 3.3 FW       */02420014
1/*-------------------------------------------------------------------*/02430013
 /***   ENTRIES                                                     ***/02440013
 /*-------------------------------------------------------------------*/02450013
   DCL  SCCA02M        EXT ENTRY RETURNS (CHAR (8)); /*-1 TAG ERRECHN.*/02460013
 /*DCL  DP60343        EXT ENTRY;               REMOVED 24/07/00 - HM */02470013
   DCL  SUG421M        EXT ENTRY;                                       02480013
   DCL  RCB004M        EXT ENTRY;                  /* ERRECHNEN DATUM */02490013
   DCL  RCB018M        EXT ENTRY;            /* ERRECHNEN HASH TOTALS */02500013
   DCL  RCBI50M        EXT ENTRY;                /*QF-AK 3.3 FW       */02510014
   DCL  RCB0M1M        EXT ENTRY;                /*QF-AK 3.3 FW       */02520014
1/*-------------------------------------------------------------------*/02530013
 /***   BUILTIN                                                     ***/02540013
 /*-------------------------------------------------------------------*/02550013
   DCL  ADDR           BUILTIN;                                         02560013
   DCL  SUBSTR         BUILTIN;                                         02570013
   DCL  LENGTH         BUILTIN;                                         02580013
   DCL  MOD            BUILTIN;                                         02590013
   DCL  NULL           BUILTIN;                                         02600013
   DCL  ONCODE         BUILTIN;                                         02610013
   DCL  CSTG           BUILTIN;                                         02620013
   DCL  STG            BUILTIN;                                         02630013
   DCL  DIM            BUILTIN;                                         02640013
   DCL  DATE           BUILTIN;                                         02650013
   DCL  TIME           BUILTIN;                                         02660013
   DCL  HIGH           BUILTIN;                                         02670013
   DCL  LOW            BUILTIN;                                         02680013
   DCL  VERIFY         BUILTIN;                                         02690013
   DCL  STRING         BUILTIN;                                         02700013
0/*-------------------------------------------------------------------*/02710013
 /***   POINTER                                                     ***/02720013
 /*-------------------------------------------------------------------*/02730013
   DCL  OEIPTR          POINTER;    /* POINTER AUF CEOEI              */02740013
   DCL  DATAREC_PTR     POINTER;    /* POINTER AUF ALLG. DATENTEIL    */02750013
   DCL  HASH_PTR        POINTER;    /* PTR AUF KONTROLLSUMMENSTRUKTUR */02760013
   DCL  PTR_INT_AREA    POINTER;    /* POINTER AUF INTERFACE AREA     */02770013
   DCL  PTR_RCBZ03S     POINTER;    /* POINTER AUF PARAMETER-STRUKTUR */02780013
   DCL  PTR_RETURN_AREA POINTER;                 /*QF-AK 3.3 FW       */02790014
                                    /* FUER DATUMSERRECHNUNG (RCB004M)*/02800013
-/*-------------------------------------------------------------------*/02810013
 /***   FILES                                                       ***/02820013
 /*-------------------------------------------------------------------*/02830013
0/*-------INPUT-------------------------------------------------------*/02840013
   DCL  SUG1TW0        FILE RECORD SEQL INPUT;  /*UMSETZUNG WC IN TOW */02850013
   DCL  VSAMOEI FILE RECORD KEYED INPUT ENV(VSAM,GENKEY); /*OEI, LESEN*/02860013
                                                          /*MIT KEY   */02870013
0/*-------OUTPUT------------------------------------------------------*/02880013
   DCL  RCBBCA0        FILE RECORD OUTPUT SEQL;                         02890013
   DCL  RCBBCA2        FILE RECORD OUTPUT SEQL;                         02900013
   DCL  RCBBCA3        FILE RECORD OUTPUT SEQL;                         02910013
   DCL  RCBBCA4        FILE RECORD OUTPUT SEQL;                         02920013
   DCL  RCBBCA5        FILE RECORD OUTPUT SEQL;                         02930013
   DCL  RCBBCA7        FILE RECORD OUTPUT SEQL;                         02940013
   DCL  RCBBCA8        FILE RECORD OUTPUT SEQL;                         02950013
   DCL  RCBBCAB        FILE RECORD OUTPUT SEQL;                         02960013
   DCL  RCB0M10        FILE RECORD OUTPUT SEQL;                         02970013
   DCL  PICD0          FILE RECORD OUTPUT SEQL;                         02980013
   DCL  SYSPRINT       FILE EXTERNAL PRINT;                             02990013
1/*-------------------------------------------------------------------*/03000013
 /***   ARBEITS - VARIABLE                                          ***/03010013
 /*-------------------------------------------------------------------*/03020013
   DCL  DATUM          CHAR (8);                                        03030013
   DCL  ERG_DATUM      CHAR (8);                                        03040013
   DCL  VERGL_DATUM    CHAR (10);                                       03050013
   DCL  TAGE           CHAR (6);                                        03060013
   DCL  JAHR           CHAR(2) INIT(' ');  /* F. 4STELLIGE JAHRESZAHL */03070013
   DCL  INPUT_DATE     CHAR(6) INIT(' ');  /* ZU KONVERT. DATUM JJMMTT*/03080013
   DCL  OUTPUT_DATE    CHAR(10)INIT(' ');  /*KONVERT. DATUM JJJJ-MM-TT*/03090013
   DCL  J              BIN FIXED(15);      /* SCHLEIFENZAEHLER        */03100013
   DCL  I0             BIN FIXED(31) EXTERNAL; /* TABELLENPLATZ       */03110013
   DCL  XTYPMOD        CHAR(07) EXTERNAL;   /* ZU SUCHENDE TYPE/MOD   */03120013
   DCL  DGEWE_PLUS1    CHAR(10) INIT(' ');  /* DGEWE + 1              */03130013
   DCL  DGEWE_OK       CHAR(10) INIT(' ');  /* KORREKTES DGEWE        */03140013
   DCL  IDATE_10       CHAR(10) INIT(' ');  /* IDATE JJJJ-MM-TT       */03150013
   DCL  DGEWE_10       CHAR(10) INIT(' ');  /* DGEWE JJJJ-MM-TT       */03160013
   DCL  DKAUF_10       CHAR(10) INIT(' ');  /* DKAUF JJJJ-MM-TT       */03170013
   DCL  DTRANS_10      CHAR(10) INIT(' ');  /* DTRANS JJJJ-MM-TT      */03180013
   DCL  DREQ_10        CHAR(10) INIT(' ');  /* DREQ JJJJ-MM-TT        */03190013
   DCL  DORDO_10       CHAR(10) INIT(' ');  /* DORDO JJJJ-MM-TT       */03200013
   DCL  DGEWE_PER      PIC'999';            /* GARANTIE PERIODE       */03210013
   DCL  IDATE_JJJJ     PIC'9999';           /* INSTALL. DATUM JJJJ    */03220013
   DCL  IDATE_MM       PIC'99';             /* INSTALL. DATUM MM      */03230013
   DCL  IDATE_TT       PIC'99';             /* INSTALL. DATUM TT      */03240013
   DCL  MONAT_PIC      PIC'9999';           /* MONAT BERECHNUNGSFELD  */03250013
   DCL  JAHRE_PIC      PIC'9999';      /* JAHRE AUS GARANTIE BERECHNG */03260013
   DCL  VSAMKEY             CHAR(11);       /* KEY F. ZUGRIFF OEI     */03270013
   DCL  OEICODE        BIN FIXED(15) INIT (0);                          03280013
                                                                        03290013
   DCL  Z_TAB_ANZ      FIXED BIN(15,0) EXTERNAL    /* ZAEHLER-TABELLE */03300013
                       INIT (24);                  /* ANZ ZEILEN      */03310013
   DCL  1 Z_TAB(24),                               /* ZAEHLERTABELLE  */03320013
          2 ANZ        FIXED DEC(9,0),                                  03330013
          2 TEXT       CHAR (45);                                       03340013
                                                                        03350013
   DCL 1 TB_T400(*) CTL EXTERNAL,          /* INTERNE TAB. ENTSPRICHT */03360013
         2 PRODUCT_TYPE         CHAR(4),   /* VERKUERZTER TAB. LIKE   */03370013
         2 MODEL_NUMBER         CHAR(3),   /* FILE VON DB2 TAB. 0400  */03380013
         2 SERVICE_LVL_CODE_1   CHAR(3),                                03390013
         2 WARRANTY_DURATN_1    DEC FIXED(3,0),                         03400013
         2 SERVICE_LVL_CODE_2   CHAR(3),                                03410013
         2 SERVICE_LVL_CODE_C   CHAR(3),                                03420013
         2 SLC1_NULLIND         BIN FIXED (15),                         03430013
         2 SLC2_NULLIND         BIN FIXED (15),                         03440013
         2 SLCC_NULLIND         BIN FIXED (15);                         03450013
                                                                        03460013
   DCL  1 HASH_TOTAL     BASED(HASH_PTR),   /* KONTROLLSUMMEN JE FILE */03470013
          3 RCBBCA0    FIXED DEC(15,0),                                 03480013
          3 RCBBCA2    FIXED DEC(15,0),                                 03490013
          3 RCBBCA3    FIXED DEC(15,0),                                 03500013
          3 RCBBCA4    FIXED DEC(15,0),                                 03510013
          3 RCBBCA5    FIXED DEC(15,0),                                 03520013
          3 RCBBCA7    FIXED DEC(15,0),                                 03530013
          3 RCBBCA8    FIXED DEC(15,0),                                 03540013
          3 RCBBCAB    FIXED DEC(15,0);                                 03550013
                                                                        03560013
   DCL  HASH_FIELD     CHAR(4);          /* INPUT F. RECHNEN HASH TOT */03570013
                                                                        03580013
 /*-------------------------------------------------------------------*/03590013
   DCL  VERGLEICH      CHAR(30);           /* PRUEFUNG SCHDATE AUF    */03600013
   DCL  LEN_VERGLEICH  FIXED BIN(31);      /* BEWUSSTE UNGUELTIGKEIT  */03610013
   VERGLEICH = '      000000555555888888999999'; /*UNGUELTIGES SCHDATE*/03620013
   LEN_VERGLEICH = LENGTH(VERGLEICH);                                   03630013
   DCL WRK_F_TOW       CHAR(01) INIT('');        /*QF-AK 3.3 FW       */03640014
   DCL WRK_F_SPLT_DATE CHAR(10);                 /*QF-AK 3.3 FW       */03650014
                                                                        03660013
1/*-------------------------------------------------------------------*/03670013
 /***   INCLUDES                                                    ***/03680013
 /*-------------------------------------------------------------------*/03690013
   DCL  1 OEISTRU      BASED (OEIPTR),       /* CEOEI                 */03700013
          % INCLUDE DIX0361;                                            03710013
                                                                        03720013
   DCL  1 OEIIN,                             /*EINGABEBEREICH F. LESEN*/03730013
          % INCLUDE DIX0361;                 /*VSAM OEI MIT KEY       */03740013
                                                                        03750013
   DCL  1 DATAREC       BASED (DATAREC_PTR), /* ALLGEM. DATENTEIL     */03760013
          % INCLUDE RCBBAAS1;;               /* OUTPUT FILES          */03770013
                                                                        03780013
   DCL  1 HW_PRODUCT_NULL_T050 BASED(ADDR(HW_PRODUCT.NULLIND)),         03790013
            % INCLUDE SUG050IN;;        /* NULLINDICATOR ALS STRUKTUR */03800013
   DCL  1 HW_PRODUCT,                                   /*OUTPUT FILES*/03810013
            % INCLUDE RCBBAAS1;,                                        03820013
          3 DATA,                                                       03830013
            % INCLUDE RCB050S;,                                         03840013
          3 NULLIND,                                                    03850013
            % INCLUDE RCB050SI;;                                        03860013
   DCL  1 HW_STATUS_NULL_T110 BASED(ADDR(HW_STATUS.NULLIND)),           03870013
            % INCLUDE SUG110IN;;        /* NULLINDICATOR ALS STRUKTUR */03880013
   DCL  1 HW_STATUS,                                                    03890013
            % INCLUDE RCBBAAS1;,                                        03900013
          3 DATA,                                                       03910013
            % INCLUDE RCB110S;,                                         03920013
          3 NULLIND,                                                    03930013
            % INCLUDE RCB110SI;;                                        03940013
   DCL  1 OU_HW_NULL_T170 BASED(ADDR(OU_HW.NULLIND)),                   03950013
            % INCLUDE SUG170IN;;        /* NULLINDICATOR ALS STRUKTUR */03960013
   DCL  1 OU_HW,                                                        03970013
            % INCLUDE RCBBAAS1;,                                        03980013
          3 DATA,                                                       03990013
            % INCLUDE RCB170S;,                                         04000013
          3 NULLIND,                                                    04010013
            % INCLUDE RCB170SI;;                                        04020013
   DCL  1 HW_CUST_NULL_T190 BASED(ADDR(HW_CUST.NULLIND)),               04030013
            % INCLUDE SUG190IN;;        /* NULLINDICATOR ALS STRUKTUR */04040013
   DCL  1 HW_CUST,                                                      04050013
            % INCLUDE RCBBAAS1;,                                        04060013
          3 DATA,                                                       04070013
            % INCLUDE RCB190S;,                                         04080013
          3 NULLIND,                                                    04090013
            % INCLUDE RCB190SI;;                                        04100013
   DCL  1 HW_SUPPLY_NULL_T220 BASED(ADDR(HW_SUPPLY.NULLIND)),           04110013
            % INCLUDE SUG220IN;;        /* NULLINDICATOR ALS STRUKTUR */04120013
   DCL  1 HW_SUPPLY,                                                    04130013
            % INCLUDE RCBBAAS1;,                                        04140013
          3 DATA,                                                       04150013
            % INCLUDE RCB220S;,                                         04160013
          3 NULLIND,                                                    04170013
            % INCLUDE RCB220SI;;                                        04180013
   DCL  1 HW_SUPPLY_2_NULL_T220 BASED(ADDR(HW_SUPPLY_2.NULLIND)),       04190013
            % INCLUDE SUG220IN;;        /* NULLINDICATOR ALS STRUKTUR */04200013
   DCL  1 HW_SUPPLY_2,                                                  04210013
            % INCLUDE RCBBAAS1;,                                        04220013
          3 DATA,                                                       04230013
            % INCLUDE RCB220S;,                                         04240013
          3 NULLIND,                                                    04250013
            % INCLUDE RCB220SI;;                                        04260013
   DCL  1 HW_IN_ORD_NULL_T260 BASED(ADDR(HW_IN_ORD.NULLIND)),           04270013
            % INCLUDE SUG260IN;;        /* NULLINDICATOR ALS STRUKTUR */04280013
   DCL  1 HW_IN_ORD,                                                    04290013
            % INCLUDE RCBBAAS1;,                                        04300013
          3 DATA,                                                       04310013
            % INCLUDE RCB260S;,                                         04320013
          3 NULLIND,                                                    04330013
            % INCLUDE RCB260SI;;                                        04340013
   DCL  1 HW_REAL_NULL_T300 BASED(ADDR(HW_REAL.NULLIND)),               04350013
            % INCLUDE SUG300IN;;        /* NULLINDICATOR ALS STRUKTUR */04360013
   DCL  1 HW_REAL,                                                      04370013
            % INCLUDE RCBBAAS1;,                                        04380013
          3 DATA,                                                       04390013
            % INCLUDE RCB300S;,                                         04400013
          3 NULLIND,                                                    04410013
            % INCLUDE RCB300SI;;                                        04420013
   DCL  1 HW_MOD_NULL_T380 BASED(ADDR(HW_MOD.NULLIND)),                 04430013
            % INCLUDE SUG380IN;;        /* NULLINDICATOR ALS STRUKTUR */04440013
   DCL  1 HW_MOD,                                                       04450013
            % INCLUDE RCBBAAS1;,                                        04460013
          3 DATA,                                                       04470013
            % INCLUDE RCB380S;,                                         04480013
          3 NULLIND,                                                    04490013
            % INCLUDE RCB380SI;;                                        04500013
                                                                        04510013
   DCL  1 PICD,                                         /* PICD0-FILE */04520013
          % INCLUDE SUG101I;                                            04530013
                                                                        04540013
                                                                        04550013
   DCL  1 INT_AREA BASED(PTR_INT_AREA), /* INTERFACE AREA, ENTHAELT   */04560013
          % INCLUDE RCBZ01S;;           /* PARAM.F. COMMON SUB-MODULES*/04570013
   DCL  1 PARM_RCBZ03S,                 /* PARAMETERSTRUKTUR FUER     */04580013
          % INCLUDE RCBZ03S;;           /* DATUMSERRECHNUNG           */04590013
   DCL  1 DATE_AREA,                    /* DATE AREA                  */04600013
          %INCLUDE (RCBZ03S);;                   /*QF-AK 3.3 FW       */04610014
   DCL  1 RETURN_AREA,                  /* RETURN AREA                */04620013
          %INCLUDE (RCBZ02S);;                   /*QF-AK 3.3 FW       */04630014
1/*********************************************************************/04640013
 /*  DB2 TABLE                                                        */04650013
 /*********************************************************************/04660013
   DCL 1 TB_RCBV690,                         /*SOC QF-AK 3.3 FW       */04670014
          %INCLUDE (RCB690S);;                                          04680013
   DCL 1 TB_RCBV690_I,                                                  04690013
          %INCLUDE (RCB690SI);;                                         04700013
   DCL PTR_RCBV500    PTR;                 /* PTR PARAMETER ROW       */04710013
   DCL PTR_RCBV500I   PTR;                 /* PTR NULL-IND. PARAMETER */04720013
   DCL 1 TB_RCBV500,                       /* PARAMETER ROW           */04730013
          %INCLUDE (RCB500S);;                                          04740013
   DCL 1 TB_RCBV500_I,                     /* NULL-IND. PARAMETER     */04750013
          %INCLUDE (RCB500SI);;              /*EOC QF-AK 3.3 FW       */04760014
1/********************************************************************/ 04770013
 /* DB2/SQL SQLCA                                                    */ 04780013
 /********************************************************************/ 04790013
0 EXEC SQL                                                              04800013
    INCLUDE SQLCA                                                       04810013
    ;                                                                   04820013
1/*********************************************************************/04830013
 /*  PROGRAM CONTROL PARAMETERS                                       */04840013
 /*********************************************************************/04850013
                                             /*SOC QF-AK 3.3 FW       */04860014
   DCL 1 PARM_FX_WARR   BASED(PTR_RCBV500),      /* FLEXIBLE WARRANTY */04870013
       %INCLUDE (RCBP63S);;                  /*SOC QF-AK 3.3 FW       */04880014
1/*-------------------------------------------------------------------*/04890013
 /***      U E B E R S C H R I F T E N                              ***/04900013
 /*-------------------------------------------------------------------*/04910013
1/*-------------------------------------------------------------------*/04920013
 /***      DRUCK-ZEILEN                                             ***/04930013
 /*-------------------------------------------------------------------*/04940013
1/********************************************************************/ 04950013
 /*  EXTERNAL ENTRIES                                                */ 04960013
 /********************************************************************/ 04970013
 DCL RCB0E1M   ENTRY  EXTERNAL;            /* COMMON ERROR ROUTINE   */ 04980013
1/********************************************************************/ 04990013
 /* EXTERNAL PARAMETER INTERFACES                                    */ 05000013
 /********************************************************************/ 05010013
 DCL 1 PARM_INT_AREA          BASED (PTR_INT_AREA),                     05020013
      %INCLUDE (RCBZ01S);;                                              05030013
1/*-------------------------------------------------------------------*/05040013
 /***    ON ERROR                                                   ***/05050013
 /*-------------------------------------------------------------------*/05060013
 %INCLUDE (RCB0E0M);                                                    05070013
  END;                                                                  05080013
 /********************************************************************/ 05090013
 /*                                                                  */ 05100013
 /* IN CASE AN UNEXPECTED ERROR OCCURS FILL THE FOLLOWING VARIABLES  */ 05110013
 /* AND CALL THE ERROR ROUTINE:                                      */ 05120013
 /*                                                                  */ 05130013
 /*                                                                  */ 05140013
 /* FIELD              IN CASE OF: DB2 ERROR --  -- OTHER ERROR --   */ 05150013
 /*                                                                  */ 05160013
 /* PARM_INT_AREA.PTR_ERROR         ADDR (SQLCA)     NULL            */ 05170013
 /* PARM_INT_AREA.ERR_TYPE         'DB2'            'OTHER'          */ 05180013
 /* PARM_INT_AREA.CALL_ID          '#NNN'           '#NNN'           */ 05190013
 /* CALL RCB0E1M (PTR_INT_AREA)                                      */ 05200013
 /*                                                                  */ 05210013
 /* NOTE: NNN CAN BE A NUMBER FROM 001 TO 999                        */ 05220013
 /*                                                                  */ 05230013
 /********************************************************************/ 05240013
 /*      ON ERROR BEGIN;                        REMOVED 24/07/00 - HM */05250013
 /*         CLOSE FILE (SYSPRINT);                                    */05260013
 /*         CALL DP60343 ('0102');                                    */05270013
 /*      END;                                                         */05280013
1/*-------------------------------------------------------------------*/05290013
 /***    ON CODE                                                    ***/05300013
 /*-------------------------------------------------------------------*/05310013
   ON KEY(VSAMOEI) OEICODE = ONCODE();                                  05320013
-/*-------------------------------------------------------------------*/05330013
 /***    ON ENDFILE                                                 ***/05340013
 /*-------------------------------------------------------------------*/05350013
-/*-------------------------------------------------------------------*/05360013
 /***    O P E N    FILES                                           ***/05370013
 /*-------------------------------------------------------------------*/05380013
1/*-------------------------------------------------------------------*/05390013
 /*                                                                   */05400013
 /*      P R O G R A M M    -    S T A R T                            */05410013
 /*                                                                   */05420013
 /*-------------------------------------------------------------------*/05430013
                   /*-------------------------------------------------*/05440013
                   /* LOAD_WC_TAB  LADEN  UMSETZUNGSTABELLE WC IN TOW */05450013
                   /* BEI 1. AUFRUF VON SUG102M                       */05460013
                   /*-------------------------------------------------*/05470013
                                                                        05480013
   PTR_RCBV500        = ADDR(TB_RCBV500);        /*QF-AK 3.3 FW       */05490014
   PTR_RCBV500I       = ADDR(TB_RCBV500_I);      /*QF-AK 3.3 FW       */05500014
   PTR_RETURN_AREA    = ADDR(RETURN_AREA);       /*QF-AK 3.3 FW       */05510014
   IF FIRST                                                             05520013
   THEN DO;                                                             05530013
      FIRST='0'B;                                                       05540013
      CALL LOAD_WC_TB;                                                  05550013
      CALL RCBBCAM_RX12_GET_F_TOW_RCB063;        /*QF-AK 3.3 FW       */05560014
 %DCL SUGTEST                   CHAR; /* FUER TESTAUSGABEN         /*%*/05570013
 %SUGTEST = 'N';                      /* TEST AKTIV , WENN 'J'     /*%*/05580013
     %IF SUGTEST = 'J'                                             /*%*/05590013
     %THEN                                                         /*%*/05600013
       %DO;                                                        /*%*/05610013
          /* TESTHILFE AKTIV */                                    /*%*/05620013
          /* TEST FUNKTIONSPROZEDUR TOW                            /*%*/05630013
          /* ZAEHLER WERDEN VERFAELSCHT, DESHALB ABBRUCH           /*%*/05640013
          DCL TESTSTRING CHAR(28) INIT                             /*%*/05650013
          ('ABCDEFGHIJKLMNOPQRSTUVWXYZ  ');  /* A-Z, LOW(1), BLANK /*%*/05660013
          DO I7=1 TO 28;                                           /*%*/05670013
             PUT SKIP EDIT('TESTAUSGABE:'                          /*%*/05680013
                           || SUBSTR(TESTSTRING,I7,1)              /*%*/05690013
                           || '/'                                  /*%*/05700013
                           || TOW(SUBSTR(TESTSTRING,I7,1))         /*%*/05710013
                          )(COL(1),A);                             /*%*/05720013
                                                                   /*%*/05730013
          END;                                                     /*%*/05740013
          DO I7=1 TO 28;    /* 2. DURCHLAUF, UM UNTERDRUECKEN      /*%*/05750013
                            /* DEFAULT-MESSAGE ZU TESTEN           /*%*/05760013
             PUT SKIP EDIT('TESTAUSGABE:'                          /*%*/05770013
                           || SUBSTR(TESTSTRING,I7,1)              /*%*/05780013
                           || '/'                                  /*%*/05790013
                           || TOW(SUBSTR(TESTSTRING,I7,1))         /*%*/05800013
                          )(COL(1),A);                             /*%*/05810013
                                                                   /*%*/05820013
          END;                                                     /*%*/05830013
             PUT SKIP EDIT('            ')(A);                     /*%*/05840013
             SIGNAL ERROR;                                         /*%*/05850013
       %END;                                                       /*%*/05860013
   END;                                                                 05870013
                                                                        05880013
                                                                        05890013
   SELECT (OEISTRU.ISTAT);                                              05900013
                                                      /*--------------*/05910013
      WHEN ('3','4') DO;                              /* INSTALLATION */05920013
                                                                        05930013
         Z_TAB(4).ANZ = Z_TAB(4).ANZ + 1;                               05940013
                                                                        05950013
          /*----------------------------------------------------------*/05960013
          /* KONVERTIEREN IDATE/DGEWE/DTRANS/DKAUF JJMMTT->JJJJ-MM-TT */05970013
          /*----------------------------------------------------------*/05980013
         INPUT_DATE = OEISTRU.IDATE;                                    05990013
         CALL CONVERT_DATUM;                                            06000013
         IDATE_10 = OUTPUT_DATE;                                        06010013
                                                                        06020013
         INPUT_DATE = OEISTRU.DGEWE;                                    06030013
         CALL CONVERT_DATUM;                                            06040013
         DGEWE_10 = OUTPUT_DATE;                                        06050013
                                                                        06060013
         INPUT_DATE = OEISTRU.DTRANS;                                   06070013
         CALL CONVERT_DATUM;                                            06080013
         DTRANS_10 = OUTPUT_DATE;                                       06090013
                                                                        06100013
         INPUT_DATE = OEISTRU.DKAUF;                                    06110013
         CALL CONVERT_DATUM;                                            06120013
         DKAUF_10 = OUTPUT_DATE;                                        06130013
                                                                        06140013
          /*----------------------------------------------------------*/06150013
          /*  PRUEFEN, OB IDATE, DKAUF, DTRANS ZUKUENFTIG.            */06160013
          /*  DIESE DATUEMER DUERFEN NUR DANN ALS EFFECTIVE_DATE VER- */06170013
          /*  WENDET WERDEN, WENN SIE   N I C H T   ZUKUENFTIG SIND   */06180013
          /*----------------------------------------------------------*/06190013
         IF IDATE_10 > INT_AREA.RUN_DATE            /*IDATE ZUKUENFTIG*/06200013
            THEN FUTURE_IDATE = '1'B;                                   06210013
            ELSE FUTURE_IDATE = '0'B;                                   06220013
                                                                        06230013
         IF DKAUF_10 > INT_AREA.RUN_DATE            /*DKAUF ZUKUENFTIG*/06240013
            THEN FUTURE_DKAUF = '1'B;                                   06250013
            ELSE FUTURE_DKAUF = '0'B;                                   06260013
                                                                        06270013
         IF DTRANS_10 > INT_AREA.RUN_DATE          /*DTRANS ZUKUENFTIG*/06280013
            THEN FUTURE_DTRANS = '1'B;                                  06290013
            ELSE FUTURE_DTRANS = '0'B;                                  06300013
                                                                        06310013
-         /*----------------------------------------------------------*/06320013
          /*      ERSTELLEN HW PRODUCT RECORD                         */06330013
          /*----------------------------------------------------------*/06340013
         HW_PRODUCT            = '';                                    06350013
         HW_PRODUCT.INDNULL(*) = 0;                                     06360013
         HW_PRODUCT            = DATAREC, BY NAME;                      06370013
         HW_PRODUCT.DATA.PRODUCT_TYPE     = OEISTRU.TYPE;               06380013
         HW_PRODUCT.DATA.ORIGIN           = OEISTRU.OR;                 06390013
         HW_PRODUCT.DATA.SEQUENCE_NUMBER  = '00' || OEISTRU.SERL;       06400013
         HW_PRODUCT.DATA.COUNTRY_NUMBER   = '724';                      06410013
         HW_PRODUCT.DATA.LAST_CHANGE_DATE = '';                         06420013
                                                                        06430013
         WRITE FILE (RCBBCA0) FROM (HW_PRODUCT);                        06440013
         Z_TAB(10).ANZ = Z_TAB(10).ANZ + 1;                             06450013
         HASH_FIELD = SUBSTR(HW_PRODUCT.DATA.SEQUENCE_NUMBER,3,4);      06460013
         CALL RCB018M (HASH_FIELD,                                      06470013
                       HASH_TOTAL.RCBBCA0,                              06480013
                       PTR_INT_AREA);                                   06490013
                                                                        06500013
-         /*----------------------------------------------------------*/06510013
          /*      ERSTELLEN HW STATUS RECORD                          */06520013
          /*----------------------------------------------------------*/06530013
         HW_STATUS            = '';                                     06540013
         HW_STATUS.INDNULL(*) = 0;                                      06550013
         HW_STATUS            = DATAREC, BY NAME;                       06560013
         HW_STATUS.DATA.PRODUCT_TYPE     = OEISTRU.TYPE;                06570013
         HW_STATUS.DATA.ORIGIN           = OEISTRU.OR;                  06580013
         HW_STATUS.DATA.SEQUENCE_NUMBER  = '00' || OEISTRU.SERL;        06590013
         HW_STATUS.DATA.COUNTRY_NUMBER   = '724';                       06600013
         HW_STATUS.DATA.STATUS           = OEISTRU.ISTAT;               06610013
         HW_STATUS.DATA.SOURCE_INDICATOR = 'S';                         06620013
         HW_STATUS.DATA.LAST_CHANGE_DATE = '';                          06630013
         HW_STATUS.DATA.END_DATE         = '';                          06640013
                                                                        06650013
         IF FUTURE_IDATE = '1'B                  /*BEI ZUKUENFT. IDATE*/06660013
            THEN HW_STATUS.DATA.EFFECTIVE_DATE   /* ->EFF_DATE=RUNDATE*/06670013
                          = INT_AREA.RUN_DATE;                          06680013
            ELSE HW_STATUS.DATA.EFFECTIVE_DATE                          06690013
                          = IDATE_10;                                   06700013
                                                                        06710013
         WRITE FILE (RCBBCA2) FROM (HW_STATUS);                         06720013
         Z_TAB(11).ANZ = Z_TAB(11).ANZ + 1;                             06730013
         HASH_FIELD = SUBSTR(HW_STATUS.DATA.SEQUENCE_NUMBER,3,4);       06740013
         CALL RCB018M (HASH_FIELD,                                      06750013
                       HASH_TOTAL.RCBBCA2,                              06760013
                       PTR_INT_AREA);                                   06770013
                                                                        06780013
-         /*----------------------------------------------------------*/06790013
          /*      ERSTELLEN OU/HW PRODUCT RECORD                      */06800013
          /*----------------------------------------------------------*/06810013
         OU_HW            = '';                                         06820013
         OU_HW.INDNULL(*) = 0;                                          06830013
         OU_HW            = DATAREC, BY NAME;                           06840013
         OU_HW.DATA.COUNTRY_NUMBER    = '724';                          06850013
         OU_HW.DATA.PRODUCT_TYPE      = OEISTRU.TYPE;                   06860013
         OU_HW.DATA.ORIGIN            = OEISTRU.OR;                     06870013
         OU_HW.DATA.SEQUENCE_NUMBER   = '00' || OEISTRU.SERL;           06880013
         OU_HW.DATA.LAST_CHANGE_DATE  = '';                             06890013
         OU_HW.DATA.END_DATE          = '';                             06900013
                                                                        06910013
         IF OEISTRU.TERR ¬= '0000'                                      06920013
          & OEISTRU.TERR ¬= '    '                                      06930013
            THEN OU_HW.DATA.OU_CODE = OEISTRU.TERR ;  /*C0073-1002 */   06940013
            ELSE IF OEISTRU.CUBO ¬= '0000'                              06950013
                  & OEISTRU.CUBO ¬= '    '                              06960013
                    THEN OU_HW.DATA.OU_CODE = OEISTRU.CUBO;             06970013
                    ELSE OU_HW.DATA.OU_CODE = '';                       06980013
                                                                        06990013
            /*--------------------------------------------------------*/07000013
            /*   WENN TOS AUS CEOEI NOCH NICHT IN T110 EXTRAKT OLD    */07010013
            /*   -> FUELLEN EFF_DATE MIT RUNDATE ODER IDATE           */07020013
            /*   WENN TOS AUS CEOEI BEREITS IN T110 EXTR OLD VORH.    */07030013
            /*   -> EFF_DATE = BLANK                                  */07040013
            /*   GLEICHE LOGIK GILT FUER HW_REAL UND HW_MOD RECORDS,  */07050013
            /*   -> ZUWEISEN OU_HW.EFFDATE IN HW_REAL./HW_MOD.EFFDATE */07060013
            /*--------------------------------------------------------*/07070013
         IF TOSGEFU = '0'B                                              07080013
           THEN DO;                                                     07090013
              IF FUTURE_IDATE = '1'B             /*BEI ZUKUENFT. IDATE*/07100013
                 THEN OU_HW.DATA.EFFECTIVE_DATE  /* ->EFF_DATE=RUNDATE*/07110013
                           = INT_AREA.RUN_DATE;                         07120013
                 ELSE OU_HW.DATA.EFFECTIVE_DATE                         07130013
                           = IDATE_10;                                  07140013
           END;                                                         07150013
           ELSE OU_HW.DATA.EFFECTIVE_DATE = '';                         07160013
                                                                        07170013
                                                                        07180013
         WRITE FILE (RCBBCA3) FROM (OU_HW);                             07190013
         Z_TAB(12).ANZ = Z_TAB(12).ANZ + 1;                             07200013
         HASH_FIELD = SUBSTR(OU_HW.DATA.SEQUENCE_NUMBER,3,4);           07210013
         CALL RCB018M (HASH_FIELD,                                      07220013
                       HASH_TOTAL.RCBBCA3,                              07230013
                       PTR_INT_AREA);                                   07240013
                                                                        07250013
-         /*----------------------------------------------------------*/07260013
          /*       ERSTELLEN HW/CUSTOMER RECORD                       */07270013
          /*----------------------------------------------------------*/07280013
         HW_CUST            = '';                                       07290013
         HW_CUST.INDNULL(*) = 0;                                        07300013
         HW_CUST            = DATAREC, BY NAME;                         07310013
         HW_CUST.DATA.COUNTRY_NUMBER     = '724';                       07320013
         HW_CUST.DATA.PRODUCT_TYPE       = OEISTRU.TYPE;                07330013
         HW_CUST.DATA.ORIGIN             = OEISTRU.OR;                  07340013
         HW_CUST.DATA.SEQUENCE_NUMBER    = '00' || OEISTRU.SERL;        07350013
         HW_CUST.DATA.CUSTOMER_NUMBER    = '00' || OEISTRU.CUNR;        07360013
         HW_CUST.DATA.TYPE_OF_RELATION   = 'U';                         07370013
         HW_CUST.DATA.MARKETING_INSTDAT  = IDATE_10;                    07380013
         HW_CUST.DATA.SCHED_REMOVAL_DATE = '';                          07390013
         HW_CUST.DATA.LAST_CHANGE_DATE   = '';                          07400013
         HW_CUST.DATA.END_DATE           = '';                          07410013
                                                                        07420013
         IF DTRANS_10 ¬= ''                                             07430013
            THEN IF FUTURE_DTRANS = '1'B                                07440013
                   THEN HW_CUST.DATA.EFFECTIVE_DATE  /*BEI ZUK. DTRANS*/07450013
                               = INT_AREA.RUN_DATE;  /*EFFDATE=RUNDATE*/07460013
                   ELSE HW_CUST.DATA.EFFECTIVE_DATE                     07470013
                               = DTRANS_10;                             07480013
            ELSE DO;                                                    07490013
              IF FUTURE_IDATE = '1'B                /*BEI ZUK. IDATE  */07500013
                 THEN HW_CUST.DATA.EFFECTIVE_DATE   /*EFF_DATE=RUNDATE*/07510013
                             = INT_AREA.RUN_DATE;                       07520013
                 ELSE HW_CUST.DATA.EFFECTIVE_DATE                       07530013
                             = IDATE_10;                                07540013
            END;                                                        07550013
                                                                        07560013
         IF HW_CUST.DATA.MARKETING_INSTDAT  = ''          /*NULL      */07570013
            THEN HW_CUST_NULL_T190.MARKETING_INSTDAT  = -1;             07580013
         IF HW_CUST.DATA.SCHED_REMOVAL_DATE = ''                        07590013
            THEN HW_CUST_NULL_T190.SCHED_REMOVAL_DATE = -1;             07600013
                                                                        07610013
         WRITE FILE (RCBBCA4) FROM (HW_CUST);                           07620013
         Z_TAB(13).ANZ = Z_TAB(13).ANZ + 1;                             07630013
         HASH_FIELD = SUBSTR(HW_CUST.DATA.SEQUENCE_NUMBER,3,4);         07640013
         CALL RCB018M (HASH_FIELD,                                      07650013
                       HASH_TOTAL.RCBBCA4,                              07660013
                       PTR_INT_AREA);                                   07670013
                                                                        07680013
                                                                        07690013
-         /*----------------------------------------------------------*/07700013
          /*      ERSTELLEN HW SUPPLY CONTRACT RECORD                 */07710013
          /*        (WARRANTY ODER MAINTENANCE ODER DUMMY RECORD.     */07720013
          /*         AUS DUMMY RECORD ERSTELLT CEDS EINEN RECORD MT   */07730013
          /*         TYPE_OF_MAINTENANCE 3)                           */07740013
          /*----------------------------------------------------------*/07750013
         HW_SUPPLY            = '';                                     07760013
         HW_SUPPLY.INDNULL(*) = 0;                                      07770013
         HW_SUPPLY            = DATAREC, BY NAME;                       07780013
         HW_SUPPLY.DATA.PRODUCT_TYPE      = OEISTRU.TYPE;               07790013
         HW_SUPPLY.DATA.ORIGIN            = OEISTRU.OR;                 07800013
         HW_SUPPLY.DATA.SEQUENCE_NUMBER   = '00' || OEISTRU.SERL;       07810013
         HW_SUPPLY.DATA.COUNTRY_NUMBER    = '724';                      07820013
         HW_SUPPLY.DATA.WARRANTY_EXP_DATE = DGEWE_10;                   07830013
         HW_SUPPLY.DATA.SOURCE_INDICATOR  = ' ';                        07840013
         HW_SUPPLY.DATA.LAST_CHANGE_DATE  = '';                         07850013
         HW_SUPPLY_NULL_T220.SERVICE_LVL_CODE   = -1;                   07860013
         HW_SUPPLY_NULL_T220.F_TYPE_OF_WARRANTY = -1; /*QF-AK 3.3 FW*/  07870014
         HW_SUPPLY_NULL_T220.F_SPLT_DATE        = -1;                   07880013
         HW_SUPPLY_NULL_T220.SERVICE_LVL_CODE_2 = -1;/*A10-11 - 030A */ 07881022
                                                                        07890013
         SELECT;                                                        07900013
                                                                        07910013
            WHEN (OEISTRU.GARKL ¬= ' ' &                    /*GARANTIE*/07920013
                  DGEWE_10 >= INT_AREA.RUN_DATE)                        07930013
             DO;                                                        07940013
                                                                        07950013
               TWO_RECORDS = '1'B;                                      07960013
                                                                        07970013
                 /***  WARRANTY REC. FUER GARANTIEZEITRAUM  ***/        07980013
                                                                        07990013
               HW_SUPPLY.DATA.TYPE_OF_MAINT = ' ';                      08000013
                                                                        08010013
               IF OEISTRU.GARKL = 'Z'                       /*AIM #347*/08020013
                  THEN HW_SUPPLY.DATA.TYPE_OF_WARRANTY = TOW('A');      08030013
                  ELSE HW_SUPPLY.DATA.TYPE_OF_WARRANTY =                08040013
                                                     TOW(OEISTRU.GARKL);08050013
                                                                        08060013
               IF FUTURE_IDATE = '1'B                /*BEI ZUK. IDATE */08070013
                  THEN HW_SUPPLY.DATA.EFFECTIVE_DATE /*EFFDATE=RUNDATE*/08080013
                                = INT_AREA.RUN_DATE;                    08090013
                  ELSE DO;                                              08100013
                     IF (DKAUF_10 ¬= ''        &                        08110013
                         DKAUF_10 >= IDATE_10  &                        08120013
                         DKAUF_10 <= DGEWE_10)                          08130013
                       THEN IF FUTURE_DKAUF = '1'B                      08140013
                              THEN HW_SUPPLY.DATA.EFFECTIVE_DATE        08150013
                                            = INT_AREA.RUN_DATE;        08160013
                              ELSE HW_SUPPLY.DATA.EFFECTIVE_DATE        08170013
                                            = DKAUF_10;                 08180013
                       ELSE HW_SUPPLY.DATA.EFFECTIVE_DATE               08190013
                                     = IDATE_10;                        08200013
                  END;                                                  08210013
                                                                        08220013
               HW_SUPPLY_NULL_T220.TYPE_OF_MAINT = -1;                  08230013
                                                                        08240013
                 /***  DUMMY-RECORD FUER ZEITRAUM NACH GARANTIE ***/    08250013
                                                                        08260013
               HW_SUPPLY_2            = '';                             08270013
               HW_SUPPLY_2.INDNULL(*) = 0;                              08280013
               HW_SUPPLY_2            = DATAREC, BY NAME;               08290013
               HW_SUPPLY_2.DATA       = HW_SUPPLY.DATA, BY NAME;        08300013
                                                                        08310013
               HW_SUPPLY_2.DATA.TYPE_OF_MAINT    = ' ';                 08320013
               HW_SUPPLY_2.DATA.TYPE_OF_WARRANTY = TOW(LOW(1));         08330013
               HW_SUPPLY_2.DATA.END_DATE         = '9999-12-31';        08340013
                                                                        08350013
               HW_SUPPLY_2_NULL_T220.TYPE_OF_MAINT = -1;                08360013
                                                                        08370013
               HW_SUPPLY_2_NULL_T220.SERVICE_LVL_CODE = -1;             08380013
       HW_SUPPLY_2_NULL_T220.F_TYPE_OF_WARRANTY = -1; /*QF-AK 3.3 FW*/  08390014
       HW_SUPPLY_2_NULL_T220.F_SPLT_DATE        = -1; /*QF-AK 3.3 FW*/  08400014
       HW_SUPPLY_2_NULL_T220.SERVICE_LVL_CODE_2 = -1;/*A10-11 - 030A */ 08401022
                                                                        08410013
                                                                        08420013
 /********************************************************************/ 08430013
 /*                                                                  */ 08440013
 /*       BEGINN AENDERUNG BZGL. AIM REQ. 410                        */ 08450013
 /*       BEGINN AENDERUNG BZGL. AIM REQ. 410                        */ 08460013
 /*                                                                  */ 08470013
 /********************************************************************/ 08480013
             /*------------------------------------------------------*/ 08490013
             /* PRUEFEN IN DER INTERNEN TABELLE "TB_T400", OB        */ 08500013
             /* FUER TYPE/MODELL EIN EINTRAG BESTEHT.                */ 08510013
             /* WENN JA                                              */ 08520013
             /*   ERMITTLE GARANTIE BEGINN DATUM DES                 */ 08530013
             /*   "SERVICE_LVL_CODE_2"                               */ 08540013
             /*   (INSTALLATIONSDATUM + "TB_T400.WARRANTY_DURATN_1") */ 08550013
             /*   * PRUEFEN                                          */ 08560013
             /*     ERMITTELTES DATUM <= RUNDATE (INT_AREA.RUN_DATE) */ 08570013
             /*     - WENN JA                                        */ 08580013
             /*       UEBERNEHME "TB_T400.SERVICE_LVL_CODE_2(I0)" IN */ 08590013
             /*       "HW_SUPPLY.DATA.SERVICE_LVL_CODE"              */ 08600013
             /*       UND                                            */ 08610013
             /*       "TB_T400.SLC2_NULLIND(I0)"   IN                */ 08620013
             /*       "HW_SUPPLY_NULL_T220.SERVICE_LVL_CODE"         */ 08630013
             /*   * PRUEFEN                                          */ 08640013
             /*     ERMITTELTES DATUM > RUNDATE (INT_AREA.RUN_DATE)  */ 08650013
             /*     - WENN JA                                        */ 08660013
             /*       UEBERNEHME "TB_T400.SERVICE_LVL_CODE_1(I0)" IN */ 08670013
             /*       "HW_SUPPLY.DATA.SERVICE_LVL_CODE"              */ 08680013
             /*       UND                                            */ 08690013
             /*       "TB_T400.SLC1_NULLIND(I0)"   IN                */ 08700013
             /*       "HW_SUPPLY_NULL_T220.SERVICE_LVL_CODE"         */ 08710013
             /*------------------------------------------------------*/ 08720013
                                                                        08730013
               XTYPMOD = OEISTRU.TYPE || OEISTRU.MOD;                   08740013
                                                                        08750013
               CALL SUG421M;                                            08760013
                                                                        08770013
               IF XTYPMOD = TB_T400.PRODUCT_TYPE(I0)                    08780013
                         || TB_T400.MODEL_NUMBER(I0)                    08790013
                  THEN                                                  08800013
                    DO;                                                 08810013
                                                                        08820013
          /*----------------------------------------------------------*/08830013
          /*---          ERMITTELN GARANTIE BEGINN DATUM           ---*/08840013
          /*----------------------------------------------------------*/08850013
                                                                        08860013
                      DGEWE_PER = TB_T400.WARRANTY_DURATN_1(I0);        08870013
                                                                        08880013
                      IF SUBSTR(OEISTRU.IDATE,1,2)  >='50'              08890013
                         THEN IDATE_JJJJ                                08900013
                              = '19' || SUBSTR(OEISTRU.IDATE,1,2);      08910013
                      ELSE    IDATE_JJJJ                                08920013
                              = '20' || SUBSTR(OEISTRU.IDATE,1,2);      08930013
                                                                        08940013
                      IDATE_MM = SUBSTR(OEISTRU.IDATE,3,2);             08950013
                                                                        08960013
                      IDATE_TT = SUBSTR(OEISTRU.IDATE,5,2);             08970013
                                                                        08980013
                      MONAT_PIC = IDATE_MM + DGEWE_PER;                 08990013
                                                                        09000013
                      JAHRE_PIC = MONAT_PIC / 12;                       09010013
                                                                        09020013
                      IDATE_MM  = MOD(MONAT_PIC,12);                    09030013
                                                                        09040013
                      IF IDATE_MM = '00'                                09050013
                         THEN DO;                                       09060013
                                JAHRE_PIC = JAHRE_PIC - 1;              09070013
                                IDATE_MM  = '12';                       09080013
                              END;                                      09090013
                                                                        09100013
                      IDATE_JJJJ = IDATE_JJJJ + JAHRE_PIC;              09110013
                                                                        09120013
                      DATUM = IDATE_JJJJ || IDATE_MM || IDATE_TT;       09130013
                      TAGE  = '    -1';                                 09140013
                                                                        09150013
                      ERG_DATUM = SCCA02M (DATUM,TAGE);                 09160013
                                                                        09170013
                                                                        09180013
                      SUBSTR(VERGL_DATUM,5,1) = '-';                    09190013
                      SUBSTR(VERGL_DATUM,8,1) = '-';                    09200013
                                                                        09210013
                      SUBSTR(VERGL_DATUM,1,4)                           09220013
                      = SUBSTR(ERG_DATUM,1,4);                          09230013
                                                                        09240013
                      SUBSTR(VERGL_DATUM,6,2)                           09250013
                      = SUBSTR(ERG_DATUM,5,2);                          09260013
                                                                        09270013
                      SUBSTR(VERGL_DATUM,9,2)                           09280013
                      = SUBSTR(ERG_DATUM,7,2);                          09290013
                                                                        09300013
                                                                        09310028
     /* TRE 80315    IF VERGL_DATUM <= INT_AREA.RUN_DATE                09320030
                         THEN                                           09330013
                           DO;                                          09340013
                             HW_SUPPLY.DATA.SERVICE_LVL_CODE            09350013
                             = TB_T400.SERVICE_LVL_CODE_2(I0);          09360013
                                                                        09370013
                             HW_SUPPLY_NULL_T220.SERVICE_LVL_CODE       09380013
                             = TB_T400.SLC2_NULLIND(I0);                09390013
                                                                        09400013
                           END;                                         09410013
                                                                        09420013
                      IF VERGL_DATUM > INT_AREA.RUN_DATE                09430013
                         THEN                                           09440013
                           DO;       TREC 80315 */                      09450030
                            HW_SUPPLY.DATA.SERVICE_LVL_CODE             09460028
                             = TB_T400.SERVICE_LVL_CODE_1(I0);          09470013
                                                                        09480013
                             HW_SUPPLY_NULL_T220.SERVICE_LVL_CODE       09490013
                             = TB_T400.SLC1_NULLIND(I0);                09500013
                                                                        09510013
         /* TREC 80315     END;   TREC 80315  */                        09520030
                    END;              /* ENDE MATCH TYPE/MOD IN T400 */ 09530013
                                                                        09540013
 /********************************************************************/ 09550013
 /*                                                                  */ 09560013
 /*       ENDE AENDERUNG BZGL. REQ. 410                              */ 09570013
 /*       ENDE AENDERUNG BZGL. REQ. 410                              */ 09580013
 /*                                                                  */ 09590013
 /********************************************************************/ 09600013
                                                                        09610013
          /*----------------------------------------------------------*/09620013
                                                                        09630013
               CALL DATUM_PLUS1;                     /*RECHNEN DGEWE+1*/09640013
                                                                        09650013
               HW_SUPPLY_2.DATA.EFFECTIVE_DATE    = DGEWE_PLUS1;        09660013
               HW_SUPPLY_2.DATA.WARRANTY_EXP_DATE = DGEWE_OK;           09670013
               HW_SUPPLY.DATA.WARRANTY_EXP_DATE   = DGEWE_OK;           09680013
               HW_SUPPLY.DATA.END_DATE            = DGEWE_OK;           09690013
                                             /*SOC QF-AK 3.3 FW       */09700014
         SWITCH_F_TOW = '0'B;                                           09710013
         SWITCH_F_SLC = '0'B;                                           09720013
         CALL RCBBCAM_RX11_RETRIEVE_FLEX_WARR;                          09730013
         IF SWITCH_F_TOW = '0'B                                         09740013
         THEN                                                           09750013
           DO;                                                          09760013
           END;                                                         09770013
         IF SWITCH_F_TOW = '1'B          /* FLEXIBLE WARRANTY MACHINE*/ 09780013
         /*    IDATE_10 ¬= ' ')   */                                    09790013
         THEN                                                           09800013
           DO;                                                          09810013
             HW_SUPPLY.DATA.F_TYPE_OF_WARRANTY = WRK_F_TOW;             09820013
             HW_SUPPLY_NULL_T220.F_TYPE_OF_WARRANTY = 99;               09830013
             WRK_F_SPLT_DATE = RCBBCAM_CALC_DATE(                       09840013
                          IDATE_10,'M',TB_RCBV690.BRAND_WARRANTY_MNT);  09850013
             HW_SUPPLY.DATA.F_SPLT_DATE = RCBBCAM_CALC_DATE(            09860013
                          WRK_F_SPLT_DATE,'D',-1);                      09870013
             HW_SUPPLY_NULL_T220.F_SPLT_DATE  =  99;                    09880013
             IF (HW_SUPPLY.DATA.F_SPLT_DATE <=                          09890013
                                     HW_SUPPLY.DATA.WARRANTY_EXP_DATE)  09900013
             THEN                                                       09910013
               DO;                                                      09920013
                HW_SUPPLY_NULL_T220.F_SPLT_DATE  =  0;                  09930013
                HW_SUPPLY_NULL_T220.F_TYPE_OF_WARRANTY = 0;             09940013
               END;                                                     09950013
             IF (TB_RCBV690.SERVICE_LVL_CODE ¬= '' &                    09960013
                 HW_SUPPLY.DATA.F_SPLT_DATE  <=                         09970013
                 HW_SUPPLY.DATA.WARRANTY_EXP_DATE)/* EOC CEDS00000345 */09980013
             THEN                                                       09990013
               DO;                                                      10000013
                 HW_SUPPLY.DATA.SERVICE_LVL_CODE =                      10010013
                                TB_RCBV690.SERVICE_LVL_CODE;            10020013
                                                 /*SOC A10-11 - 030A */ 10020122
                 HW_SUPPLY.DATA.SERVICE_LVL_CODE_2 =                    10021022
                                HW_SUPPLY.DATA.SERVICE_LVL_CODE;        10022020
                                                 /*EOC A10-11 - 030A */ 10023022
                 SWITCH_F_SLC = '1'B;                                   10030013
                 HW_SUPPLY_NULL_T220.SERVICE_LVL_CODE   = 0;/*QF-AK3.3*/10040014
                 HW_SUPPLY_NULL_T220.SERVICE_LVL_CODE_2  = 0;           10041022
                                                  /* A10-11 - 030A */   10042020
               END;                                                     10050013
           END;                                                         10060013
         ELSE                      /* NOT A FLEXIBLE WARRANTY MACHINE */10070013
           DO;                                                          10080013
           HW_SUPPLY.DATA.F_TYPE_OF_WARRANTY = '';                      10090013
           HW_SUPPLY.DATA.F_SPLT_DATE = '';                             10100013
           END;                                                         10110013
                                             /*EOC QF-AK 3.3 FW       */10120014
                                                                        10130013
             END;                                       /*END GARANTIE*/10140013
                                                                        10150013
                                                                        10160013
            WHEN (OEISTRU.GARKL ¬= ' ' &                  /*GARANTIE  */10170013
                  DGEWE_10 ¬= ''       &                  /*ABGELAUFEN*/10180013
                  DGEWE_10 < INT_AREA.RUN_DATE)                         10190013
             DO;                                                        10200013
                                                                        10210013
               TWO_RECORDS = '0'B;                /*ERST. DUMMY-RECORD*/10220013
                                                                        10230013
               HW_SUPPLY.DATA.TYPE_OF_MAINT    = ' ';                   10240013
               HW_SUPPLY.DATA.TYPE_OF_WARRANTY = TOW(LOW(1));           10250013
               HW_SUPPLY.DATA.END_DATE         = '9999-12-31';          10260013
                                                                        10270013
               HW_SUPPLY_NULL_T220.TYPE_OF_MAINT = -1;                  10280013
                                                                        10290013
               IF (DKAUF_10 ¬= ''  &                                    10300013
                   DKAUF_10 > DGEWE_10)                                 10310013
                  THEN IF FUTURE_DKAUF = '1'B                           10320013
                         THEN HW_SUPPLY.DATA.EFFECTIVE_DATE             10330013
                                       = INT_AREA.RUN_DATE;             10340013
                         ELSE HW_SUPPLY.DATA.EFFECTIVE_DATE = DKAUF_10; 10350013
                  ELSE DO;                                              10360013
                     CALL DATUM_PLUS1;               /*RECHNEN DGEWE+1*/10370013
                     HW_SUPPLY.DATA.EFFECTIVE_DATE                      10380013
                                   = DGEWE_PLUS1;                       10390013
                     HW_SUPPLY.DATA.WARRANTY_EXP_DATE                   10400013
                                   = DGEWE_OK;                          10410013
                  END;                                                  10420013
                                                                        10430013
             END;                            /*END GARANTIE ABGELAUFEN*/10440013
                                                                        10450013
                                                                        10460013
            WHEN (OEISTRU.GARKL ¬= ' ' &                  /* PER CALL */10470013
                  DGEWE_10 = '')                                        10480013
             DO;                                                        10490013
                                                                        10500013
               TWO_RECORDS = '0'B;                                      10510013
               IF (OEISTRU.TM = '2') |                                  10520013
                  (OEISTRU.TM = ' ')                                    10530013
                  THEN HW_SUPPLY.DATA.TYPE_OF_MAINT = '3';              10540013
                  ELSE HW_SUPPLY.DATA.TYPE_OF_MAINT = OEISTRU.TM;       10550013
               HW_SUPPLY.DATA.TYPE_OF_WARRANTY = TOW(' ');              10560013
               HW_SUPPLY.DATA.END_DATE         = '9999-12-31';          10570013
                                                                        10580013
               IF FUTURE_IDATE = '1'B                                   10590013
                  THEN HW_SUPPLY.DATA.EFFECTIVE_DATE                    10600013
                                = INT_AREA.RUN_DATE;                    10610013
                  ELSE DO;                                              10620013
                     IF (DKAUF_10 ¬= ''  &                              10630013
                         DKAUF_10 > IDATE_10)                           10640013
                        THEN IF FUTURE_DKAUF = '1'B                     10650013
                               THEN HW_SUPPLY.DATA.EFFECTIVE_DATE       10660013
                                             = INT_AREA.RUN_DATE;       10670013
                               ELSE HW_SUPPLY.DATA.EFFECTIVE_DATE       10680013
                                             = DKAUF_10;                10690013
                        ELSE HW_SUPPLY.DATA.EFFECTIVE_DATE              10700013
                                      = IDATE_10;                       10710013
                  END;                                                  10720013
                                                                        10730013
               HW_SUPPLY_NULL_T220.TYPE_OF_WARRANTY = -1;               10740013
                                                                        10750013
             END;                                                       10760013
                                                                        10770013
                                                                        10780013
            WHEN (OEISTRU.GARKL = ' ')                 /* MAINTENANCE */10790013
             DO;                                                        10800013
                                                                        10810013
               TWO_RECORDS = '0'B;                                      10820013
                                                                        10830013
               IF (OEISTRU.TM = '2') |                                  10840013
                  (OEISTRU.TM = ' ')                                    10850013
                  THEN HW_SUPPLY.DATA.TYPE_OF_MAINT = '3';              10860013
                  ELSE HW_SUPPLY.DATA.TYPE_OF_MAINT = OEISTRU.TM;       10870013
               HW_SUPPLY.DATA.TYPE_OF_WARRANTY      = TOW(' ');         10880013
               HW_SUPPLY.DATA.END_DATE              = '9999-12-31';     10890013
                                                                        10900013
               HW_SUPPLY_NULL_T220.TYPE_OF_WARRANTY = -1;               10910013
                                                                        10920013
               IF DKAUF_10 ¬= ''                                        10930013
                  THEN IF FUTURE_DKAUF = '1'B                           10940013
                          THEN HW_SUPPLY.DATA.EFFECTIVE_DATE            10950013
                                        = INT_AREA.RUN_DATE;            10960013
                          ELSE HW_SUPPLY.DATA.EFFECTIVE_DATE = DKAUF_10;10970013
                  ELSE DO;                                              10980013
                     IF DGEWE_10 ¬= ''                                  10990013
                        THEN DO;                                        11000013
                           IF DGEWE_10 < INT_AREA.RUN_DATE              11010013
                              THEN DO;                                  11020013
                                 CALL DATUM_PLUS1;                      11030013
                                 HW_SUPPLY.DATA.EFFECTIVE_DATE          11040013
                                          = DGEWE_PLUS1;                11050013
                                 HW_SUPPLY.DATA.WARRANTY_EXP_DATE       11060013
                                          = DGEWE_OK;                   11070013
                              END;                                      11080013
                              ELSE HW_SUPPLY.DATA.EFFECTIVE_DATE        11090013
                                            = INT_AREA.RUN_DATE;        11100013
                        END;                                            11110013
                        ELSE IF FUTURE_IDATE = '1'B                     11120013
                           THEN HW_SUPPLY.DATA.EFFECTIVE_DATE           11130013
                                         = INT_AREA.RUN_DATE;           11140013
                           ELSE HW_SUPPLY.DATA.EFFECTIVE_DATE           11150013
                                         = IDATE_10;                    11160013
                  END;                                                  11170013
                                                                        11180013
             END;                                    /*END MAINTENANCE*/11190013
                                                                        11200013
         END;                                           /* END SELECT */11210013
                                                                        11220013
                                                                        11230013
         IF HW_SUPPLY.DATA.WARRANTY_EXP_DATE = ''      /*NULL INDICAT.*/11240013
            THEN HW_SUPPLY_NULL_T220.WARRANTY_EXP_DATE = -1;            11250013
                                                                        11260013
                                                                        11270013
         WRITE FILE (RCBBCA5) FROM (HW_SUPPLY);                         11280013
         Z_TAB(14).ANZ = Z_TAB(14).ANZ + 1;                             11290013
         HASH_FIELD = SUBSTR(HW_SUPPLY.DATA.SEQUENCE_NUMBER,3,4);       11300013
         CALL RCB018M (HASH_FIELD,                                      11310013
                       HASH_TOTAL.RCBBCA5,                              11320013
                       PTR_INT_AREA);                                   11330013
                                                                        11340013
         IF TWO_RECORDS = '1'B                     /* ERSTELLEN 2. HW */11350013
            THEN DO;                               /* SUPP.CONTR. REC.*/11360013
               WRITE FILE (RCBBCA5) FROM (HW_SUPPLY_2);                 11370013
               Z_TAB(14).ANZ = Z_TAB(14).ANZ + 1;                       11380013
               HASH_FIELD =                                             11390013
                      SUBSTR(HW_SUPPLY_2.DATA.SEQUENCE_NUMBER,3,4);     11400013
               CALL RCB018M (HASH_FIELD,                                11410013
                             HASH_TOTAL.RCBBCA5,                        11420013
                             PTR_INT_AREA);                             11430013
            END;                                                        11440013
                                                                        11450013
-         /*----------------------------------------------------------*/11460013
          /*      ERSTELLEN REALIZATION OF HW PROD. OFFERING RECORD   */11470013
          /*----------------------------------------------------------*/11480013
         HW_REAL            = '';                                       11490013
         HW_REAL.INDNULL(*) = 0;                                        11500013
         HW_REAL            = DATAREC, BY NAME;                         11510013
         HW_REAL.DATA.PRODUCT_TYPE     = OEISTRU.TYPE;                  11520013
         HW_REAL.DATA.ORIGIN           = OEISTRU.OR;                    11530013
         HW_REAL.DATA.SEQUENCE_NUMBER  = '00' || OEISTRU.SERL;          11540013
         HW_REAL.DATA.COUNTRY_NUMBER   = '724';                         11550013
         HW_REAL.DATA.MODEL_NUMBER     = OEISTRU.MOD;                   11560013
         HW_REAL.DATA.LAST_CHANGE_DATE = '';                            11570013
         HW_REAL.DATA.END_DATE         = '';                            11580013
         HW_REAL.DATA.EFFECTIVE_DATE             /*UEBERNEHMEN EFFDATE*/11590013
                = OU_HW.DATA.EFFECTIVE_DATE;     /*AUS OU_HW RECORD   */11600013
                                                                        11610013
         WRITE FILE (RCBBCA8) FROM (HW_REAL);                           11620013
         Z_TAB(16).ANZ = Z_TAB(16).ANZ + 1;                             11630013
         HASH_FIELD = SUBSTR(HW_REAL.DATA.SEQUENCE_NUMBER,3,4);         11640013
         CALL RCB018M (HASH_FIELD,                                      11650013
                       HASH_TOTAL.RCBBCA8,                              11660013
                       PTR_INT_AREA);                                   11670013
                                                                        11680013
                                                                        11690013
-         /*----------------------------------------------------------*/11700013
          /*      ERSTELLEN MODIFIABLE INFO HW PRODUCT RECORD         */11710013
          /*----------------------------------------------------------*/11720013
         HW_MOD            = '';                                        11730013
         HW_MOD.INDNULL(*) = 0;                                         11740013
         HW_MOD            = DATAREC, BY NAME;                          11750013
         HW_MOD.DATA.PRODUCT_TYPE      = OEISTRU.TYPE;                  11760013
         HW_MOD.DATA.ORIGIN            = OEISTRU.OR;                    11770013
         HW_MOD.DATA.SEQUENCE_NUMBER   = '00' || OEISTRU.SERL;          11780013
         HW_MOD.DATA.COUNTRY_NUMBER    = '724';                         11790013
         HW_MOD.DATA.TYPE_OF_AGREEMENT = OEISTRU.TA;                    11800013
         HW_MOD.DATA.MARKET_RESP_CODE  = OEISTRU.MARC;                  11810013
         HW_MOD.DATA.DP_SYSTEM_NUMBER  = OEISTRU.SYSNR;                 11820013
         HW_MOD.DATA.INSTALLING_OU     = OEISTRU.TEAM || OEISTRU.VLKST; 11830013
         HW_MOD.DATA.SELLING_OU        = OEISTRU.CKGS || '   ';         11840013
         HW_MOD.DATA.CPU_TYPE          = OEISTRU.SYTY;                  11850013
         HW_MOD.DATA.LAST_CHANGE_DATE  = '';                            11860013
         HW_MOD.DATA.END_DATE          = '';                            11870013
         HW_MOD.DATA.EFFECTIVE_DATE              /*UEBERNEHMEN EFFDATE*/11880013
               = OU_HW.DATA.EFFECTIVE_DATE;      /*AUS OU_HW RECORD   */11890013
                                                                        11900013
         IF HW_MOD.DATA.TYPE_OF_AGREEMENT = ''            /* NULL     */11910013
            THEN HW_MOD_NULL_T380.TYPE_OF_AGREEMENT = -1;               11920013
         IF HW_MOD.DATA.MARKET_RESP_CODE  = ''                          11930013
            THEN HW_MOD_NULL_T380.MARKET_RESP_CODE  = -1;               11940013
         IF HW_MOD.DATA.DP_SYSTEM_NUMBER  = ''                          11950013
            THEN HW_MOD_NULL_T380.DP_SYSTEM_NUMBER  = -1;               11960013
         IF HW_MOD.DATA.INSTALLING_OU     = ''                          11970013
            THEN HW_MOD_NULL_T380.INSTALLING_OU     = -1;               11980013
         IF HW_MOD.DATA.SELLING_OU        = ''                          11990013
            THEN HW_MOD_NULL_T380.SELLING_OU        = -1;               12000013
                                                                        12010013
         WRITE FILE (RCBBCAB) FROM (HW_MOD);                            12020013
         Z_TAB(17).ANZ = Z_TAB(17).ANZ + 1;                             12030013
         HASH_FIELD = SUBSTR(HW_MOD.DATA.SEQUENCE_NUMBER,3,4);          12040013
         CALL RCB018M (HASH_FIELD,                                      12050013
                       HASH_TOTAL.RCBBCAB,                              12060013
                       PTR_INT_AREA);                                   12070013
                                                                        12080013
          /*----------------------------------------------------------*/12090013
          /***  ERSTELLEN PICD0-FILE                                ***/12100013
          /*----------------------------------------------------------*/12110013
         IF SUBSTR(OEISTRU.PICD,2,1) = '0'                              12120013
            THEN DO;                                                    12130013
               PICD = '';                                               12140013
               PICD.DP_SYSTEM_NUMBER   = OEISTRU.SYSNR;                 12150013
               PICD.PRODUCT_TYPE_HW    = OEISTRU.TYPE;                  12160013
               PICD.ORIGIN_HW          = OEISTRU.OR;                    12170013
               PICD.SEQUENCE_NUMBER_HW = '00' || OEISTRU.SERL;          12180013
               WRITE FILE (PICD0) FROM (PICD);                          12190013
               Z_TAB(18).ANZ = Z_TAB(18).ANZ + 1;                       12200013
            END;                                                        12210013
                                                                        12220013
      END;                                        /* END INSTALLATION */12230013
                                                                        12240013
                                                      /*--------------*/12250013
      WHEN ('0') DO;                                  /*   AUFTRAG    */12260013
                                                      /*--------------*/12270013
         Z_TAB(5).ANZ = Z_TAB(5).ANZ + 1;                               12280013
                                                                        12290013
          /*----------------------------------------------------------*/12300013
          /* KONVERTIEREN DREQ / DORDO (JJMMTT->JJJJ-MM-TT)           */12310013
          /*----------------------------------------------------------*/12320013
         INPUT_DATE = OEISTRU.DREQ;                                     12330013
         CALL CONVERT_DATUM;                                            12340013
         DREQ_10 = OUTPUT_DATE;                                         12350013
                                                                        12360013
         INPUT_DATE = OEISTRU.DORDO;                                    12370013
         CALL CONVERT_DATUM;                                            12380013
         DORDO_10 = OUTPUT_DATE;                                        12390013
                                                  /*------------------*/12400013
                                                  /*UNSERIALIZED ORDER*/12410013
         IF OEISTRU.LSMANR = ''                   /*------------------*/12420013
            THEN CALL WRITE_HW_IN_ORD;            /*ERSTELL. HW_IN_ORD*/12430013
                                                                        12440013
                                                                        12450013
            ELSE DO;                                /*----------------*/12460013
                                                    /*SERIALIZED ORDER*/12470013
                                                    /*----------------*/12480013
               Z_TAB(6).ANZ = Z_TAB(6).ANZ + 1;                         12490013
                                                                        12500013
                /*----------------------------------------------------*/12510013
                /* PRUEFEN, OB ZU DIESEM SERIALIZED ORDER BEREITS     */12520013
                /* EIN MASCHINENSATZ AUF OEI VORHANDEN IST.           */12530013
                /* WENN JA, WIRD DER SERIAL. ORDER NICHT VERARBEITET, */12540013
                /* ANSONSTEN WERDEN EIN HW PRODUCT, EIN HW PO IN ORDER*/12550013
                /* UND EIN REALIZATION OF HW PO RECORD UND DIE PICD0- */12560013
                /* FILE ERSTELLT.                                     */12570013
                /*----------------------------------------------------*/12580013
               VSAMKEY = OEISTRU.TYPE || OEISTRU.LSMANR;                12590013
               OEIIN   = '';                                            12600013
                                                                        12610013
               READ FILE (VSAMOEI)                                      12620013
                    INTO (OEIIN)                                        12630013
                    KEY  (VSAMKEY);                                     12640013
                                                                        12650013
               SELECT (OEICODE);                                        12660013
                  WHEN (0) DO;                          /*KEY VORHAND.*/12670013
                     Z_TAB(19).ANZ = Z_TAB(19).ANZ + 1;                 12680013
                  END;                                                  12690013
                                                                        12700013
                  WHEN (51) DO;                  /*KEY NICHT VORHANDEN*/12710013
                                                                        12720013
                     OEICODE = 0;                                       12730013
                     CALL WRITE_HW_IN_ORD;       /*ERST. HW PO IN ORD */12740013
                                                                        12750013
                      /*----------------------------------------------*/12760013
                      /*      ERSTELLEN HW PRODUCT RECORD             */12770013
                      /*----------------------------------------------*/12780013
                     HW_PRODUCT            = '';                        12790013
                     HW_PRODUCT.INDNULL(*) = 0;                         12800013
                     HW_PRODUCT            = DATAREC, BY NAME;          12810013
                     HW_PRODUCT.DATA.PRODUCT_TYPE = OEISTRU.TYPE;       12820013
                     HW_PRODUCT.DATA.ORIGIN                             12830013
                               = SUBSTR(OEISTRU.LSMANR,1,2);            12840013
                     HW_PRODUCT.DATA.SEQUENCE_NUMBER                    12850013
                               = '00' || SUBSTR(OEISTRU.LSMANR,3,5);    12860013
                     HW_PRODUCT.DATA.COUNTRY_NUMBER   = '724';          12870013
                     HW_PRODUCT.DATA.LAST_CHANGE_DATE = '';             12880013
                                                                        12890013
                     WRITE FILE (RCBBCA0) FROM (HW_PRODUCT);            12900013
                     Z_TAB(10).ANZ = Z_TAB(10).ANZ + 1;                 12910013
                     HASH_FIELD                                         12920013
                        = SUBSTR(HW_PRODUCT.DATA.SEQUENCE_NUMBER,3,4);  12930013
                     CALL RCB018M (HASH_FIELD,                          12940013
                                   HASH_TOTAL.RCBBCA0,                  12950013
                                   PTR_INT_AREA);                       12960013
                                                                        12970013
                      /*----------------------------------------------*/12980013
                      /*  ERSTELLEN REALIZATION OF HW PROD. OFF. REC. */12990013
                      /*----------------------------------------------*/13000013
                     HW_REAL            = '';                           13010013
                     HW_REAL.INDNULL(*) = 0;                            13020013
                     HW_REAL            = DATAREC, BY NAME;             13030013
                     HW_REAL.DATA.PRODUCT_TYPE = OEISTRU.TYPE;          13040013
                     HW_REAL.DATA.ORIGIN                                13050013
                            = SUBSTR(OEISTRU.LSMANR,1,2);               13060013
                     HW_REAL.DATA.SEQUENCE_NUMBER                       13070013
                            = '00' || SUBSTR(OEISTRU.LSMANR,3,5);       13080013
                     HW_REAL.DATA.COUNTRY_NUMBER   = '724';             13090013
                     HW_REAL.DATA.MODEL_NUMBER     = OEISTRU.MOD;       13100013
                     HW_REAL.DATA.LAST_CHANGE_DATE = '';                13110013
                     HW_REAL.DATA.END_DATE         = '';                13120013
                     HW_REAL.DATA.EFFECTIVE_DATE   = '';      /*AIM 10*/13130013
                                                                        13140013
                     WRITE FILE (RCBBCA8) FROM (HW_REAL);               13150013
                     Z_TAB(16).ANZ = Z_TAB(16).ANZ + 1;                 13160013
                     HASH_FIELD                                         13170013
                        = SUBSTR(HW_REAL.DATA.SEQUENCE_NUMBER,3,4);     13180013
                     CALL RCB018M (HASH_FIELD,                          13190013
                                   HASH_TOTAL.RCBBCA8,                  13200013
                                   PTR_INT_AREA);                       13210013
                                                                        13220013
                      /*----------------------------------------------*/13230013
                      /***  ERSTELLEN PICD0-FILE                    ***/13240013
                      /*----------------------------------------------*/13250013
                     IF SUBSTR(OEISTRU.PICD,2,1) = '0'                  13260013
                        THEN DO;                                        13270013
                           PICD = '';                                   13280013
                           PICD.DP_SYSTEM_NUMBER = OEISTRU.SYSNR;       13290013
                           PICD.PRODUCT_TYPE_HW  = OEISTRU.TYPE;        13300013
                           PICD.ORIGIN_HW                               13310013
                               = SUBSTR(OEISTRU.LSMANR,1,2);            13320013
                           PICD.SEQUENCE_NUMBER_HW                      13330013
                               = '00' || SUBSTR(OEISTRU.LSMANR,3,5);    13340013
                           WRITE FILE (PICD0) FROM (PICD);              13350013
                           Z_TAB(18).ANZ = Z_TAB(18).ANZ + 1;           13360013
                        END;                                            13370013
                                                                        13380013
                  END;                          /*END KEY NICHT IN OEI*/13390013
                                                                        13400013
                  OTHER DO;                                             13410013
                     PUT SKIP EDIT ('FEHLER BEIM LESEN MIT KEY ',       13420013
                                     VSAMKEY,' ONCODE = ',OEICODE)      13430013
                                   (A,A,A,P'99');                       13440013
                     SIGNAL ERROR;                                      13450013
                  END;                                                  13460013
                                                                        13470013
               END;                             /*END SELECT OEICODE  */13480013
            END;                                /*END SERIALIZED ORDER*/13490013
                                                                        13500013
      END;                                             /* END AUFTRAG */13510013
                                                                        13520013
                                                                        13530013
      OTHERWISE PUT SKIP EDIT                                           13540013
            ('TOS ',OEISTRU.TYPE,OEISTRU.OR,OEISTRU.SERL,               13550013
             ' NICHT VERARBEITET, DA STATUS ',OEISTRU.ISTAT)            13560013
            (A);                                                        13570013
                                                                        13580013
   END;                                             /*END SELECT ISTAT*/13590013
                                                                        13600013
1/*-------------------------------------------------------------------*/13610013
 /***    I N T E R N E   P R O Z E D U R E N                        ***/13620013
 /*-------------------------------------------------------------------*/13630013
 /*-------------------------------------------------------------------*/13640013
 /***    ERSTELLEN HW PRODUCT OFFERING IN ORDER RECORD              ***/13650013
 /*-------------------------------------------------------------------*/13660013
 WRITE_HW_IN_ORD: PROC;                                                 13670013
                                                                        13680013
   HW_IN_ORD            = '';                                           13690013
   HW_IN_ORD.INDNULL(*) = 0;                                            13700013
   HW_IN_ORD            = DATAREC, BY NAME;                             13710013
                                                                        13720013
   HW_IN_ORD.DATA.ORDER_REF_NUMBER   = OEISTRU.ORDNR;                   13730013
   HW_IN_ORD.DATA.PRODUCT_TYPE       = OEISTRU.TYPE;                    13740013
   HW_IN_ORD.DATA.MODEL_NUMBER       = OEISTRU.MOD;                     13750013
                                                                        13760013
   IF OEISTRU.LSMANR = ''                         /*UNSERIALIZED ORDER*/13770013
      THEN DO;                                                          13780013
         HW_IN_ORD.DATA.ORIGIN          = '';                           13790013
         HW_IN_ORD.DATA.SEQUENCE_NUMBER = '';                           13800013
      END;                                                              13810013
      ELSE DO;                                      /*SERIALIZED ORDER*/13820013
         HW_IN_ORD.DATA.ORIGIN = SUBSTR(OEISTRU.LSMANR,1,2);            13830013
         HW_IN_ORD.DATA.SEQUENCE_NUMBER                                 13840013
                       = '00' || SUBSTR(OEISTRU.LSMANR,3,5);            13850013
      END;                                                              13860013
   HW_IN_ORD.DATA.CUSTOMER_USER      = '00' || OEISTRU.CUNR;            13870013
   HW_IN_ORD.DATA.CUSTOMER_OWNER     = '';                              13880013
   HW_IN_ORD.DATA.CUST_REQ_ARRIVDATE = DREQ_10;                         13890013
   HW_IN_ORD.DATA.DP_SYSTEM_NUMBER   = OEISTRU.SYSNR;                   13900013
   HW_IN_ORD.DATA.MARKET_RESP_CODE   = OEISTRU.MARC;                    13910013
   HW_IN_ORD.DATA.COUNTRY_NUMBER     = '724';                           13920013
   HW_IN_ORD.DATA.INSTALLING_OU      = OEISTRU.TEAM || OEISTRU.VLKST;   13930013
   HW_IN_ORD.DATA.SELLING_OU         = OEISTRU.CKGS || '   ';           13940013
   HW_IN_ORD.DATA.SCHED_REMOVAL_DATE = '';                              13950013
   HW_IN_ORD.DATA.TYPE_OF_AGREEMENT  = OEISTRU.TA;                      13960013
   HW_IN_ORD.DATA.LAST_CHANGE_DATE   = '';                              13970013
   HW_IN_ORD.DATA.END_DATE           = '';                              13980013
                                                                        13990013
   IF DORDO_10 > INT_AREA.RUN_DATE      /*DORDO ZUKUENFTIG*/            14000013
      THEN HW_IN_ORD.DATA.ORDER_DATE = INT_AREA.RUN_DATE;               14010013
      ELSE HW_IN_ORD.DATA.ORDER_DATE = DORDO_10;                        14020013
                                                                        14030013
   IF OEISTRU.TERR ¬= '0000'                                            14040013
    & OEISTRU.TERR ¬= '    '                                            14050013
      THEN HW_IN_ORD.DATA.OU_CODE = OEISTRU.TERR ;       /*C0073-1002 */14060013
      ELSE IF OEISTRU.CUBO ¬= '0000'                                    14070013
            & OEISTRU.CUBO ¬= '    '                                    14080013
              THEN HW_IN_ORD.DATA.OU_CODE = OEISTRU.CUBO;/*C0073-1002 */14090013
              ELSE HW_IN_ORD.DATA.OU_CODE = '       ';                  14100013
                                                                        14110013
    /*-----------------  PRUEFEN, OB SCHDATE GUELTIG  ----------------*/14120013
   UNGUELTIG = '0'B;                                                    14130013
   DO J = 1 TO LEN_VERGLEICH BY 6 UNTIL (UNGUELTIG = '1'B);             14140013
      IF OEISTRU.SCHDATE = SUBSTR(VERGLEICH,J,6)             /*SCHDATE*/14150013
         THEN DO;                                            /*UNGUELT*/14160013
            HW_IN_ORD.DATA.SCHED_COMPL_DATE                  /*-> DREQ*/14170013
                          = DREQ_10;                         /*ZUWEIS.*/14180013
            UNGUELTIG = '1'B;                                           14190013
         END;                                                           14200013
   END;                                                                 14210013
   IF UNGUELTIG = '0'B                                     /* SCHDATE */14220013
      THEN DO;                                             /* GUELTIG */14230013
         INPUT_DATE = OEISTRU.SCHDATE;         /*KONVERTIEREN. SCHDATE*/14240013
         CALL CONVERT_DATUM;                   /*JJMMTT -> JJJJ-MM-TT */14250013
         HW_IN_ORD.DATA.SCHED_COMPL_DATE                                14260013
                       = OUTPUT_DATE;                                   14270013
      END;                                                              14280013
                                                                        14290013
   IF OEISTRU.GARKL ¬= ' '                                              14300013
      THEN DO;                                                          14310013
         HW_IN_ORD.DATA.TYPE_OF_WARRANTY = TOW(OEISTRU.GARKL);          14320013
         HW_IN_ORD.DATA.TYPE_OF_MAINT    = ' ';                         14330013
      END;                                                              14340013
      ELSE DO;                                                          14350013
         HW_IN_ORD.DATA.TYPE_OF_WARRANTY = TOW(' ');                    14360013
         IF (OEISTRU.TM = '2') |                                        14370013
            (OEISTRU.TM = ' ')                                          14380013
            THEN HW_IN_ORD.DATA.TYPE_OF_MAINT = '3';                    14390013
            ELSE HW_IN_ORD.DATA.TYPE_OF_MAINT = OEISTRU.TM;             14400013
      END;                                                              14410013
                                                                        14420013
                                                                        14430013
   IF HW_IN_ORD.ORIGIN             = '' &                     /* NULL */14440013
      HW_IN_ORD.SEQUENCE_NUMBER    = ''                       /*INDIC.*/14450013
      THEN DO;                                                          14460013
         HW_IN_ORD_NULL_T260.ORIGIN          = -1;                      14470013
         HW_IN_ORD_NULL_T260.SEQUENCE_NUMBER = -1;                      14480013
      END;                                                              14490013
   IF HW_IN_ORD.CUSTOMER_OWNER     = ''                                 14500013
      THEN HW_IN_ORD_NULL_T260.CUSTOMER_OWNER     = -1;                 14510013
   IF HW_IN_ORD.CUST_REQ_ARRIVDATE = ''                                 14520013
      THEN HW_IN_ORD_NULL_T260.CUST_REQ_ARRIVDATE = -1;                 14530013
   IF HW_IN_ORD.DP_SYSTEM_NUMBER   = ''                                 14540013
      THEN HW_IN_ORD_NULL_T260.DP_SYSTEM_NUMBER   = -1;                 14550013
   IF HW_IN_ORD.MARKET_RESP_CODE   = ''                                 14560013
      THEN HW_IN_ORD_NULL_T260.MARKET_RESP_CODE   = -1;                 14570013
   IF HW_IN_ORD.INSTALLING_OU      = ''                                 14580013
      THEN HW_IN_ORD_NULL_T260.INSTALLING_OU      = -1;                 14590013
   IF HW_IN_ORD.SELLING_OU         = ''                                 14600013
      THEN HW_IN_ORD_NULL_T260.SELLING_OU         = -1;                 14610013
   IF HW_IN_ORD.SCHED_COMPL_DATE   = ''                                 14620013
      THEN HW_IN_ORD_NULL_T260.SCHED_COMPL_DATE   = -1;                 14630013
   IF HW_IN_ORD.SCHED_REMOVAL_DATE = ''                                 14640013
      THEN HW_IN_ORD_NULL_T260.SCHED_REMOVAL_DATE = -1;                 14650013
   IF HW_IN_ORD.TYPE_OF_MAINT      = ''                                 14660013
      THEN HW_IN_ORD_NULL_T260.TYPE_OF_MAINT      = -1;                 14670013
   IF HW_IN_ORD.TYPE_OF_WARRANTY   = ''                                 14680013
      THEN HW_IN_ORD_NULL_T260.TYPE_OF_WARRANTY   = -1;                 14690013
   IF HW_IN_ORD.TYPE_OF_AGREEMENT  = ''                                 14700013
      THEN HW_IN_ORD_NULL_T260.TYPE_OF_AGREEMENT  = -1;                 14710013
                                                                        14720013
                                                                        14730013
   WRITE FILE (RCBBCA7) FROM (HW_IN_ORD);                               14740013
   Z_TAB(15).ANZ = Z_TAB(15).ANZ + 1;                                   14750013
   HASH_FIELD = SUBSTR(HW_IN_ORD.ORDER_REF_NUMBER,1,4);                 14760013
   CALL RCB018M (HASH_FIELD,                                            14770013
                 HASH_TOTAL.RCBBCA7,                                    14780013
                 PTR_INT_AREA);                                         14790013
                                                                        14800013
 END WRITE_HW_IN_ORD;                                                   14810013
                                                                        14820013
 /*-------------------------------------------------------------------*/14830013
 /***    RECHNEN DGEWE PLUS 1                                       ***/14840013
 /*-------------------------------------------------------------------*/14850013
 DATUM_PLUS1: PROC;                                                     14860013
                                                                        14870013
   DGEWE_PLUS1                 = '';                                    14880013
   PTR_RCBZ03S                 = ADDR (PARM_RCBZ03S);                   14890013
   PARM_RCBZ03S                = '';                                    14900013
   PARM_RCBZ03S.WD_IN_FORMAT   = 'ISO';                                 14910013
   PARM_RCBZ03S.WD_OUT_FORMAT  = 'ISO';                                 14920013
   PARM_RCBZ03S.WD_FUNCTION    = 'C';                                   14930013
   PARM_RCBZ03S.WD_PERIOD_TYPE = 'D';                                   14940013
   PARM_RCBZ03S.WD_PERIOD      = 1;                                     14950013
   PARM_RCBZ03S.WD_IN_DATE     = DGEWE_10;                              14960013
                                                                        14970013
   CALL RCB004M (PTR_RCBZ03S);                   /* RECHNEN DATUM + 1 */14980013
                                                                        14990013
   IF PARM_RCBZ03S.WD_STATUS = ' '                                      15000013
      THEN DO;                                                          15010013
         DGEWE_PLUS1 = SUBSTR(PARM_RCBZ03S.WD_OUT_DATE,1,10);           15020013
         DGEWE_OK    = DGEWE_10;                                        15030013
      END;                                                              15040013
                                                                        15050013
      ELSE DO;                                                          15060013
         /*-----------------------------------------------------------*/15070013
         /***  FEHLERHAFTES DGEWE WIRD KORRIGIERT.                  ***/15080013
         /***  MIT KORRIGIERTEM DGEWE WIRD NOCHMALS RCB004M         ***/15090013
         /***  AUFGERUFEN, UM DGEWE PLUS 1 ZU ERRECHNEN.            ***/15100013
         /*-----------------------------------------------------------*/15110013
                                                                        15120013
         IF SUBSTR(DGEWE_10,9,2) = '31'                                 15130013
            THEN DGEWE_OK = SUBSTR(DGEWE_10,1,8) || '30';               15140013
                                                                        15150013
            ELSE IF SUBSTR(DGEWE_10,6,5) = '02-30' |                    15160013
                    SUBSTR(DGEWE_10,6,5) = '02-29'                      15170013
                 THEN DGEWE_OK = SUBSTR(DGEWE_10,1,8) || '28';          15180013
                                                                        15190013
         PUT SKIP EDIT                                                  15200013
            ('FEHLERHAFTES WARRANTY EXPIRY DATE KORRIGIERT VON ',       15210013
              DGEWE_10,' ZU ',DGEWE_OK,                                 15220013
              ' BEI TOS ',HW_SUPPLY.PRODUCT_TYPE,HW_SUPPLY.ORIGIN,      15230013
             HW_SUPPLY.SEQUENCE_NUMBER)                                 15240013
            (A);                                                        15250013
                                                                        15260013
         DGEWE_PLUS1                 = '';                              15270013
         PTR_RCBZ03S                 = ADDR (PARM_RCBZ03S);             15280013
         PARM_RCBZ03S                = '';                              15290013
         PARM_RCBZ03S.WD_IN_FORMAT   = 'ISO';                           15300013
         PARM_RCBZ03S.WD_OUT_FORMAT  = 'ISO';                           15310013
         PARM_RCBZ03S.WD_FUNCTION    = 'C';                             15320013
         PARM_RCBZ03S.WD_PERIOD_TYPE = 'D';                             15330013
         PARM_RCBZ03S.WD_PERIOD      = 1;                               15340013
         PARM_RCBZ03S.WD_IN_DATE     = DGEWE_OK;                        15350013
                                                                        15360013
         CALL RCB004M (PTR_RCBZ03S);             /* RECHNEN DATUM + 1 */15370013
                                                                        15380013
         IF PARM_RCBZ03S.WD_STATUS = ' '                                15390013
            THEN DGEWE_PLUS1 = SUBSTR(PARM_RCBZ03S.WD_OUT_DATE,1,10);   15400013
            ELSE PUT SKIP EDIT                                          15410013
               ('FEHLER BEIM ERRECHNEN WARRANTY_EXP_DATE+1:  TOS = ',   15420013
                 HW_SUPPLY.PRODUCT_TYPE,HW_SUPPLY.ORIGIN,               15430013
                 HW_SUPPLY.SEQUENCE_NUMBER,                             15440013
                '   KORRIGIERTES WARRANTY_EXP_DATE = ',DGEWE_OK)        15450013
               (A);                                                     15460013
      END;                                /*END WARR.EXP.DATE FEHLERH.*/15470013
                                                                        15480013
 END DATUM_PLUS1;                                                       15490013
                                                                        15500013
                                                                        15510013
-/*-------------------------------------------------------------------*/15520013
 /***  KONVERTIEREN DATUM  (JJMMTT --> JJJJ-MM-TT)                  ***/15530013
 /*-------------------------------------------------------------------*/15540013
 CONVERT_DATUM: PROC;                                                   15550013
                                                                        15560013
   OUTPUT_DATE = ' ';                                                   15570013
                                                                        15580013
   IF INPUT_DATE ¬= '      '                                            15590013
      THEN DO;                                                          15600013
         IF SUBSTR(INPUT_DATE,1,2) < '40'                               15610013
            THEN JAHR = '20';                                           15620013
            ELSE JAHR = '19';                                           15630013
         OUTPUT_DATE  = JAHR || SUBSTR(INPUT_DATE,1,2) ||               15640013
                         '-' || SUBSTR(INPUT_DATE,3,2) ||               15650013
                         '-' || SUBSTR(INPUT_DATE,5,2);                 15660013
      END;                                                              15670013
                                                                        15680013
 END CONVERT_DATUM;                                                     15690013
                                                                        15700013
-/*-------------------------------------------------------------------*/15710013
 /***  LADEN UMSETZUNGSTABELLE WARRANTY CATEGORY IN TYPE OF WARRANTY***/15720013
 /*-------------------------------------------------------------------*/15730013
     /*** LOAD_WC_TAB  LADEN  UMSETZUNGSTABELLE WC IN TOW             */15740013
 LOAD_WC_TB: PROC;                                                      15750013
     /***                                                             */15760013
     /***                                                             */15770013
     /*** CALLED BY:   SUG102M                                        */15780013
     /*** ARGUMENTS:   NONE                                           */15790013
     /*** CALLS:       NONE                                           */15800013
     /*** INPUT:       SUG1TW0 : CEDS UMSETZUNGSTABELLE WC            */15810013
     /*** OUTPUT:      WC_TB   : INTERNE WC-TABELLE                   */15820013
     /*** INCLUDES:    SUG102I : UMSETZUNGSTABELLE                    */15830013
     /***                                                             */15840013
     /***                                                             */15850013
     /***   FUNKTIONSBESCHREIBUNG:                                    */15860013
     /***                                                             */15870013
     /***    EINLESEN UND LADEN DER UMSETZUNGTABELLE WC IN TOW        */15880013
     /***    IN INTERNEW TABELLE WC_TB                                */15890013
     /***    WC_TB(0) ENTHAELT DEFAULTWERT, REST AUFSTEIGEND NACH WC  */15900013
     /***                                                             */15910013
     /***    ABBRUCH-FAELLE:                                          */15920013
     /***       - FALSCHE SATZART BEI WC-UMSETZUNGSTABELLE            */15930013
     /***       - SORTFEHLER BEI WC-UMSETZUNGSTABELLE                 */15940013
     /***       - DEFAULTEINTRAG BEI WC-UMSETZUNGSTABELLE FEHLT       */15950013
     /***       - WC-UMSETZUNGSTABELLE LEER                           */15960013
     /***                                                             */15970013
1/*-------------------------------------------------------------------*/15980013
0 DEFAULT RANGE (*) STATIC;                                             15990013
-/*-------------------------------------------------------------------*/16000013
 /*                                                                   */16010013
 /*         V E R E I N B A R U N G E N                               */16020013
 /*                                                                   */16030013
 /*-------------------------------------------------------------------*/16040013
-/*-------------------------------------------------------------------*/16050013
 /***   PLIXOPTION   -   N U R   FUER   M A I N   PROGRAMME         ***/16060013
 /*-------------------------------------------------------------------*/16070013
-/*-------------------------------------------------------------------*/16080013
 /***   BIT                                                         ***/16090013
 /*-------------------------------------------------------------------*/16100013
   DCL  EOF            BIT(1) INIT ('0'B);                              16110013
1/*-------------------------------------------------------------------*/16120013
 /***   ENTRIES                                                     ***/16130013
 /*-------------------------------------------------------------------*/16140013
1/*-------------------------------------------------------------------*/16150013
 /***   BUILTIN                                                     ***/16160013
 /*-------------------------------------------------------------------*/16170013
   DCL  SUBSTR         BUILTIN;                                         16180013
0/*-------------------------------------------------------------------*/16190013
 /***   POINTER                                                     ***/16200013
 /*-------------------------------------------------------------------*/16210013
-/*-------------------------------------------------------------------*/16220013
 /***   FILES                                                       ***/16230013
 /*-------------------------------------------------------------------*/16240013
0/*-------INPUT-------------------------------------------------------*/16250013
   DCL  SUG1TW0        FILE RECORD SEQL INPUT;                          16260013
0/*-------OUTPUT------------------------------------------------------*/16270013
   DCL  SYSPRINT       FILE EXTERNAL PRINT;                             16280013
1/*-------------------------------------------------------------------*/16290013
 /***   ARBEITS - VARIABLE                                          ***/16300013
 /*-------------------------------------------------------------------*/16310013
   DCL  IND            BIN FIXED (31);             /*SCHLEIFENZAEHLER */16320013
   DCL  I              BIN FIXED (15);             /*INT. ZAEHLER     */16330013
   DCL  WCTBANZ        BIN FIXED (31) EXTERNAL;    /*TABELLENENDE     */16340013
   DCL  MAXIMUM        FIXED DEC (7);              /*ANZ. TAB-PLAETZE */16350013
   DCL  SORTALT        CHAR(1);                    /* WARRANTY CAT.   */16360013
1/*-------------------------------------------------------------------*/16370013
 /***   INCLUDES                                                    ***/16380013
 /*-------------------------------------------------------------------*/16390013
   DCL  1 WC_IN,                             /*EINGABEBEREICH WC-TAB  */16400013
          % INCLUDE SUG102I;;                                           16410013
                                                                        16420013
   DCL  1 WC_TB (*) CTL EXTERNAL,            /* WC-TABELLE            */16430013
          2 WARRANTY_CATEGORY   CHAR (1),    /* SIEHE AUCH TOW        */16440013
          2 TYPE_OF_WARRANTY    CHAR (1);                               16450013
                                                                        16460013
   DCL  1 SAVE_WC_TB (*) CTL,  /* WIE WC_TB  /* WC-TAB SAVEBEREICH    */16470013
          2 WARRANTY_CATEGORY   CHAR (1),                               16480013
          2 TYPE_OF_WARRANTY    CHAR (1);                               16490013
1/*-------------------------------------------------------------------*/16500013
 /***      U E B E R S C H R I F T E N                              ***/16510013
 /*-------------------------------------------------------------------*/16520013
1/*-------------------------------------------------------------------*/16530013
 /***      DRUCK-ZEILEN                                             ***/16540013
 /*-------------------------------------------------------------------*/16550013
1/*-------------------------------------------------------------------*/16560013
 /***      D A T U M                                                ***/16570013
 /*-------------------------------------------------------------------*/16580013
1/*-------------------------------------------------------------------*/16590013
 /***    ON ERROR                                                   ***/16600013
 /*-------------------------------------------------------------------*/16610013
 %INCLUDE (RCB0E0M);                                                    16620013
  END;                                                                  16630013
 /*      ON ERROR BEGIN;                        REMOVED 24/07/00 - HM */16640013
 /*         CLOSE FILE (SYSPRINT);                                    */16650013
 /*         CALL DP60343 ('0102');                                    */16660013
 /*      END;                                                         */16670013
-/*-------------------------------------------------------------------*/16680013
 /***    ON ENDFILE                                                 ***/16690013
 /*-------------------------------------------------------------------*/16700013
   ON ENDFILE (SUG1TW0) EOF = '1'B;                                     16710013
-/*-------------------------------------------------------------------*/16720013
 /***    O P E N    FILES                                           ***/16730013
 /*-------------------------------------------------------------------*/16740013
   OPEN FILE (SUG1TW0);                                                 16750013
1/*-------------------------------------------------------------------*/16760013
 /*                                                                   */16770013
 /*      P R O G R A M M    -    S T A R T                            */16780013
 /*                                                                   */16790013
 /*-------------------------------------------------------------------*/16800013
   WCTBANZ = 0;                                                         16810013
   MAXIMUM = 20;                                                        16820013
   ALLOCATE WC_TB(0:MAXIMUM);                                           16830013
   WC_TB   ='';                                                         16840013
   SORTALT ='';                                                         16850013
   Z_TAB(20).TEXT = 'ANZAHL DATENSAETZE FILE SUG1TW0            : ';    16860013
   Z_TAB(21).TEXT = 'ANZAHL DATENSAETZE FILE SUG1TW0 UEBERNOMMEN: ';    16870013
   Z_TAB(22).TEXT = 'ANZAHL SAETZE UMSETZUNG WARRANTY CATEGORY  : ';    16880013
   Z_TAB(23).TEXT = '  DAVON UMSETZBAR IN TYPE OF WARRANTY      : ';    16890013
 /*Z_TAB(24).TEXT = SIEHE UNTEN */                                      16900013
                                                                        16910013
   READ FILE (SUG1TW0) INTO (WC_IN);                                    16920013
                                                                        16930013
   DO WHILE (¬EOF);                                                     16940013
                                                                        16950013
     SELECT;                                                            16960013
       WHEN(WC_IN.SART = '*');                       /* KOMMENTAR     */16970013
                                                     /* UEBERLESEN    */16980013
       WHEN(WC_IN.SART = 'D')                        /* DATEN         */16990013
          DO;                                                           17000013
            Z_TAB(20).ANZ = Z_TAB(20).ANZ + 1;/* ANZ. DATENSAETZE GELE*/17010013
            IF WC_IN.WARRANTY_CATEGORY < SORTALT  /*SORT_PRUEFUNG     */17020013
             & Z_TAB(20).ANZ > 1                  /* NICHT BEI 1. SATZ*/17030013
            THEN DO;                                                    17040013
               PUT SKIP EDIT ('SUG102M  SORTFEHLER FILE SUG1TW0')(A);   17050013
               PUT SKIP EDIT ('  SORTALT: ' || SORTALT || ' GROESSER '  17060013
                              || 'SORTNEU: ' || WC_IN.WARRANTY_CATEGORY)17070013
                             (A);                                       17080013
               PUT SKIP EDIT (' ')(A);  /* DAMIT MELDUNG RAUSKOMMT */   17090013
               PUT SKIP EDIT (' ')(A);  /* DAMIT MELDUNG RAUSKOMMT */   17100013
               SIGNAL ERROR;                                            17110013
            END;                                                        17120013
            SORTALT=WC_IN.WARRANTY_CATEGORY;                            17130013
            IF WC_IN.WARRANTY_CATEGORY='?'           /* DEFAULT-WERT */ 17140013
            THEN DO;                                                    17150013
               IF WC_TB.WARRANTY_CATEGORY(0)=''                         17160013
               THEN DO;                                                 17170013
                  WC_TB(0) = WC_IN, BY NAME;       /*UEBERNEHMEN DATEN*/17180013
                  Z_TAB(21).ANZ =                                       17190013
                            Z_TAB(21).ANZ + 1;/* ANZ. DATENSAETZE UEBE*/17200013
                  Z_TAB(24).TEXT = '  DAVON DEFAULT-WERT "'             17210013
                                 || WC_TB.TYPE_OF_WARRANTY(0)           17220013
                                 ||'" GESETZT           : ';            17230013
               END;                                                     17240013
               ELSE DO;                                                 17250013
                 PUT SKIP EDIT                                          17260013
                   ('SUG102M  DEFAULTWERT IN FILE SUG1TW0 DOPPELT :'    17270013
                     || WC_TB.TYPE_OF_WARRANTY(0) || '/'                17280013
                     || WC_IN.TYPE_OF_WARRANTY)(A);                     17290013
                 PUT SKIP EDIT                                          17300013
                   ('         1.WERT WIRD ALS DEFAULT ANGENOMMEN')(A);  17310013
                 PUT SKIP EDIT                                          17320013
                   ('         (TYPE OF WARRANTY)                ')(A);  17330013
               END;                                                     17340013
            END;                                                        17350013
            ELSE DO;                            /* NICHT DEFAULT-WERT */17360013
               IF WCTBANZ > 1                   /* DOPPELTE SAETZE    */17370013
                & WC_IN.WARRANTY_CATEGORY       /* UNTERDRUECKEN      */17380013
                  = WC_TB.WARRANTY_CATEGORY(WCTBANZ)                    17390013
               THEN DO;                                                 17400013
                  PUT SKIP EDIT                                         17410013
                    ('SUG102M  WARR.CATEG "'                            17420013
                      || WC_TB.WARRANTY_CATEGORY(WCTBANZ)               17430013
                      || '"IN FILE SUG1TW0 MEHRFACH :'                  17440013
                      || WC_TB.TYPE_OF_WARRANTY(WCTBANZ) || '/'         17450013
                      || WC_IN.TYPE_OF_WARRANTY)(A);                    17460013
                  PUT SKIP EDIT                                         17470013
                    ('         1. WERT WURDE UEBERNOMMEN         ')(A); 17480013
                  PUT SKIP EDIT                                         17490013
                    ('         (TYPE OF WARRANTY)                ')(A); 17500013
               END;                                                     17510013
               ELSE DO;                         /* NEUER SATZ         */17520013
                  WCTBANZ = WCTBANZ + 1;                                17530013
                  IF WCTBANZ > MAXIMUM                                  17540013
                  THEN DO;                      /*VERGROESSERN TABELLE*/17550013
                       ALLOCATE SAVE_WC_TB(0:MAXIMUM);                  17560013
                       SAVE_WC_TB = WC_TB;                              17570013
                       FREE WC_TB;                                      17580013
                       MAXIMUM = MAXIMUM + 50;                          17590013
                       ALLOCATE WC_TB(MAXIMUM);                         17600013
                       DO IND = 0 TO (MAXIMUM - 50);                    17610013
                          WC_TB(IND) = SAVE_WC_TB(IND), BY NAME;        17620013
                       END;                                             17630013
                       FREE SAVE_WC_TB;                                 17640013
                  END;                                                  17650013
                  WC_TB(WCTBANZ) = WC_IN, BY NAME; /*UEBERNEHMEN DATEN*/17660013
                  Z_TAB(21).ANZ =                                       17670013
                            Z_TAB(21).ANZ + 1;/* ANZ. DATENSAETZE UEBE*/17680013
               END; /* NEUER SATZ         */                            17690013
            END;                                /* NICHT DEFAULT-WERT */17700013
          END;  /* DATEN */                                             17710013
       OTHERWISE                                   /* FALSCHE SATZART */17720013
          DO;                                                           17730013
              PUT SKIP EDIT (                                           17740013
                             'SUG102M  FALSCHE SATZART IN WC-TABELLE: ' 17750013
                              ||  WC_IN.SART)(A);                       17760013
              PUT SKIP EDIT (' ')(A);  /* DAMIT MELDUNG RAUSKOMMT */    17770013
              PUT SKIP EDIT (' ')(A);  /* DAMIT MELDUNG RAUSKOMMT */    17780013
              SIGNAL ERROR;                                             17790013
          END;                                                          17800013
     END; /* SELECT */                                                  17810013
     READ FILE (SUG1TW0) INTO (WC_IN);                                  17820013
                                                                        17830013
   END;                                            /*END DO WHILE ¬EOF*/17840013
                                             /*-----------------------*/17850013
                                             /* ABBRUCHFAELLE PRUEFEN */17860013
                                             /*-----------------------*/17870013
   IF WCTBANZ = 0                                                       17880013
    & WC_TB(0).WARRANTY_CATEGORY¬='?'            /* KEIN DEFAULT-WERT */17890013
   THEN DO;                                                             17900013
        PUT SKIP EDIT ('SUG102M  WC-TABELLE ENTHAELT KEINE DATEN')(A);  17910013
        PUT SKIP EDIT (' ')(A);  /* DAMIT MELDUNG RAUSKOMMT */          17920013
        PUT SKIP EDIT (' ')(A);  /* DAMIT MELDUNG RAUSKOMMT */          17930013
        SIGNAL ERROR;                                                   17940013
    END;                                                                17950013
   IF WC_TB(0).WARRANTY_CATEGORY¬='?'            /* KEIN DEFAULT-WERT */17960013
   THEN DO;                                                             17970013
        PUT SKIP EDIT (                                                 17980013
              'SUG102M  WC-TABELLE ENTHAELT KEINEN DEFAULTWERT "?"')(A);17990013
        PUT SKIP EDIT (' ')(A);  /* DAMIT MELDUNG RAUSKOMMT */          18000013
        PUT SKIP EDIT (' ')(A);  /* DAMIT MELDUNG RAUSKOMMT */          18010013
        SIGNAL ERROR;                                                   18020013
    END;                                                                18030013
 /*-------------------------------------------------------------------*/18040013
 /***    C L O S E   FILES                                            */18050013
 /*-------------------------------------------------------------------*/18060013
   CLOSE FILE (SUG1TW0);                                                18070013
 /*-------------------------------------------------------------------*/18080013
 /***    AUSGABE WC/TOW TABELLE                                       */18090013
 /*-------------------------------------------------------------------*/18100013
   PUT SKIP EDIT ('SUG102M  INHALT WC-TABELLE  ')(A);                   18110013
   PUT SKIP EDIT ('         WARR.CAT.  TYPE OF ')(A);                   18120013
   PUT SKIP EDIT ('                    MAINT.  ')(A);                   18130013
   DO I=0 TO WCTBANZ;                                                   18140013
      PUT SKIP EDIT ('           "'  || WC_TB(I).WARRANTY_CATEGORY      18150013
                  || '"        "'    || WC_TB(I).TYPE_OF_WARRANTY       18160013
                  || '"'                                                18170013
                    )(A);                                               18180013
   END;                                                                 18190013
-END LOAD_WC_TB;                                                        18200013
     /*** TOW          UMSETZEN WC IN IN TOW                          */18210013
 TOW: PROC(WARR_CAT) RETURNS (CHAR(1));                                 18220013
     /***                                                             */18230013
     /***                                                             */18240013
     /*** CALLED BY:   SUG102M                                        */18250013
     /*** ARGUMENTS:   WARRANTY CATEGORY                              */18260013
     /*** CALLS:       NONE                                           */18270013
     /*** INPUT:       WARRANTY CATEGORY                              */18280013
     /*** OUTPUT:      TYPE OF WARRANTY                               */18290013
     /*** INCLUDES:    NONE                                           */18300013
     /***                                                             */18310013
     /***                                                             */18320013
     /***   FUNKTIONSBESCHREIBUNG:                                    */18330013
     /***                                                             */18340013
     /***    SEQUENTIELLES DURCHSUCHEN DER UMSETZUNGSTABELLE          */18350013
     /***    WC IN TOW                                                */18360013
     /***    WC_TB(0) ENTHAELT DEFAULTWERT, REST AUFSTEIGEND NACH WC  */18370013
     /***                                                             */18380013
     /***                                                             */18390013
   DCL  I              BIN FIXED (15);             /*INT. ZAEHLER     */18400013
   DCL  WARR_CAT       CHAR(1);                    /*INPUT            */18410013
   DCL  WCTBANZ        BIN FIXED (31) EXTERNAL;    /*TABELLENENDE     */18420013
   DCL  1 WC_TB (*) CTL EXTERNAL,            /* WC-TABELLE            */18430013
                                             /* SIEHE AUCH LOAD_WC_TAB*/18440013
          2 WARRANTY_CATEGORY   CHAR (1),                               18450013
          2 TYPE_OF_WARRANTY    CHAR (1);                               18460013
                                                                        18470013
   DCL  WCUNBEANZ      BIN FIXED (31) EXTERNAL INIT(0);  /* TAB.ENDE  */18480013
   DCL  WC_UNBEKANNT (20) CHAR(1) EXTERNAL;  /* WC-TABELLE UNBEKANNT  */18490013
                                                                        18500013
   Z_TAB(22).ANZ = Z_TAB(22).ANZ + 1;         /* ANZ. SAETZE UMZUSETZE*/18510013
   IF WCTBANZ = 0                                  /* NUR DEFAULTWERT */18520013
   THEN DO;                                        /* VORHANDEN       */18530013
      Z_TAB(24).ANZ =  Z_TAB(24).ANZ + 1;     /* ANZ. SAETZE DEFAULTWE*/18540013
      RETURN(WC_TB.TYPE_OF_WARRANTY(0));           /* DEFAULTWERT     */18550013
   END;                                                                 18560013
   DO I=1 TO WCTBANZ;                                                   18570013
     IF WC_TB.WARRANTY_CATEGORY(I)= WARR_CAT                            18580013
     THEN DO;                                                           18590013
        Z_TAB(23).ANZ = Z_TAB(23).ANZ + 1;    /* ANZ. SAETZE UMSETZBAR*/18600013
        RETURN(WC_TB.TYPE_OF_WARRANTY(I));    /* GEFUNDENER TOW       */18610013
     END;                                                               18620013
   END;                                                                 18630013
   Z_TAB(24).ANZ =     Z_TAB(24).ANZ + 1;     /* ANZ. SAETZE DEFAULTWE*/18640013
                                           /* MELDUNG NUR BEIM 1. MAL */18650013
   DO I=1 TO WCUNBEANZ;                                                 18660013
      IF WC_UNBEKANNT (I) = WARR_CAT                                    18670013
      THEN RETURN(WC_TB.TYPE_OF_WARRANTY(0));      /* DEFAULTWERT     */18680013
   END;                                                                 18690013
   IF WCUNBEANZ < 20   /* WC_UNBEKANNT(20) *//* WC-TABELLE UNBEKANNT  */18700013
   THEN DO;                                  /* PFLEGEN               */18710013
      WCUNBEANZ = WCUNBEANZ + 1;                                        18720013
      WC_UNBEKANNT(WCUNBEANZ)= WARR_CAT;                                18730013
   END;                                                                 18740013
   ELSE DO;                                  /* PFLEGEN               */18750013
      PUT SKIP EDIT ('SUG102M  TABELLE WC_UNBEKANNT VOLL')(A);          18760013
   END;                                                                 18770013
   PUT SKIP EDIT ('SUG102M  UNBEKANNTE WARRANTY CATEGORY "'             18780013
                   || WARR_CAT                                          18790013
                   || '", DEFAULT"'                                     18800013
                   || WC_TB.TYPE_OF_WARRANTY(0)                         18810013
                   || '" GESETZT'                                       18820013
                 )(A);                                                  18830013
   RETURN(WC_TB.TYPE_OF_WARRANTY(0));              /* DEFAULTWERT     */18840013
-END TOW;                                                               18850013
                                            /*SOC QF-AK 3.3 FW       */ 18860014
1/********************************************************************/ 18870013
 /*                                                                  */ 18880013
 /* MODULE NAME      : RETRIEVE_FLEX_WARR                            */ 18890013
 /*                                                                  */ 18900013
 /* DESCRIPTION      : CHECK WHETHER THE MACHINE IS A FLEXIBLE       */ 18910013
 /*                    WARRANTY MACHINE.                             */ 18920013
 /*                                                                  */ 18930013
 /********************************************************************/ 18940013
0RCBBCAM_RX11_RETRIEVE_FLEX_WARR: PROC;                                 18950013
                                                                        18960013
 DCL WRK_FW_COUNTRY_NUMBER CHAR(03);                                    18970013
 DCL WRK_FW_TYPE           CHAR(04);                                    18980013
 DCL WRK_FW_MODEL          CHAR(03);                                    18990013
 WRK_FW_COUNTRY_NUMBER =  '724';                                        19000013
 WRK_FW_TYPE           =  OEISTRU.TYPE;                                 19010013
 WRK_FW_MODEL          =  OEISTRU.MOD;                                  19020013
                                                                        19030013
 EXEC SQL                                                               19040013
   SELECT T690.COUNTRY_NUMBER,                                          19050013
          T690.PRODUCT_TYPE,                                            19060013
          T690.MODEL_NUMBER,                                            19070013
          T690.BRAND_WARRANTY_MNT,                                      19080013
          T690.SERVICE_LVL_CODE,                                        19090013
          T690.EFFECTIVE_DATE,                                          19100013
          T690.END_DATE,                                                19110013
          T690.LAST_CHANGE_DATE                                         19120013
   INTO   :TB_RCBV690                                                   19130013
          :TB_RCBV690_I.INDNULL                                         19140013
   FROM   RCBV0400_PO_MOD1   T400,                                      19150013
          RCBV0690_FLEX_WARR T690                                       19160013
   WHERE  T400.COUNTRY_NUMBER   = :WRK_FW_COUNTRY_NUMBER                19170013
   AND    T400.PRODUCT_TYPE     = :WRK_FW_TYPE                          19180013
   AND    T400.MODEL_NUMBER     = :WRK_FW_MODEL                         19190013
   AND    T690.COUNTRY_NUMBER   = T400.COUNTRY_NUMBER                   19200013
   AND    T690.PRODUCT_TYPE     = T400.PRODUCT_TYPE                     19210013
   AND    T690.MODEL_NUMBER     = T400.MODEL_NUMBER                     19220013
   AND    T690.RULE             = 'FW'               /*A10-11 - 030A */ 19221023
   AND    (:IDATE_10 BETWEEN                                            19230013
          T690.EFFECTIVE_DATE  AND T690.END_DATE)                       19240013
   AND    (:INT_AREA.RUN_DATE BETWEEN                                   19250013
          T400.EFFECTIVE_DATE  AND T400.END_DATE);                      19260013
                                                                        19270013
 SELECT (SQLCA.SQLCODE);                                                19280013
   WHEN (0)                                                             19290013
   DO;                                                                  19300013
         SWITCH_F_TOW = '1'B;                                           19310013
      /* HW_SUPPLY_NULL_T220.F_SPLT_DATE  =  0;*/                       19320013
      /* HW_SUPPLY_NULL_T220.F_TYPE_OF_WARRANTY = 0;*/                  19330013
   END;                                                                 19340013
   WHEN (100)                                                           19350013
   DO;                                                                  19360013
 EXEC SQL                                                               19370013
   SELECT T690.COUNTRY_NUMBER,                                          19380013
          T690.PRODUCT_TYPE,                                            19390013
          T690.MODEL_NUMBER,                                            19400013
          T690.BRAND_WARRANTY_MNT,                                      19410013
          T690.SERVICE_LVL_CODE,                                        19420013
          T690.EFFECTIVE_DATE,                                          19430013
          T690.END_DATE,                                                19440013
          T690.LAST_CHANGE_DATE                                         19450013
   INTO   :TB_RCBV690                                                   19460013
          :TB_RCBV690_I.INDNULL                                         19470013
   FROM   RCBV0400_PO_MOD1   T400,                                      19480013
          RCBV0690_FLEX_WARR T690                                       19490013
   WHERE  T400.COUNTRY_NUMBER   = :WRK_FW_COUNTRY_NUMBER                19500013
   AND    T400.PRODUCT_TYPE     = :WRK_FW_TYPE                          19510013
   AND    T400.MODEL_NUMBER     = ''                                    19520013
   AND    T690.COUNTRY_NUMBER   = T400.COUNTRY_NUMBER                   19530013
   AND    T690.PRODUCT_TYPE     = T400.PRODUCT_TYPE                     19540013
   AND    T690.MODEL_NUMBER     = '***'                                 19550013
   AND    T690.RULE             = 'FW'               /*A10-11 - 030A */ 19551023
   AND    (:IDATE_10 BETWEEN                                            19560013
          T690.EFFECTIVE_DATE  AND T690.END_DATE)                       19570013
   AND    (:INT_AREA.RUN_DATE BETWEEN                                   19580013
          T400.EFFECTIVE_DATE  AND T400.END_DATE);                      19590013
   END;                                                                 19600013
   OTHERWISE                                                            19610013
       DO;                                                              19620013
         CALL RCBBCAM_ERROR (ADDR (SQLCA),'DB2','#088');                19630013
       END;                                                             19640013
   END;                                                                 19650013
 SELECT (SQLCA.SQLCODE);                                                19660013
   WHEN (0)                                                             19670013
   DO;                                                                  19680013
         SWITCH_F_TOW = '1'B;                                           19690013
       /*HW_SUPPLY_NULL_T220.F_SPLT_DATE  =  0; */                      19700013
       /*HW_SUPPLY_NULL_T220.F_TYPE_OF_WARRANTY = 0;*/                  19710013
   END;                                                                 19720013
   WHEN (100)                                                           19730013
   DO;                                                                  19740013
 EXEC SQL                                                               19750013
   SELECT T690.COUNTRY_NUMBER,                                          19760013
          T690.PRODUCT_TYPE,                                            19770013
          T690.MODEL_NUMBER,                                            19780013
          T690.BRAND_WARRANTY_MNT,                                      19790013
          T690.SERVICE_LVL_CODE,                                        19800013
          T690.EFFECTIVE_DATE,                                          19810013
          T690.END_DATE,                                                19820013
          T690.LAST_CHANGE_DATE                                         19830013
   INTO   :TB_RCBV690                                                   19840013
          :TB_RCBV690_I.INDNULL                                         19850013
   FROM   RCBV0400_PO_MOD1   T400,                                      19860013
          RCBV0690_FLEX_WARR T690                                       19870013
   WHERE  T400.COUNTRY_NUMBER   = :WRK_FW_COUNTRY_NUMBER                19880013
   AND    T400.PRODUCT_TYPE     = :WRK_FW_TYPE                          19890013
   AND    T400.MODEL_NUMBER     = :WRK_FW_MODEL                         19900013
   AND    T690.COUNTRY_NUMBER   = '***'                                 19910013
   AND    T690.PRODUCT_TYPE     = T400.PRODUCT_TYPE                     19920013
   AND    T690.MODEL_NUMBER     = T400.MODEL_NUMBER                     19930013
   AND    T690.RULE             = 'FW'               /*A10-11 - 030A */ 19931023
   AND    (:IDATE_10 BETWEEN                                            19940013
          T690.EFFECTIVE_DATE  AND T690.END_DATE)                       19950013
   AND    (:INT_AREA.RUN_DATE BETWEEN                                   19960013
          T400.EFFECTIVE_DATE  AND T400.END_DATE);                      19970013
   END;                                                                 19980013
   OTHERWISE                                                            19990013
       DO;                                                              20000013
         CALL RCBBCAM_ERROR (ADDR (SQLCA),'DB2','#089');                20010013
       END;                                                             20020013
   END;                                                                 20030013
                                                                        20040013
 SELECT (SQLCA.SQLCODE);                                                20050013
   WHEN (0)                                                             20060013
   DO;                                                                  20070013
         SWITCH_F_TOW = '1'B;                                           20080013
       /*HW_SUPPLY_NULL_T220.F_SPLT_DATE  =  0;*/                       20090013
       /*HW_SUPPLY_NULL_T220.F_TYPE_OF_WARRANTY = 0; */                 20100013
   END;                                                                 20110013
   WHEN (100)                                                           20120013
   DO;                                                                  20130013
 EXEC SQL                                                               20140013
   SELECT T690.COUNTRY_NUMBER,                                          20150013
          T690.PRODUCT_TYPE,                                            20160013
          T690.MODEL_NUMBER,                                            20170013
          T690.BRAND_WARRANTY_MNT,                                      20180013
          T690.SERVICE_LVL_CODE,                                        20190013
          T690.EFFECTIVE_DATE,                                          20200013
          T690.END_DATE,                                                20210013
          T690.LAST_CHANGE_DATE                                         20220013
   INTO   :TB_RCBV690                                                   20230013
          :TB_RCBV690_I.INDNULL                                         20240013
   FROM   RCBV0400_PO_MOD1   T400,                                      20250013
          RCBV0690_FLEX_WARR T690                                       20260013
   WHERE  T400.COUNTRY_NUMBER   = :WRK_FW_COUNTRY_NUMBER                20270013
   AND    T400.PRODUCT_TYPE     = :WRK_FW_TYPE                          20280013
   AND    T400.MODEL_NUMBER     = ''                                    20290013
   AND    T690.COUNTRY_NUMBER   = '***'                                 20300013
   AND    T690.PRODUCT_TYPE     = T400.PRODUCT_TYPE                     20310013
   AND    T690.MODEL_NUMBER     = '***'                                 20320013
   AND    T690.RULE             = 'FW'               /*A10-11 - 030A */ 20321023
   AND    (:IDATE_10 BETWEEN                                            20330013
          T690.EFFECTIVE_DATE  AND T690.END_DATE)                       20340013
   AND    (:INT_AREA.RUN_DATE BETWEEN                                   20350013
          T400.EFFECTIVE_DATE  AND T400.END_DATE);                      20360013
   END;                                                                 20370013
   OTHERWISE                                                            20380013
       DO;                                                              20390013
         CALL RCBBCAM_ERROR (ADDR (SQLCA),'DB2','#090');                20400013
       END;                                                             20410013
   END;                                                                 20420013
  SELECT (SQLCA.SQLCODE);                                               20430013
    WHEN (0)                                                            20440013
    DO;                                                                 20450013
          SWITCH_F_TOW = '1'B;                                          20460013
        /*HW_SUPPLY_NULL_T220.F_SPLT_DATE  =  0;*/                      20470013
        /*HW_SUPPLY_NULL_T220.F_TYPE_OF_WARRANTY = 0;*/                 20480013
    END;                                                                20490013
    WHEN (100)                                                          20500013
    DO;                                                                 20510013
          SWITCH_F_TOW = '0'B;                                          20520013
        /*HW_SUPPLY_NULL_T220.F_SPLT_DATE  = -1; */                     20530013
        /*HW_SUPPLY_NULL_T220.F_TYPE_OF_WARRANTY = -1;*/                20540013
    END;                                                                20550013
    OTHERWISE                                                           20560013
         CALL RCBBCAM_ERROR(ADDR(SQLCA),'DB2','#091');                  20570013
  END;                                                                  20580013
0END RCBBCAM_RX11_RETRIEVE_FLEX_WARR;                                   20590013
1/********************************************************************/ 20600013
 /*                                                                  */ 20610013
 /* MODULE NAME      : GET_F_TOW_RCB063            RB01281           */ 20620013
 /*                                                                  */ 20630013
 /* DESCRIPTION      : GET THE FLEXIBLE TYPE OF WARRANTY FROM RCB063 */ 20640013
 /*                    PARAMETER.                                    */ 20650013
 /*                                                                  */ 20660013
 /********************************************************************/ 20670013
0RCBBCAM_RX12_GET_F_TOW_RCB063: PROC;                                   20680013
 TB_RCBV500            = '';                                            20690013
 TB_RCBV500_I          = '';                                            20700013
 PARM_FX_WARR.NUMBER   = 'RCB063';                                      20710013
                                                                        20720013
 CALL RCBI50M ('R',                                 /* PASS PARAMETER*/ 20730013
                PTR_RCBV500,                                            20740013
                PTR_RCBV500I,                                           20750013
                PTR_RETURN_AREA,                                        20760013
                PTR_INT_AREA);                                          20770013
                                                                        20780013
 SELECT(RETURN_AREA.RETURN_CODE);                                       20790013
  WHEN(0)                                                               20800013
    WRK_F_TOW =SUBSTR(PARM_FX_WARR.F_WARRANTY_MACHINE,1,1);             20810013
  WHEN(4)                                                               20820013
    DO;                                                                 20830013
        PARM_INT_AREA.MESSAGE_TYPE             = 'IS';                  20840013
        PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER  = 'I050';                20850013
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES   = ' ';                   20860013
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6  = 'PN';                  20870013
        PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6 =                        20880013
                                 TB_RCBV500.PARAMETER_NUMBER;           20890013
        CALL RCB0M1M (PTR_INT_AREA);                                    20900013
        CALL RCBBCAM_ERROR (ADDR (RETURN_AREA.RETURN_SQL),              20910013
                              'DB2','#092');                            20920013
    END;                                                                20930013
  OTHERWISE                                                             20940013
    CALL RCBBCAM_ERROR(ADDR(SQLCA),'DB2','#093');                       20950013
 END;                                                                   20960013
0END RCBBCAM_RX12_GET_F_TOW_RCB063;                                     20970013
1/********************************************************************/ 20980013
 /*                                                 RB01281          */ 20990013
 /* MODULE NAME      : CALC_DATE                                     */ 21000013
 /*                                                                  */ 21010013
 /* DESCRIPTION      : PROCESS DATE USING RCB004M                    */ 21020013
 /*                                                                  */ 21030013
 /********************************************************************/ 21040013
0RCBBCAM_CALC_DATE: PROC   (EFF_DATE,                                   21050013
                            CALC_TYPE,                                  21060013
                            CALC_VALUE) RETURNS(CHAR(10));              21070013
                                                                        21080013
 DCL EFF_DATE     CHAR(10);                                             21090013
 DCL CALC_TYPE    CHAR(1);                                              21100013
 DCL CALC_VALUE   FIXED DEC(3,0);                                       21110013
 DATE_AREA.WD_IN_FORMAT   = 'ISO';                                      21120013
 DATE_AREA.WD_OUT_FORMAT  = 'ISO';                                      21130013
 DATE_AREA.WD_FUNCTION    = 'C';                                        21140013
 DATE_AREA.WD_PERIOD_TYPE = CALC_TYPE;                                  21150013
 DATE_AREA.WD_PERIOD      = CALC_VALUE;                                 21160013
 DATE_AREA.WD_IN_DATE     = EFF_DATE;                                   21170013
 CALL RCB004M (ADDR (DATE_AREA));;                                      21180013
 IF DATE_AREA.WD_STATUS ¬= ' '                                          21190013
 THEN                                                                   21200013
   DO;                                                                  21210013
     CALL RCBBCAM_ERROR (NULL,'OTHER','#094');                          21220013
   END;                                                                 21230013
                                                                        21240013
 RETURN(DATE_AREA.WD_OUT_DATE);                                         21250013
                                                                        21260013
0END RCBBCAM_CALC_DATE;                                                 21270013
1/********************************************************************/ 21280013
 /*                                                                  */ 21290013
 /* MODULE NAME      : RCBBCAM_ERROR                                 */ 21300013
 /*                                                                  */ 21310013
 /* DESCRIPTION      : CALLS THE COMMON ERROR ROUTINE AFTER FILLING  */ 21320013
 /*                    THE INPUT VARIABLES                           */ 21330013
 /*                                                                  */ 21340013
 /********************************************************************/ 21350013
0RCBBCAM_ERROR: PROC     (PTR_ERROR,                                    21360013
                          ERR_TYPE,                                     21370013
                          CALL_ID);                                     21380013
0DCL PTR_ERROR    PTR;                                                  21390013
 DCL ERR_TYPE     CHAR(8);                                              21400013
 DCL CALL_ID      CHAR(4);                                              21410013
0PARM_INT_AREA.PTR_ERROR      = PTR_ERROR;                              21420013
 PARM_INT_AREA.ERR_TYPE       = ERR_TYPE;                               21430013
 PARM_INT_AREA.CALL_ID        = CALL_ID;                                21440013
0CALL RCB0E1M (PTR_INT_AREA);                                           21450013
0END RCBBCAM_ERROR;                          /*EOC QF-AK 3.3 FW       */21460014
1/*-------------------------------------------------------------------*/21470013
 /***    C L O S E   FILES                                          ***/21480013
 /*-------------------------------------------------------------------*/21490013
-END SUG102M;                                                           21500013