 /* RCBFAVN - INT.SUP. RCBV0220_SUPPL_CTR (SPECIAL)                  */ 00011013
 /*                                                                  */ 00020012
 /********************************************************************/ 00030012
 /* 5695-153 (C) COPYRIGHT IBM EMEA WORLD TRADE CORPORATION 1991     */ 00040012
 /* LICENSED MATERIAL - PROGRAM PROPERTY OF IBM                      */ 00050012
 /* REFER TO COPYRIGHT INSTRUCTIONS: FORM G120-2083                  */ 00060012
 /********************************************************************/ 00070012
 /*                                                                  */ 00080012
 /* MODULE NAME         : RCBFAVN                                    */ 00090012
 /*                                                                  */ 00100012
 /* TYPE                : LINKABLE MODULE                            */ 00110012
 /*                                                                  */ 00120012
 /* DESCRIPTION         : INTEGRATE SUPERIOR INTO TABLE              */ 00130012
 /*                       RCBV0220_SUPPL_CTR                         */ 00140012
 /*                       CICS VERSION WITH RCB0M1M REMOVED          */ 00150012
 /*                                                                  */ 00160012
 /* INPUT               : - DB2   : RCBV0220_SUPPL_CTR               */ 00170012
 /*                                                                  */ 00180012
 /* OUTPUT              : - DB2   : RCBV0220_SUPPL_CTR               */ 00190012
 /*                       - FILE  : MESSAGE  RCB0M1F0                */ 00200012
 /*                                                                  */ 00210012
 /* EXTERNAL MODULES    : - RCBF22N   INSERT BUILDING BLOCK          */ 00220012
 /*                       - RCBG22N   UPDATE BUILDING BLOCK          */ 00230012
 /*                       - RCBH22N   DELETE BUILDING BLOCK          */ 00240012
 /*                       - RCB004N   DATE CALCULATION               */ 00250012
 /*                                                                  */ 00260012
 /* MESSAGES            :                                            */ 00270012
 /*                                                                  */ 00280012
 /* PROCESSING DETAILS  : THIS PROGRAM HAS NOT BEEN GENERATED BUT    */ 00290012
 /*                       IS CREATED MANUALLY                        */ 00300012
 /*                                                                  */ 00310012
 /* NOTE                : DETECTED ERRORS SHOULD NOT BE HANDLED IN   */ 00320012
 /*                       THIS BUILDING BLOCK, BUT IN THE CALLING    */ 00330012
 /*  MODULE. THEREFOR THE PROCESSING HAS TO STOP IMMEDIATELY IF AN   */ 00340012
 /*  ERROR IS DETECTED, WITHOUT CAUSING AN ABEND. TO IMPROVE         */ 00350012
 /*  READABILITY THIS HAS BEEN DONE USING A 'EXIT LABEL' INSTEAD     */ 00360012
 /*  OF THE CONTINUOUS 'IF TO CONTINUE' CLAUSE.                      */ 00370012
 /*                                                                  */ 00380012
 /*  THE FOLLOWING PICTURES GIVE AN ILLUSTRATION OF THE POSSIBLE     */ 00390012
 /*  SITUATIONS, WHICH MAY OCCUR AND HAVE TO BE HANDLED              */ 00400012
 /*                                                                  */ 00410012
 /*  INPUT:           |--------------|                               */ 00420012
 /*                                                                  */ 00430012
 /*  CEDS:  1 - |----|                                               */ 00440012
 /*         2 - |----------|                                         */ 00450012
 /*         3 - |--------------------------|                         */ 00460012
 /*         4 -            |----|                                    */ 00470012
 /*         5 -            |---------------|                         */ 00480012
 /*         6 -                       |----|                         */ 00490012
 /*                                                                  */ 00500012
 /*  THOSE FIELDS IN CEDS FOR WHICH THE INPUT IS NOT THE OWNER,      */ 00510012
 /*  I.E. INDNULL HAS BEEN SET TO '99', ARE TO REMAIN UNCHANGED      */ 00520012
 /*                                                                  */ 00530012
 /*  CONCURRENT PERIODS WITH THE SAME DATA ARE TO BE MERGED          */ 00540012
 /*                                                                  */ 00550012
 /*  INPUT RECORD IS FILLED CORRECTLY, I.E. FIELD IS BLANK OR        */ 00560012
 /*  DECIMAL ZERO IF NULL.                                           */ 00570012
 /*                                                                  */ 00580012
 /*  MAINTENANCE LOG :                                               */ 00590012
 /*  ---------------                                                 */ 00600012
 /*                                                                  */ 00610012
 /*  DATE       | WORK-ITEMNO. | DESCRIPTION                         */ 00620012
 /*  --------------------------------------------------------------  */ 00630012
 /*  2001-10-29 | RC01230      | CSP TO PL1/CICS CONVERSION          */ 00640012
 /*  2002-01-08 | RC01229      | SERV REF INTERIM SOLUTION           */ 00650012
 /*  2009-06-19 | CEDS00000475 | CHANGES ARE MADE TO HANDLE FLEXIBLE-*/ 00660012
 /*             |              | WARRANTY/HARDBUNDLE FIELDS          */ 00670012
 /*             |              |                                     */ 00680012
 /********************************************************************/ 00690012
1RCBFAVN: PROC    (PTR_RCB220S_IN,                                      00700012
                   PTR_RCB220SI_IN,                                     00710012
                   PTR_RET_AREA_BB,                                     00720012
                   PTR_INT_AREA)                                        00730012
          OPTIONS (REENTRANT)                                           00740012
          REORDER;                                                      00750012
0/********************************************************************/ 00760012
 /*  PARAMETERS                                                      */ 00770012
 /********************************************************************/ 00780012
0DCL PTR_RCB220S_IN          PTR;                                       00790012
 DCL PTR_RCB220SI_IN         PTR;                                       00800012
 DCL PTR_RET_AREA_BB         PTR;                                       00810012
 DCL PTR_INT_AREA            PTR;                                       00820012
 DCL PTR_DATE_CALC           PTR;                                       00830012
0/********************************************************************/ 00840012
 /* EXTERNAL ENTRIES                                                 */ 00850012
 /********************************************************************/ 00860012
0DCL RCBF22N   ENTRY  EXTERNAL;      /* INSERT BUILDING BLOCK        */ 00870012
 DCL RCBG22N   ENTRY  EXTERNAL;      /* UPDATE BUILDING BLOCK        */ 00880012
 DCL RCBH22N   ENTRY  EXTERNAL;      /* DELETE BUILDING BLOCK        */ 00890012
 DCL RCB004N   ENTRY  EXTERNAL;      /* DATE CALCULATION             */ 00900012
0/********************************************************************/ 00910012
 /* EXTERNAL PARAMETER INTERFACES                                    */ 00920012
 /********************************************************************/ 00930012
0DCL 1 PARM_INT_AREA    BASED (PTR_INT_AREA),                           00940012
       %INCLUDE (RCBZ01S);;                                             00950012
 DCL 1 PARM_RET_AREA_BB BASED (PTR_RET_AREA_BB),                        00960012
       %INCLUDE (RCBZ02S);;                                             00970012
 DCL 1 PARM_DATE_CALC,                                                  00980012
       %INCLUDE (RCBZ03S);;                                             00990012
0/********************************************************************/ 01000012
 /* DB2 TABLE STRUCTURES                                             */ 01010012
 /********************************************************************/ 01020012
0DCL PTR_RCB220S_FETCH       PTR;                                       01030012
 DCL PTR_RCB220SI_FETCH      PTR;                                       01040012
 DCL PTR_RCB220S_OLD         PTR;                                       01050012
 DCL PTR_RCB220SI_OLD        PTR;                                       01060012
 DCL PTR_RCB220S_MERGE       PTR;                                       01070012
 DCL PTR_RCB220SI_MERGE      PTR;                                       01080012
 DCL PTR_RCB220S_OUT         PTR;                                       01090012
 DCL PTR_RCB220SI_OUT        PTR;                                       01100012
                                                                        01110012
0DCL 1 RCB220S_IN       BASED (PTR_RCB220S_IN),                         01120012
       %INCLUDE (RCB220S);;                                             01130012
 DCL 1 RCB220SI_IN      BASED (PTR_RCB220SI_IN),                        01140012
       %INCLUDE (RCB220SI);;                                            01150012
 DCL 1 RCB220S_FETCH,                                                   01160012
       %INCLUDE (RCB220S);;                                             01170012
 DCL 1 RCB220SI_FETCH,                                                  01180012
       %INCLUDE (RCB220SI);;                                            01190012
 DCL 1 RCB220S_OLD,                                                     01200012
       %INCLUDE (RCB220S);;                                             01210012
 DCL 1 RCB220SI_OLD,                                                    01220012
       %INCLUDE (RCB220SI);;                                            01230012
 DCL 1 RCB220S_MERGE,                                                   01240012
       %INCLUDE (RCB220S);;                                             01250012
 DCL 1 RCB220SI_MERGE,                                                  01260012
       %INCLUDE (RCB220SI);;                                            01270012
 DCL 1 RCB220S_OUT,                                                     01280012
       %INCLUDE (RCB220S);;                                             01290012
 DCL 1 RCB220SI_OUT,                                                    01300012
       %INCLUDE (RCB220SI);;                                            01310012
0/********************************************************************/ 01320012
 /*  BIT SWITCHES                                                    */ 01330012
 /********************************************************************/ 01340012
0DCL TRUE                  BIT (1)         INIT ('1'B);                 01350012
 DCL FALSE                 BIT (1)         INIT ('0'B);                 01360012
 DCL SWITCH_CURSOR_OPEN    BIT (1)         INIT ('0'B);                 01370012
 DCL SWITCH_END_OF_CURSOR  BIT (1)         INIT ('0'B);                 01380012
 DCL SWITCH_CHANGE         BIT (1)         INIT ('0'B);                 01390012
 DCL SWITCH_CHANGE_ALLOWED BIT (1)         INIT ('1'B);                 01400012
0/********************************************************************/ 01410012
 /*  ALL OTHER USED TEMPORARY FIELDS                                 */ 01420012
 /********************************************************************/ 01430012
0DCL 1 WRK_SQLCA  BASED (ADDR(PARM_RET_AREA_BB.RETURN_SQL))             01440012
                  LIKE SQLCA;                                           01450012
0DCL 1 WRK_FIELDS,                                                      01460012
       3 WRK_LEVEL          FIXED BIN (15),                             01470012
       3 WRK_MOD_NAME       CHAR (08),                                  01480012
       3 WRK_TABLE_NAME     CHAR (25)  INIT ('RCBV0220_SUPPL_CTR'),     01490012
       3 WRK_PREV_DATE      CHAR (10),                                  01500012
       3 WRK_NEXT_DATE      CHAR (10);                                  01510012
0DCL 1 WRK_RCBZ99S,                                                     01520012
       %INCLUDE (RCBZ99S);;                                             01530012
 DCL 1 WRK_RCBZ29S,                                                     01540012
       %INCLUDE (RCBZ29S);;                                             01550012
0/********************************************************************/ 01560012
 /*  BUILTIN FUNCTIONS                                               */ 01570012
 /********************************************************************/ 01580012
0DCL (ADDR,                                                             01590012
      LOW,                                                              01600012
      HIGH,                                                             01610012
      NULL,                                                             01620012
      STRING,                                                           01630012
      SUBSTR,                                                           01640012
      VERIFY)   BUILTIN;                                                01650012
0/********************************************************************/ 01660012
 /*  DB2/SQL SQLCA                                                   */ 01670012
 /********************************************************************/ 01680012
0 EXEC SQL                                                              01690012
    INCLUDE SQLCA                                                       01700012
    ;                                                                   01710012
0/********************************************************************/ 01720012
 /* DB2/SQL CURSORS                                                  */ 01730012
 /********************************************************************/ 01740012
0 EXEC SQL                                /* CURSOR TABEL            */ 01750012
    DECLARE CURS_TABLE CURSOR FOR                                       01760012
    SELECT *                                                            01770012
    FROM RCBV0220_SUPPL_CTR                                             01780012
    WHERE PRODUCT_TYPE             = :RCB220S_IN.PRODUCT_TYPE           01790012
      AND ORIGIN                   = :RCB220S_IN.ORIGIN                 01800012
      AND SEQUENCE_NUMBER          = :RCB220S_IN.SEQUENCE_NUMBER        01810012
      AND COUNTRY_NUMBER           = :RCB220S_IN.COUNTRY_NUMBER         01820012
      AND EFFECTIVE_DATE          <= :WRK_NEXT_DATE                     01830012
      AND END_DATE                >= :WRK_PREV_DATE                     01840012
    ORDER BY                                                            01850012
      EFFECTIVE_DATE                                                    01860012
    FOR FETCH ONLY                                        /* RC01219 */ 01870012
    ;                                                                   01880012
1/********************************************************************/ 01890012
 /*                 S T A R T   P R O C E S S I N G                  */ 01900012
 /********************************************************************/ 01910012
0 CALL RCBFAVN_INIT_COMMON;                                             01920012
0 CALL RCBFAVN_OPEN_CURS_TABLE;                                         01930012
  CALL RCBFAVN_FETCH_CURS_TABLE;                                        01940012
                                     /* PROCESS ALL CEDS TABLE INFO  */ 01950012
0 DO WHILE (¬ SWITCH_END_OF_CURSOR);                                    01960012
    CALL RCBFAVN_PROCESS_FETCH;                                         01970012
                                     /* STILL INFO LEFT TO INSERT    */ 01980012
0   IF RCB220S_IN.EFFECTIVE_DATE <= RCB220S_IN.END_DATE                 01990012
    THEN                                                                02000012
      DO;                                                               02010012
        CALL RCBFAVN_FETCH_CURS_TABLE_1;                                02020012
      END;                                                              02030012
    ELSE                                                                02040012
      DO;                                                               02050012
        SWITCH_END_OF_CURSOR = TRUE;                                    02060012
      END;                                                              02070012
  END;                                                                  02080012
  CALL RCBFAVN_PROCESS_RECORD;                                          02090012
                                     /* EXIT LABEL, SEE PROLOGUE     */ 02100012
  RCBFAVN_EXIT:                                                         02110012
0 IF SWITCH_CURSOR_OPEN                                                 02120012
  THEN                                                                  02130012
    DO;                                                                 02140012
      CALL RCBFAVN_CLOSE_CURS_TABLE;                                    02150012
    END;                                                                02160012
0 CALL RCBFAVN_END_COMMON;                                              02170012
1/********************************************************************/ 02180012
 /*                                                                  */ 02190012
 /* MODULE NAME      : RCBFAVN_INIT_COMMON                           */ 02200012
 /*                                                                  */ 02210012
 /* DESCRIPTION      : INIT PROGRAM                                  */ 02220012
 /*                                                                  */ 02230012
 /********************************************************************/ 02240012
0RCBFAVN_INIT_COMMON: PROC;                                             02250012
                                     /* INITIALISE POINTERS          */ 02260012
  PTR_RCB220S_FETCH  = ADDR(RCB220S_FETCH);                             02270012
  PTR_RCB220SI_FETCH = ADDR(RCB220SI_FETCH);                            02280012
  PTR_RCB220S_OLD    = ADDR(RCB220S_OLD);                               02290012
  PTR_RCB220SI_OLD   = ADDR(RCB220SI_OLD);                              02300012
  PTR_RCB220S_MERGE  = ADDR(RCB220S_MERGE);                             02310012
  PTR_RCB220SI_MERGE = ADDR(RCB220SI_MERGE);                            02320012
  PTR_RCB220S_OUT    = ADDR(RCB220S_OUT);                               02330012
  PTR_RCB220SI_OUT   = ADDR(RCB220SI_OUT);                              02340012
  PTR_DATE_CALC      = ADDR(PARM_DATE_CALC);                            02350012
                                     /* ADAPT MESSAGE AREA           */ 02360012
  WRK_MOD_NAME  = SDAISTP.SDAINAM;                                      02370012
  WRK_LEVEL     = PARM_INT_AREA.ID_MOD_LEVEL + 1;                       02380012
  PARM_INT_AREA.ID_MOD_PATH(WRK_LEVEL) = WRK_MOD_NAME;                  02390012
  PARM_INT_AREA.ID_MOD_LEVEL           = WRK_LEVEL;                     02400012
                                     /* START PROCESSING             */ 02410012
  PARM_RET_AREA_BB.RETURN_CODE = 0;                                     02420012
                                     /* SET SEARCH BOUNDARIES        */ 02430012
  IF RCB220S_IN.EFFECTIVE_DATE = '0001-01-01'                           02440012
  THEN                                                                  02450012
    DO;                                                                 02460012
      WRK_PREV_DATE = '0001-01-01';                                     02470012
    END;                                                                02480012
  ELSE                                                                  02490012
    DO;                                                                 02500012
      CALL RCBFAVN_TRANS_DATE (RCB220S_IN.EFFECTIVE_DATE, -1,           02510012
                               WRK_PREV_DATE);                          02520012
    END;                                                                02530012
  IF RCB220S_IN.END_DATE = '9999-12-31'                                 02540012
  THEN                                                                  02550012
    DO;                                                                 02560012
      WRK_NEXT_DATE = '9999-12-31';                                     02570012
    END;                                                                02580012
  ELSE                                                                  02590012
    DO;                                                                 02600012
      CALL RCBFAVN_TRANS_DATE (RCB220S_IN.END_DATE,+1,                  02610012
                               WRK_NEXT_DATE);                          02620012
    END;                                                                02630012
                                     /* STORE NEW PREVIOUS RECORD    */ 02640012
  RCB220S_OLD              = '';                                        02650012
  RCB220SI_OLD.INDNULL (*) = -1;                                        02660012
0 END RCBFAVN_INIT_COMMON;                                              02670012
1/********************************************************************/ 02680012
 /*                                                                  */ 02690012
 /* MODULE NAME      : PROCESS_FETCH                                 */ 02700012
 /*                                                                  */ 02710012
 /* DESCRIPTION      : PROCESS FETCHED RECORD                        */ 02720012
 /*                                                                  */ 02730012
 /********************************************************************/ 02740012
0RCBFAVN_PROCESS_FETCH: PROC;                                           02750012
 SELECT;                                                                02760012
                                     /* SITUATION - 1                */ 02770012
 WHEN (RCB220S_FETCH.END_DATE       <  RCB220S_IN.EFFECTIVE_DATE)       02780012
   DO;                                                                  02790012
                                     /* STORE NEW PREVIOUS RECORD    */ 02800012
     RCB220S_OLD  = RCB220S_FETCH, BY NAME;                             02810012
     RCB220SI_OLD = RCB220SI_FETCH, BY NAME;                            02820012
   END;                                                                 02830012
                                     /* SITUATION - 2                */ 02840012
 WHEN (RCB220S_FETCH.EFFECTIVE_DATE <  RCB220S_IN.EFFECTIVE_DATE &      02850012
       RCB220S_FETCH.END_DATE       >= RCB220S_IN.EFFECTIVE_DATE &      02860012
       RCB220S_FETCH.END_DATE       <= RCB220S_IN.END_DATE)             02870012
   DO;                                                                  02880012
                                     /* STORE NEW PREVIOUS RECORD    */ 02890012
     RCB220S_OLD  = RCB220S_FETCH, BY NAME;                             02900012
     RCB220SI_OLD = RCB220SI_FETCH, BY NAME;                            02910012
                                     /* MERGE NEW INFORMATION        */ 02920012
     CALL RCBFAVN_MERGE;                                                02930012
                                     /* CHECK IF MERGE ALLOWED       */ 02940012
     CALL RCBFAVN_CHANGE_ALLOWED;                                       02950012
     IF SWITCH_CHANGE_ALLOWED                                           02960012
     THEN                                                               02970012
       DO;                                                              02980012
         CALL RCBFAVN_COMPARE;                                          02990012
         IF SWITCH_CHANGE                                               03000012
         THEN                                                           03010012
           DO;                                                          03020012
                                     /* CHECK IF CHANGE ALLOWED      */ 03030012
                                     /* STORE NEW PREVIOUS RECORD    */ 03040012
             RCB220S_OLD          = RCB220S_MERGE, BY NAME;             03050012
             RCB220SI_OLD         = RCB220SI_MERGE, BY NAME;            03060012
             RCB220S_OLD.END_DATE = RCB220S_FETCH.END_DATE;             03070012
                                 /* INSERT NEW PREVIOUS RECORD   */     03080012
             RCB220S_OUT          = RCB220S_OLD, BY NAME;               03090012
             RCB220SI_OUT         = RCB220SI_OLD, BY NAME;              03100012
             CALL RCBFAVN_INSERT;                                       03110012
                                 /* CLOSE CEDS RECORD            */     03120012
             RCB220S_OUT          = RCB220S_FETCH, BY NAME;             03130012
             RCB220SI_OUT         = RCB220SI_FETCH, BY NAME;            03140012
             RCB220S_OUT.END_DATE = WRK_PREV_DATE;                      03150012
             CALL RCBFAVN_UPDATE;                                       03160012
           END;                                                         03170012
       END;                                                             03180012
                                     /* SET REMAINING PERIOD         */ 03190012
     IF RCB220S_FETCH.END_DATE = '9999-12-31'                           03200012
     THEN                                                               03210012
       DO;                                      /* TO FORCE LOOP END */ 03220012
         RCB220S_IN.EFFECTIVE_DATE = '9999-99-99';                      03230012
       END;                                                             03240012
     ELSE                                                               03250012
       DO;                                                              03260012
         CALL RCBFAVN_TRANS_DATE (RCB220S_FETCH.END_DATE, +1,           03270012
                                  RCB220S_IN.EFFECTIVE_DATE);           03280012
       END;                                                             03290012
   END;                                                                 03300012
                                     /* SITUATION - 3                */ 03310012
 WHEN (RCB220S_FETCH.EFFECTIVE_DATE <  RCB220S_IN.EFFECTIVE_DATE &      03320012
       RCB220S_FETCH.END_DATE       >  RCB220S_IN.END_DATE)             03330012
   DO;                                                                  03340012
                                     /* STORE NEW PREVIOUS RECORD    */ 03350012
     RCB220S_OLD  = RCB220S_FETCH, BY NAME;                             03360012
     RCB220SI_OLD = RCB220SI_FETCH, BY NAME;                            03370012
                                     /* MERGE NEW INFORMATION        */ 03380012
     CALL RCBFAVN_MERGE;                                                03390012
                                     /* CHECK IF MERGE ALLOWED       */ 03400012
     CALL RCBFAVN_CHANGE_ALLOWED;                                       03410012
     IF SWITCH_CHANGE_ALLOWED                                           03420012
     THEN                                                               03430012
       DO;                                                              03440012
         CALL RCBFAVN_COMPARE;                                          03450012
         IF SWITCH_CHANGE                                               03460012
         THEN                                                           03470012
           DO;                                                          03480012
                                     /* STORE NEW PREVIOUS RECORD    */ 03490012
             RCB220S_OLD          = RCB220S_MERGE, BY NAME;             03500012
             RCB220SI_OLD         = RCB220SI_MERGE, BY NAME;            03510012
                                     /* INSERT NEW RECORD            */ 03520012
             RCB220S_OUT          = RCB220S_OLD, BY NAME;               03530012
             RCB220SI_OUT         = RCB220SI_OLD, BY NAME;              03540012
             CALL RCBFAVN_INSERT;                                       03550012
                                     /* CLOSE CEDS RECORD            */ 03560012
             RCB220S_OUT          = RCB220S_FETCH, BY NAME;             03570012
             RCB220SI_OUT         = RCB220SI_FETCH, BY NAME;            03580012
             RCB220S_OUT.END_DATE = WRK_PREV_DATE;                      03590012
             CALL RCBFAVN_UPDATE;                                       03600012
                                     /* HANDLE FUTURE PERIOD         */ 03610012
             RCB220S_MERGE        = RCB220S_FETCH, BY NAME;             03620012
             RCB220SI_MERGE       = RCB220SI_FETCH, BY NAME;            03630012
                                     /* INSERT CEDS RECORD FUTURE    */ 03640012
             RCB220S_OUT      = RCB220S_MERGE, BY NAME;                 03650012
             RCB220SI_OUT     = RCB220SI_MERGE, BY NAME;                03660012
             RCB220S_OUT.EFFECTIVE_DATE  = WRK_NEXT_DATE;               03670012
             CALL RCBFAVN_INSERT;                                       03680012
           END;      /* COMPARE       */                                03690012
       END;          /* MERGE ALLOWED */                                03700012
                                     /* SET REMAINING PERIOD         */ 03710012
     RCB220S_IN.EFFECTIVE_DATE = '9999-99-99';                          03720012
   END;                                                                 03730012
                                     /* SITUATION - 4                */ 03740012
 WHEN (RCB220S_FETCH.EFFECTIVE_DATE >= RCB220S_IN.EFFECTIVE_DATE &      03750012
       RCB220S_FETCH.END_DATE       >= RCB220S_IN.EFFECTIVE_DATE &      03760012
       RCB220S_FETCH.END_DATE       <= RCB220S_IN.END_DATE)             03770012
   DO;                                                                  03780012
                                     /* SET REMAINING PERIOD         */ 03790012
     CALL RCBFAVN_MERGE;                                                03800012
                                                   /* START PTM 496 */  03810012
     IF RCB220S_FETCH.SOURCE_INDICATOR = RCB220S_IN.SOURCE_INDICATOR &  03820012
        RCB220S_FETCH.SOURCE_INDICATOR ¬= ' '      /*       PTM 556 */  03830012
     THEN                                                               03840012
       CALL RCBFAVN_PROCESS_SIT4;                                       03850012
     ELSE                                                               03860012
       DO;                                                              03870012
         CALL RCBFAVN_CHANGE_ALLOWED;                                   03880012
         IF SWITCH_CHANGE_ALLOWED                                       03890012
         THEN                                                           03900012
           CALL RCBFAVN_PROCESS_SIT4;                                   03910012
         ELSE                                                           03920012
           DO;                                                          03930012
             IF RCB220S_FETCH.EFFECTIVE_DATE                            03940012
                                     > RCB220S_IN.EFFECTIVE_DATE        03950012
             THEN                                                       03960012
                 CALL RCBFAVN_PROCESS_SIT4_SP;                          03970012
             ELSE                                                       03980012
               DO;         /* CREATE OLD RECORD              */         03990012
                 RCB220S_OLD        = RCB220S_FETCH, BY NAME;           04000012
                 RCB220SI_OLD       = RCB220SI_FETCH, BY NAME;          04010012
               END;                                                     04020012
           END;                                                         04030012
       END;                                                             04040012
                                                   /*   END PTM 496 */  04050012
     IF RCB220S_FETCH.END_DATE     = '9999-12-31'                       04060012
     THEN                                                               04070012
       DO;                                                              04080012
         RCB220S_IN.EFFECTIVE_DATE = '9999-99-99';                      04090012
       END;                                                             04100012
     ELSE                                                               04110012
       DO;                                                              04120012
         CALL RCBFAVN_TRANS_DATE (RCB220S_FETCH.END_DATE, +1,           04130012
                                 RCB220S_IN.EFFECTIVE_DATE);            04140012
       END;                                                             04150012
   END;                                                                 04160012
                                     /* SITUATION - 5                */ 04170012
 WHEN (RCB220S_FETCH.EFFECTIVE_DATE >= RCB220S_IN.EFFECTIVE_DATE &      04180012
       RCB220S_FETCH.EFFECTIVE_DATE <= RCB220S_IN.END_DATE       &      04190012
       RCB220S_FETCH.END_DATE       >  RCB220S_IN.END_DATE)             04200012
   DO;                                                                  04210012
     CALL RCBFAVN_MERGE;                                                04220012
                                                   /* START PTM 496 */  04230012
     IF RCB220S_FETCH.SOURCE_INDICATOR = RCB220S_IN.SOURCE_INDICATOR &  04240012
        RCB220S_FETCH.SOURCE_INDICATOR ¬= ' '      /*       PTM 556 */  04250012
     THEN                                                               04260012
       CALL RCBFAVN_PROCESS_SIT5;                                       04270012
     ELSE                                                               04280012
       DO;                                                              04290012
         CALL RCBFAVN_CHANGE_ALLOWED;                                   04300012
         IF SWITCH_CHANGE_ALLOWED                                       04310012
         THEN                                                           04320012
           CALL RCBFAVN_PROCESS_SIT5;                                   04330012
         ELSE                                                           04340012
           DO;                                                          04350012
             IF RCB220S_FETCH.EFFECTIVE_DATE                            04360012
                                     > RCB220S_IN.EFFECTIVE_DATE        04370012
             THEN                                                       04380012
               CALL RCBFAVN_PROCESS_SIT5_SP;                            04390012
           END;                                                         04400012
       END;                                                             04410012
                                                   /*   END PTM 496 */  04420012
                                     /* SET REMAINING PERIOD         */ 04430012
     RCB220S_IN.EFFECTIVE_DATE = '9999-99-99';                          04440012
   END;                                                                 04450012
                                     /* SITUATION - 6                */ 04460012
 WHEN (RCB220S_FETCH.EFFECTIVE_DATE >  RCB220S_IN.END_DATE)             04470012
   DO;                                                                  04480012
                                     /* INSERT NEW PERIOD            */ 04490012
     IF RCB220S_FETCH.EFFECTIVE_DATE > RCB220S_IN.EFFECTIVE_DATE        04500012
     THEN                                                               04510012
       DO;                                                              04520012
         CALL RCBFAVN_NO_CEDS;                                          04530012
                                     /* SET REMAINING PERIOD         */ 04540012
         RCB220S_IN.EFFECTIVE_DATE = RCB220S_FETCH.EFFECTIVE_DATE;      04550012
       END;                                                             04560012
                                     /* HANDLE EXISTING PERIOD       */ 04570012
     RCB220S_MERGE  = RCB220S_FETCH, BY NAME;                           04580012
     RCB220SI_MERGE = RCB220SI_FETCH, BY NAME;                          04590012
     CALL RCBFAVN_COMPARE;                                              04600012
     IF ¬SWITCH_CHANGE                                                  04610012
     THEN                                                               04620012
       DO;                                                              04630012
                                     /* UPDATE PREVIOUS RECORD       */ 04640012
         RCB220S_OLD.END_DATE = RCB220S_FETCH.END_DATE;                 04650012
         RCB220S_OUT          = RCB220S_OLD, BY NAME;                   04660012
         RCB220SI_OUT         = RCB220SI_OLD, BY NAME;                  04670012
         CALL RCBFAVN_UPDATE;                                           04680012
                                     /* DELETE CEDS RECORD           */ 04690012
         RCB220S_OUT          = RCB220S_FETCH, BY NAME;                 04700012
         RCB220SI_OUT         = RCB220SI_FETCH, BY NAME;                04710012
         CALL RCBFAVN_DELETE;                                           04720012
       END;                                                             04730012
                                     /* SET REMAINING PERIOD         */ 04740012
     RCB220S_IN.EFFECTIVE_DATE = '9999-99-99';                          04750012
   END;                                                                 04760012
 OTHERWISE;                                                             04770012
 END;                                                                   04780012
 END RCBFAVN_PROCESS_FETCH;                                             04790012
1/********************************************************************/ 04800012
 /*                                                                  */ 04810012
 /* MODULE NAME      : PROCESS_SIT4                                  */ 04820012
 /*                                                                  */ 04830012
 /* DESCRIPTION      : PROCESS FOR SITUATION - 4                     */ 04840012
 /*                                                                  */ 04850012
 /* COMMENT          : INSERTED DURING PTM 496 IMPLEMENTATION        */ 04860012
 /*                                                                  */ 04870012
 /********************************************************************/ 04880012
0RCBFAVN_PROCESS_SIT4: PROC;                                            04890012
                                                                        04900012
 RCB220S_OUT            = RCB220S_FETCH, BY NAME;                       04910012
 RCB220SI_OUT           = RCB220SI_FETCH, BY NAME;                      04920012
 CALL RCBFAVN_DELETE;                                                   04930012
                                   /* UPDATE/INSERT                  */ 04940012
 CALL RCBFAVN_COMPARE;                                                  04950012
 IF ¬SWITCH_CHANGE                                                      04960012
 THEN                                                                   04970012
   DO;                                                                  04980012
     RCB220S_OUT            = RCB220S_OLD, BY NAME;                     04990012
     RCB220SI_OUT           = RCB220SI_OLD, BY NAME;                    05000012
     RCB220S_OUT.END_DATE   = RCB220S_FETCH.END_DATE;                   05010012
     CALL RCBFAVN_UPDATE;                                               05020012
   END;                                                                 05030012
 ELSE                                                                   05040012
   DO;                                                                  05050012
     RCB220S_OUT            = RCB220S_MERGE, BY NAME;                   05060012
     RCB220SI_OUT           = RCB220SI_MERGE, BY NAME;                  05070012
     RCB220S_OUT.END_DATE   = RCB220S_FETCH.END_DATE;                   05080012
     CALL RCBFAVN_INSERT;                                               05090012
   END;                                                                 05100012
                           /* CREATE OLD RECORD              */         05110012
 RCB220S_OLD            = RCB220S_OUT, BY NAME;                         05120012
 RCB220SI_OLD           = RCB220SI_OUT, BY NAME;                        05130012
                                                                        05140012
 END RCBFAVN_PROCESS_SIT4;                                              05150012
1/********************************************************************/ 05160012
 /*                                                                  */ 05170012
 /* MODULE NAME      : PROCESS_SIT4_SP                               */ 05180012
 /*                                                                  */ 05190012
 /* DESCRIPTION      : PROCESS FOR SPECIAL SITUATION - 4             */ 05200012
 /*                                                                  */ 05210012
 /* COMMENT          : INSERTED DURING PTM 496 IMPLEMENTATION        */ 05220012
 /*                                                                  */ 05230012
 /********************************************************************/ 05240012
0RCBFAVN_PROCESS_SIT4_SP: PROC;                                         05250012
                                   /* UPDATE/INSERT                  */ 05260012
 CALL RCBFAVN_COMPARE;                                                  05270012
 IF ¬SWITCH_CHANGE                                                      05280012
 THEN                                                                   05290012
   DO;                                                                  05300012
     RCB220S_OUT            = RCB220S_OLD, BY NAME;                     05310012
     RCB220SI_OUT           = RCB220SI_OLD, BY NAME;                    05320012
     CALL RCBFAVN_TRANS_DATE (RCB220S_FETCH.EFFECTIVE_DATE,-1,          05330012
                              RCB220S_OUT.END_DATE);                    05340012
     CALL RCBFAVN_UPDATE;                                               05350012
   END;                                                                 05360012
 ELSE                                                                   05370012
   DO;                                                                  05380012
     RCB220S_OUT            = RCB220S_MERGE, BY NAME;                   05390012
     RCB220SI_OUT           = RCB220SI_MERGE, BY NAME;                  05400012
     CALL RCBFAVN_TRANS_DATE (RCB220S_FETCH.EFFECTIVE_DATE,-1,          05410012
                              RCB220S_OUT.END_DATE);                    05420012
     CALL RCBFAVN_INSERT;                                               05430012
   END;                                                                 05440012
                                 /* CREATE OLD RECORD              */   05450012
 RCB220S_OLD            = RCB220S_FETCH, BY NAME;                       05460012
 RCB220SI_OLD           = RCB220SI_FETCH, BY NAME;                      05470012
                                                                        05480012
 END RCBFAVN_PROCESS_SIT4_SP;                                           05490012
1/********************************************************************/ 05500012
 /*                                                                  */ 05510012
 /* MODULE NAME      : PROCESS_SIT5                                  */ 05520012
 /*                                                                  */ 05530012
 /* DESCRIPTION      : PROCESS FOR SITUATION - 5                     */ 05540012
 /*                                                                  */ 05550012
 /* COMMENT          : INSERTED DURING PTM 496 IMPLEMENTATION        */ 05560012
 /*                                                                  */ 05570012
 /********************************************************************/ 05580012
0RCBFAVN_PROCESS_SIT5: PROC;                                            05590012
                                  /* DELETE CEDS RECORD             */  05600012
 RCB220S_OUT          = RCB220S_FETCH, BY NAME;                         05610012
 RCB220SI_OUT         = RCB220SI_FETCH, BY NAME;                        05620012
 CALL RCBFAVN_DELETE;                                                   05630012
                                 /* INSERT CEDS RECORD WITH NEW    */   05640012
                                 /* EFFECTIVE DATE                 */   05650012
 RCB220S_OUT                = RCB220S_FETCH, BY NAME;                   05660012
 RCB220SI_OUT               = RCB220SI_FETCH, BY NAME;                  05670012
 RCB220S_OUT.EFFECTIVE_DATE = WRK_NEXT_DATE;                            05680012
 CALL RCBFAVN_INSERT;                                                   05690012
                                 /*  UPDATE/INSERT                 */   05700012
 CALL RCBFAVN_COMPARE;                                                  05710012
 IF ¬SWITCH_CHANGE                                                      05720012
 THEN                                                                   05730012
   DO;                                                                  05740012
     RCB220S_OUT            = RCB220S_OLD, BY NAME;                     05750012
     RCB220SI_OUT           = RCB220SI_OLD, BY NAME;                    05760012
     RCB220S_OUT.END_DATE   = RCB220S_MERGE.END_DATE;                   05770012
     CALL RCBFAVN_UPDATE;                                               05780012
   END;                                                                 05790012
 ELSE                                                                   05800012
   DO;                                                                  05810012
     RCB220S_OUT            = RCB220S_MERGE, BY NAME;                   05820012
     RCB220SI_OUT           = RCB220SI_MERGE, BY NAME;                  05830012
     CALL RCBFAVN_INSERT;                                               05840012
   END;                                                                 05850012
                                                                        05860012
 END RCBFAVN_PROCESS_SIT5;                                              05870012
1/********************************************************************/ 05880012
 /*                                                                  */ 05890012
 /* MODULE NAME      : PROCESS_SIT5_SP                               */ 05900012
 /*                                                                  */ 05910012
 /* DESCRIPTION      : PROCESS FOR SPECIAL SITUATION - 5             */ 05920012
 /*                                                                  */ 05930012
 /* COMMENT          : INSERTED DURING PTM 496 IMPLEMENTATION        */ 05940012
 /*                                                                  */ 05950012
 /********************************************************************/ 05960012
0RCBFAVN_PROCESS_SIT5_SP: PROC;                                         05970012
                                   /* UPDATE/INSERT                  */ 05980012
 CALL RCBFAVN_COMPARE;                                                  05990012
 IF ¬SWITCH_CHANGE                                                      06000012
 THEN                                                                   06010012
   DO;                                                                  06020012
     RCB220S_OUT            = RCB220S_OLD, BY NAME;                     06030012
     RCB220SI_OUT           = RCB220SI_OLD, BY NAME;                    06040012
     CALL RCBFAVN_TRANS_DATE (RCB220S_FETCH.EFFECTIVE_DATE,-1,          06050012
                              RCB220S_OUT.END_DATE);                    06060012
     CALL RCBFAVN_UPDATE;                                               06070012
   END;                                                                 06080012
 ELSE                                                                   06090012
   DO;                                                                  06100012
     RCB220S_OUT            = RCB220S_MERGE, BY NAME;                   06110012
     RCB220SI_OUT           = RCB220SI_MERGE, BY NAME;                  06120012
     CALL RCBFAVN_TRANS_DATE (RCB220S_FETCH.EFFECTIVE_DATE,-1,          06130012
                              RCB220S_OUT.END_DATE);                    06140012
     CALL RCBFAVN_INSERT;                                               06150012
   END;                                                                 06160012
                                                                        06170012
 END RCBFAVN_PROCESS_SIT5_SP;                                           06180012
1/********************************************************************/ 06190012
 /*                                                                  */ 06200012
 /* MODULE NAME      : PROCESS_RECORD                                */ 06210012
 /*                                                                  */ 06220012
 /* DESCRIPTION      : PROCESS INPUT RECORD                          */ 06230012
 /*                                                                  */ 06240012
 /********************************************************************/ 06250012
0RCBFAVN_PROCESS_RECORD: PROC;                                          06260012
0IF RCB220S_IN.EFFECTIVE_DATE <= RCB220S_IN.END_DATE                    06270012
 THEN                                                                   06280012
   DO;                                                                  06290012
                                     /* BLANK OUT NOT OWNED FIELDS   */ 06300012
     RCB220S_MERGE  = RCB220S_IN, BY NAME;                              06310012
     RCB220SI_MERGE = RCB220SI_IN, BY NAME;                             06320012
                                                /* START PTM 413 */     06330012
     IF  RCB220SI_MERGE.INDNULL(8) = 99       &           /* RC01192 */ 06340012
         RCB220S_OLD.WARRANTY_EXP_DATE ¬= ' ' &                         06350012
         RCB220SI_OLD.INDNULL(8) ¬= -1                    /* RC01192 */ 06360012
     THEN                                                               06370012
       DO;                                                              06380012
         RCB220S_MERGE.WARRANTY_EXP_DATE =                              06390012
                      RCB220S_OLD.WARRANTY_EXP_DATE;                    06400012
         RCB220SI_MERGE.INDNULL(8) = 0;                   /* RC01192 */ 06410012
       END;                                                             06420012
     IF  RCB220SI_MERGE.INDNULL(7) = 99       &           /* RC01229 */ 06430012
         RCB220S_OLD.SERVICE_LVL_CODE ¬= ' ' &                          06440012
         RCB220SI_OLD.INDNULL(7) ¬= -1                                  06450012
     THEN                                                               06460012
       DO;                                                              06470012
         RCB220S_MERGE.SERVICE_LVL_CODE =                               06480012
                      RCB220S_OLD.SERVICE_LVL_CODE;                     06490012
         RCB220SI_MERGE.INDNULL(7) = 0;                   /* RC01229 */ 06500012
       END;                                                             06510012
                                                 /* SOC CEDS00000475 */ 06520012
     IF  RCB220SI_MERGE.INDNULL(13) = 99       &                        06530012
         RCB220S_OLD.F_TYPE_OF_WARRANTY ¬= ' ' &                        06540012
         RCB220SI_OLD.INDNULL(13) ¬= -1                                 06550012
     THEN                                                               06560012
       DO;                                                              06570012
         RCB220S_MERGE.F_TYPE_OF_WARRANTY =                             06580012
                      RCB220S_OLD.F_TYPE_OF_WARRANTY;                   06590012
         RCB220SI_MERGE.INDNULL(13) = 0;                                06600012
       END;                                                             06610012
                                                                        06620012
     IF  RCB220SI_MERGE.INDNULL(14) = 99       &                        06630012
         RCB220S_OLD.F_SPLT_DATE ¬= ' '        &                        06640012
         RCB220SI_OLD.INDNULL(14) ¬= -1                                 06650012
     THEN                                                               06660012
       DO;                                                              06670012
         RCB220S_MERGE.F_SPLT_DATE =                                    06680012
                      RCB220S_OLD.F_SPLT_DATE;                          06690012
         RCB220SI_MERGE.INDNULL(14) = 0;                                06700012
       END;                                                             06710012
                                                                        06720012
     IF  RCB220SI_MERGE.INDNULL(15) = 99       &                        06730012
         RCB220S_OLD.SERVICE_LVL_CODE_2 ¬= ' ' &                        06740012
         RCB220SI_OLD.INDNULL(15) ¬= -1                                 06750012
     THEN                                                               06760012
       DO;                                                              06770012
         RCB220S_MERGE.SERVICE_LVL_CODE_2 =                             06780012
                      RCB220S_OLD.SERVICE_LVL_CODE_2;                   06790012
         RCB220SI_MERGE.INDNULL(15) = 0;                                06800012
       END;                                      /* EOC CEDS00000475 */ 06810012
                                                /*   END PTM 413 */     06820012
     CALL RCBFAVN_COMPLETE;                                             06830012
     CALL RCBFAVN_COMPARE;                                              06840012
     IF ¬SWITCH_CHANGE                                                  06850012
     THEN                                                               06860012
       DO;                                                              06870012
                                     /* UPDATE OLD PREVIOUS RECORD   */ 06880012
         RCB220S_OLD.END_DATE = RCB220S_IN.END_DATE;                    06890012
         RCB220S_OUT          = RCB220S_OLD, BY NAME;                   06900012
         RCB220SI_OUT         = RCB220SI_OLD, BY NAME;                  06910012
         CALL RCBFAVN_UPDATE;                                           06920012
       END;                                                             06930012
     ELSE                                                               06940012
       DO;                                                              06950012
                                     /* INSERT NEW PREVIOUS RECORD   */ 06960012
         RCB220S_OUT          = RCB220S_MERGE, BY NAME;                 06970012
         RCB220SI_OUT         = RCB220SI_MERGE, BY NAME;                06980012
         CALL RCBFAVN_INSERT;                                           06990012
       END;                                                             07000012
   END;                                                                 07010012
 END RCBFAVN_PROCESS_RECORD;                                            07020012
1/********************************************************************/ 07030012
 /*                                                                  */ 07040012
 /* MODULE NAME      : NO_CEDS                                       */ 07050012
 /*                                                                  */ 07060012
 /* DESCRIPTION      : PROCESS INPUT RECORD FOR PERIOD WHERE NO      */ 07070012
 /*                    CEDS INFORMATION EXISTS                       */ 07080012
 /*                                                                  */ 07090012
 /********************************************************************/ 07100012
0RCBFAVN_NO_CEDS: PROC;                                                 07110012
0RCB220S_MERGE  = RCB220S_IN, BY NAME;                                  07120012
 RCB220SI_MERGE = RCB220SI_IN, BY NAME;                                 07130012
 CALL RCBFAVN_COMPLETE;                                                 07140012
0CALL RCBFAVN_COMPARE;                                                  07150012
 IF ¬SWITCH_CHANGE                                                      07160012
 THEN                                                                   07170012
   DO;                                                                  07180012
                                     /* UPDATE OLD PREVIOUS RECORD   */ 07190012
     CALL RCBFAVN_TRANS_DATE (RCB220S_FETCH.EFFECTIVE_DATE, -1,         07200012
                              RCB220S_OLD.END_DATE);                    07210012
     RCB220S_OUT  = RCB220S_OLD, BY NAME;                               07220012
     RCB220SI_OUT = RCB220SI_OLD, BY NAME;                              07230012
     CALL RCBFAVN_UPDATE;                                               07240012
   END;                                                                 07250012
 ELSE                                                                   07260012
   DO;                                                                  07270012
                                     /* STORE NEW PREVIOUS RECORD    */ 07280012
     RCB220S_OLD  = RCB220S_MERGE, BY NAME;                             07290012
     RCB220SI_OLD = RCB220SI_MERGE, BY NAME;                            07300012
     CALL RCBFAVN_TRANS_DATE (RCB220S_FETCH.EFFECTIVE_DATE, -1,         07310012
                              RCB220S_OLD.END_DATE);                    07320012
                                 /* INSERT NEW PREVIOUS RECORD   */     07330012
     RCB220S_OUT  = RCB220S_OLD, BY NAME;                               07340012
     RCB220SI_OUT = RCB220SI_OLD, BY NAME;                              07350012
     CALL RCBFAVN_INSERT;                                               07360012
   END;                                                                 07370012
0END RCBFAVN_NO_CEDS;                                                   07380012
1/********************************************************************/ 07390012
 /*                                                                  */ 07400012
 /* MODULE NAME      : COMPARE                                       */ 07410012
 /*                                                                  */ 07420012
 /* DESCRIPTION      : COMPARE ALL FIELDS OF THE MERGED AND OLD      */ 07430012
 /*                    RECORD, EXCEPT FOR THE DATES                  */ 07440012
 /*                                                                  */ 07450012
 /********************************************************************/ 07460012
0RCBFAVN_COMPARE: PROC;                                                 07470012
0SWITCH_CHANGE = FALSE;                                                 07480012
                                     /* COMPARE FIELDS               */ 07490012
   /* CHECK ON COUNTRY NUMBER DELETED DURING RA01104 IMPLEMENTATION */  07500012
 IF RCB220SI_OLD.INDNULL(5)        ¬= RCB220SI_MERGE.INDNULL(5)         07510012
 THEN                                                                   07520012
   DO;                                                                  07530012
     IF RCB220S_MERGE.TYPE_OF_WARRANTY ¬= LOW(1) |                      07540012
        (RCB220S_OLD.TYPE_OF_MAINT ¬= WRK_RCBZ99S.TPMNT_ST1_DEF &       07550012
         RCB220S_OLD.TYPE_OF_MAINT ¬= WRK_RCBZ99S.TPMNT_ST3_DEF )       07560012
     THEN                                                               07570012
       DO;                                                              07580012
         SWITCH_CHANGE = TRUE;                                          07590012
       END;                                                             07600012
   END;                                                                 07610012
 ELSE                                                                   07620012
   DO;                                                                  07630012
     IF (RCB220SI_OLD.INDNULL(5)     = 0 &                              07640012
         RCB220SI_MERGE.INDNULL(5)   = 0 &                              07650012
         RCB220S_MERGE.TYPE_OF_MAINT ¬= LOW(1) &                        07660012
         RCB220S_MERGE.TYPE_OF_MAINT ¬= HIGH(1) &                       07670012
         RCB220S_OLD.TYPE_OF_MAINT   ¬= RCB220S_MERGE.TYPE_OF_MAINT) |  07680012
        (RCB220S_MERGE.TYPE_OF_WARRANTY = LOW(1)) |                     07690012
        ((RCB220S_MERGE.TYPE_OF_MAINT   = LOW(1) |                      07700012
          RCB220S_MERGE.TYPE_OF_MAINT   = HIGH(1)) &                    07710012
          VERIFY(RCB220S_OLD.TYPE_OF_MAINT,             /* PTM 468 */   07720012
                 WRK_RCBZ99S.TPMNT_MA) = 0 )                            07730012
     THEN                                                               07740012
       DO;                                                              07750012
         SWITCH_CHANGE = TRUE;                                          07760012
       END;                                                             07770012
   END;                                                                 07780012
 IF RCB220SI_OLD.INDNULL(6)        ¬= RCB220SI_MERGE.INDNULL(6)         07790012
 THEN                                                                   07800012
   DO;                                                                  07810012
     IF RCB220S_MERGE.TYPE_OF_WARRANTY ¬= LOW(1) |                      07820012
        (RCB220S_OLD.TYPE_OF_MAINT ¬= WRK_RCBZ99S.TPMNT_ST1_DEF &       07830012
         RCB220S_OLD.TYPE_OF_MAINT ¬= WRK_RCBZ99S.TPMNT_ST3_DEF )       07840012
     THEN                                                               07850012
       DO;                                                              07860012
         SWITCH_CHANGE = TRUE;                                          07870012
       END;                                                             07880012
   END;                                                                 07890012
 ELSE                                                                   07900012
   DO;                                                                  07910012
     IF RCB220SI_OLD.INDNULL(6)     = 0 &                               07920012
        RCB220SI_MERGE.INDNULL(6)   = 0 &                               07930012
        RCB220S_OLD.TYPE_OF_WARRANTY                                    07940012
                                   ¬= RCB220S_MERGE.TYPE_OF_WARRANTY    07950012
     THEN                                                               07960012
       DO;                                                              07970012
         SWITCH_CHANGE = TRUE;                                          07980012
       END;                                                             07990012
   END;                                                                 08000012
                                                 /* START OF RC01192 */ 08010012
   IF RCB220SI_OLD.INDNULL(7)         ¬= RCB220SI_MERGE.INDNULL(7)      08020012
   THEN                                                                 08030012
     DO;                                                                08040012
       SWITCH_CHANGE = TRUE;                                            08050012
     END;                                                               08060012
   ELSE                                                                 08070012
     DO;                                                                08080012
       IF RCB220SI_OLD.INDNULL(7)     = 0 &                             08090012
          RCB220SI_MERGE.INDNULL(7)   = 0 &                             08100012
          RCB220S_OLD.SERVICE_LVL_CODE                                  08110012
                                     ¬= RCB220S_MERGE.SERVICE_LVL_CODE  08120012
       THEN                                                             08130012
         DO;                                                            08140012
           SWITCH_CHANGE = TRUE;                                        08150012
         END;                                                           08160012
       END;                                                             08170012
                                                   /* END OF RC01192 */ 08180012
 IF RCB220SI_OLD.INDNULL(8)  ¬= RCB220SI_MERGE.INDNULL(8) /* RC01192 */ 08190012
 THEN                                                                   08200012
   DO;                                                                  08210012
     SWITCH_CHANGE = TRUE;                                              08220012
   END;                                                                 08230012
 ELSE                                                                   08240012
   DO;                                                                  08250012
     IF RCB220SI_OLD.INDNULL(8)     = 0 &                 /* RC01192 */ 08260012
        RCB220SI_MERGE.INDNULL(8)   = 0 &                 /* RC01192 */ 08270012
        RCB220S_OLD.WARRANTY_EXP_DATE                                   08280012
                                   ¬= RCB220S_MERGE.WARRANTY_EXP_DATE   08290012
     THEN                                                               08300012
       DO;                                                              08310012
         SWITCH_CHANGE = TRUE;                                          08320012
       END;                                                             08330012
   END;                                                                 08340012
                                                    /* START PTM 496 */ 08350012
 IF RCB220SI_OLD.INDNULL(9)  ¬= RCB220SI_MERGE.INDNULL(9) /* RC01192 */ 08360012
 THEN                                                                   08370012
   DO;                                                                  08380012
     SWITCH_CHANGE = TRUE;                                              08390012
   END;                                                                 08400012
 ELSE                                                                   08410012
   DO;                                                                  08420012
     IF RCB220SI_OLD.INDNULL(9)     = 0 &                 /* RC01192 */ 08430012
        RCB220SI_MERGE.INDNULL(9)   = 0 &                 /* RC01192 */ 08440012
        RCB220S_OLD.SOURCE_INDICATOR                                    08450012
                                   ¬= RCB220S_MERGE.SOURCE_INDICATOR    08460012
     THEN                                                               08470012
       DO;                                                              08480012
         SWITCH_CHANGE = TRUE;                                          08490012
       END;                                                             08500012
   END;                                                                 08510012
                                                 /* SOC CEDS00000475 */ 08520012
 IF RCB220SI_OLD.INDNULL(13) ¬= RCB220SI_MERGE.INDNULL(13)              08530012
 THEN                                                                   08540012
   DO;                                                                  08550012
     SWITCH_CHANGE = TRUE;                                              08560012
   END;                                                                 08570012
 ELSE                                                                   08580012
   DO;                                                                  08590012
     IF RCB220SI_OLD.INDNULL(13)     = 0 &                              08600012
        RCB220SI_MERGE.INDNULL(13)   = 0 &                              08610012
        RCB220S_OLD.F_TYPE_OF_WARRANTY                                  08620012
                                   ¬= RCB220S_MERGE.F_TYPE_OF_WARRANTY  08630012
     THEN                                                               08640012
       DO;                                                              08650012
         SWITCH_CHANGE = TRUE;                                          08660012
       END;                                                             08670012
   END;                                                                 08680012
                                                                        08690012
 IF RCB220SI_OLD.INDNULL(14) ¬= RCB220SI_MERGE.INDNULL(14)              08700012
 THEN                                                                   08710012
   DO;                                                                  08720012
     SWITCH_CHANGE = TRUE;                                              08730012
   END;                                                                 08740012
 ELSE                                                                   08750012
   DO;                                                                  08760012
     IF RCB220SI_OLD.INDNULL(14)     = 0 &                              08770012
        RCB220SI_MERGE.INDNULL(14)   = 0 &                              08780012
        RCB220S_OLD.F_SPLT_DATE                                         08790012
                                   ¬= RCB220S_MERGE.F_SPLT_DATE         08800012
     THEN                                                               08810012
       DO;                                                              08820012
         SWITCH_CHANGE = TRUE;                                          08830012
       END;                                                             08840012
   END;                                                                 08850012
                                                                        08860012
 IF RCB220SI_OLD.INDNULL(15)         ¬= RCB220SI_MERGE.INDNULL(15)      08870012
 THEN                                                                   08880012
   DO;                                                                  08890012
     SWITCH_CHANGE = TRUE;                                              08900012
     END;                                                               08910012
 ELSE                                                                   08920012
   DO;                                                                  08930012
     IF RCB220SI_OLD.INDNULL(15)     = 0 &                              08940012
        RCB220SI_MERGE.INDNULL(15)   = 0 &                              08950012
        RCB220S_OLD.SERVICE_LVL_CODE_2                                  08960012
                                   ¬= RCB220S_MERGE.SERVICE_LVL_CODE_2  08970012
     THEN                                                               08980012
       DO;                                                              08990012
           SWITCH_CHANGE = TRUE;                                        09000012
       END;                                                             09010012
   END;                                          /* EOC CEDS00000475 */ 09020012
                                                    /* END PTM 496   */ 09030012
 END RCBFAVN_COMPARE;                                                   09040012
1/********************************************************************/ 09050012
 /*                                                                  */ 09060012
 /* MODULE NAME      : CHANGE_ALLOWED                                */ 09070012
 /*                                                                  */ 09080012
 /* DESCRIPTION      : CHECK IF THE PROPOSED MERGE IS ALLOWED FROM   */ 09090012
 /*                    INPUT AND FETCHED RECORD. IF NOT ALLOWED      */ 09100012
 /*                    SKIP PERIOD                                   */ 09110012
 /*                                                                  */ 09120012
 /********************************************************************/ 09130012
0RCBFAVN_CHANGE_ALLOWED: PROC;                                          09140012
                                                                        09150012
0SWITCH_CHANGE_ALLOWED = TRUE;                                          09160012
                                     /* CHECK MERGE PROPOSED         */ 09170012
 SELECT;                                                                09180012
 WHEN (VERIFY(RCB220S_IN.TYPE_OF_MAINT,                                 09190012
              WRK_RCBZ99S.TPMNT_MA) = 0)                                09200012
   DO;                                                                  09210012
     CALL RCBFAVN_CHECK01;                                              09220012
   END;                                                                 09230012
 WHEN (VERIFY(RCB220S_IN.TYPE_OF_MAINT,                                 09240012
              WRK_RCBZ99S.TPMNT_MA) ¬= 0)                               09250012
   DO;                                                                  09260012
     CALL RCBFAVN_CHECK02;                                              09270012
   END;                                                                 09280012
 OTHERWISE;                                                             09290012
 END;                                                                   09300012
                                                                        09310012
 END RCBFAVN_CHANGE_ALLOWED;                                            09320012
1/********************************************************************/ 09330012
 /*                                                                  */ 09340012
 /* MODULE NAME      : CHECK01                                       */ 09350012
 /*                                                                  */ 09360012
 /* DESCRIPTION      : CHECK IF THE PROPOSED MERGE IS ALLOWED FROM   */ 09370012
 /*                    INPUT AND FETCHED RECORD IF INPUT RECORD      */ 09380012
 /*                    IS A '2-RECORD'                               */ 09390012
 /*                                                                  */ 09400012
 /* COMMENT          : PTM 496                                       */ 09410012
 /*                                                                  */ 09420012
 /********************************************************************/ 09430012
0RCBFAVN_CHECK01: PROC;                                                 09440012
                                                                        09450012
 IF RCB220S_FETCH.TYPE_OF_WARRANTY      ¬= '' |                         09460012
    VERIFY (RCB220S_FETCH.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_RENT) = 0 |   09470012
    VERIFY (RCB220S_FETCH.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_INTERNAL) = 0 09480012
 THEN                                                                   09490012
   DO;                                                                  09500012
     SWITCH_CHANGE_ALLOWED = FALSE;                                     09510012
   END;                                                                 09520012
                                                                        09530012
 IF (VERIFY(RCB220S_FETCH.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_MA) = 0 &     09540012
     RCB220S_FETCH.SOURCE_INDICATOR ¬= WRK_RCBZ29S.SRC_ONLINE &         09550012
     RCB220S_FETCH.SOURCE_INDICATOR ¬= RCB220S_IN.SOURCE_INDICATOR )    09560012
 THEN                                                                   09570012
   DO;                                                                  09580012
     SWITCH_CHANGE_ALLOWED = FALSE;                                     09590012
   END;                                                                 09600012
                                                                        09610012
 END RCBFAVN_CHECK01;                                                   09620012
1/********************************************************************/ 09630012
 /*                                                                  */ 09640012
 /* MODULE NAME      : CHECK02                                       */ 09650012
 /*                                                                  */ 09660012
 /* DESCRIPTION      : CHECK IF THE PROPOSED MERGE IS ALLOWED FROM   */ 09670012
 /*                    INPUT AND FETCHED RECORD IF INPUT RECORD      */ 09680012
 /*                    IS NOT A '2-RECORD'                           */ 09690012
 /*                                                                  */ 09700012
 /* COMMENT          : PTM 496                                       */ 09710012
 /*                                                                  */ 09720012
 /********************************************************************/ 09730012
0RCBFAVN_CHECK02: PROC;                                                 09740012
                                                                        09750012
 SELECT;                                                                09760012
 WHEN (RCB220S_IN.TYPE_OF_WARRANTY = LOW(1))                            09770012
   DO;                                                                  09780012
     CALL RCBFAVN_CHECK02_01;                                           09790012
   END;                                                                 09800012
 WHEN (RCB220S_IN.TYPE_OF_MAINT    = LOW(1) |                           09810012
       RCB220S_IN.TYPE_OF_MAINT    = HIGH(1))                           09820012
   DO;                                                                  09830012
     CALL RCBFAVN_CHECK02_02;                                           09840012
   END;                                                                 09850012
 OTHERWISE                                                              09860012
   DO;                                                                  09870012
     CALL RCBFAVN_CHECK02_03;                                           09880012
   END;                                                                 09890012
 END;                                                                   09900012
                                                                        09910012
 END RCBFAVN_CHECK02;                                                   09920012
1/********************************************************************/ 09930012
 /*                                                                  */ 09940012
 /* MODULE NAME      : CHECK02_01                                    */ 09950012
 /*                                                                  */ 09960012
 /* DESCRIPTION      : CHECK IF THE PROPOSED MERGE IS ALLOWED FROM   */ 09970012
 /*                    INPUT AND FETCHED RECORD IF INPUT RECORD      */ 09980012
 /*                    IS A DUMMY SOF RECORD                         */ 09990012
 /*                                                                  */ 10000012
 /* COMMENT          : PTM 496                                       */ 10010012
 /*                                                                  */ 10020012
 /********************************************************************/ 10030012
0RCBFAVN_CHECK02_01: PROC;                                              10040012
                                                                        10050012
 IF VERIFY(RCB220S_FETCH.TYPE_OF_MAINT,                                 10060012
           WRK_RCBZ99S.TPMNT_MA) = 0                                    10070012
 THEN                                                                   10080012
   DO;                                                                  10090012
     IF RCB220S_FETCH.END_DATE < PARM_INT_AREA.RUN_DATE                 10100012
     THEN                                                               10110012
       DO;                                                              10120012
         SWITCH_CHANGE_ALLOWED = FALSE;                                 10130012
       END;                                                             10140012
     ELSE                                                               10150012
       DO;                                                              10160012
         PARM_RET_AREA_BB.RETURN_CODE = 10;                             10170012
         GO TO RCBFAVN_EXIT;                                            10180012
       END;                                                             10190012
   END;                                                                 10200012
                                                                        10210012
 END RCBFAVN_CHECK02_01;                                                10220012
1/********************************************************************/ 10230012
 /*                                                                  */ 10240012
 /* MODULE NAME      : CHECK02_02                                    */ 10250012
 /*                                                                  */ 10260012
 /* DESCRIPTION      : CHECK IF THE PROPOSED MERGE IS ALLOWED FROM   */ 10270012
 /*                    INPUT AND FETCHED RECORD IF INPUT RECORD      */ 10280012
 /*                    IS A DUMMY CONTRACT RECORD                    */ 10290012
 /*                                                                  */ 10300012
 /* COMMENT          : PTM 496                                       */ 10310012
 /*                                                                  */ 10320012
 /********************************************************************/ 10330012
0RCBFAVN_CHECK02_02: PROC;                                              10340012
                                                                        10350012
 IF RCB220S_FETCH.TYPE_OF_WARRANTY      ¬= '' |                         10360012
    VERIFY (RCB220S_FETCH.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_RENT) = 0  |  10370012
    VERIFY (RCB220S_FETCH.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_INTERNAL) = 0 10380012
 THEN                                                                   10390012
   DO;                                                                  10400012
     SWITCH_CHANGE_ALLOWED = FALSE;                                     10410012
   END;                                                                 10420012
                                                                        10430012
 IF (VERIFY(RCB220S_FETCH.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_MA) = 0) &    10440012
     RCB220S_FETCH.SOURCE_INDICATOR   ¬= RCB220S_IN.SOURCE_INDICATOR    10450012
 THEN                                                                   10460012
   DO;                                                                  10470012
     SWITCH_CHANGE_ALLOWED = FALSE;                                     10480012
   END;                                                                 10490012
                                                                        10500012
                                                                        10510012
 END RCBFAVN_CHECK02_02;                                                10520012
1/********************************************************************/ 10530012
 /*                                                                  */ 10540012
 /* MODULE NAME      : CHECK02_03                                    */ 10550012
 /*                                                                  */ 10560012
 /* DESCRIPTION      : CHECK IF THE PROPOSED MERGE IS ALLOWED FROM   */ 10570012
 /*                    INPUT AND FETCHED RECORD IF INPUT RECORD      */ 10580012
 /*                    IS A SOF RECORD                               */ 10590012
 /*                                                                  */ 10600012
 /* COMMENT          : PTM 496                                       */ 10610012
 /*                                                                  */ 10620012
 /********************************************************************/ 10630012
0RCBFAVN_CHECK02_03: PROC;                                              10640012
                                                                        10650012
 IF VERIFY(RCB220S_FETCH.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_MA) = 0  &     10660012
    RCB220S_IN.TYPE_OF_WARRANTY   = '' &                                10670012
    VERIFY (RCB220S_IN.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_RENT) ¬= 0  &    10680012
    VERIFY (RCB220S_IN.TYPE_OF_MAINT,WRK_RCBZ99S.TPMNT_INTERNAL) ¬= 0   10690012
 THEN                                                                   10700012
   DO;                                                                  10710012
     IF RCB220S_FETCH.END_DATE < PARM_INT_AREA.RUN_DATE                 10720012
     THEN                                                               10730012
       DO;                                                              10740012
         SWITCH_CHANGE_ALLOWED = FALSE;                                 10750012
       END;                                                             10760012
     ELSE                                                               10770012
       DO;                                                              10780012
         PARM_RET_AREA_BB.RETURN_CODE = 10;                             10790012
         GO TO RCBFAVN_EXIT;                                            10800012
       END;                                                             10810012
   END;                                                                 10820012
                                                                        10830012
 END RCBFAVN_CHECK02_03;                                                10840012
1/********************************************************************/ 10850012
 /*                                                                  */ 10860012
 /* MODULE NAME      : MERGE                                         */ 10870012
 /*                                                                  */ 10880012
 /* DESCRIPTION      : MERGE INPUT RECORD AND CEDS RECORD INTO       */ 10890012
 /*                    MERGE RECORD                                  */ 10900012
 /*                                                                  */ 10910012
 /********************************************************************/ 10920012
0RCBFAVN_MERGE: PROC;                                                   10930012
                                     /* FIRST COPY INPUT RECORD      */ 10940012
0RCB220S_MERGE  = RCB220S_IN, BY NAME;                                  10950012
 RCB220SI_MERGE = RCB220SI_IN, BY NAME;                                 10960012
                                     /* MERGE FETCHED INTO RECORD    */ 10970012
  /* CHECK FOR COUNTRY NUMBER DELETED DURING RA01104 IMPLEMENTATION */  10980012
 IF RCB220SI_IN.INDNULL(5)          = 99                                10990012
 THEN                                                                   11000012
   DO;                                                                  11010012
     RCB220S_MERGE.TYPE_OF_MAINT    = RCB220S_FETCH.TYPE_OF_MAINT;      11020012
     RCB220SI_MERGE.INDNULL(5)      = RCB220SI_FETCH.INDNULL(5);        11030012
   END;                                                                 11040012
 IF RCB220SI_IN.INDNULL(6)          = 99                                11050012
 THEN                                                                   11060012
   DO;                                                                  11070012
     RCB220S_MERGE.TYPE_OF_WARRANTY = RCB220S_FETCH.TYPE_OF_WARRANTY;   11080012
     RCB220SI_MERGE.INDNULL(6)      = RCB220SI_FETCH.INDNULL(6);        11090012
   END;                                                                 11100012
                                                 /* START OF RC01192 */ 11110012
   IF RCB220SI_IN.INDNULL(7)          = 99                              11120012
   THEN                                                                 11130012
     DO;                                                                11140012
       RCB220S_MERGE.SERVICE_LVL_CODE = RCB220S_FETCH.SERVICE_LVL_CODE; 11150012
       RCB220SI_MERGE.INDNULL(7)      = RCB220SI_FETCH.INDNULL(7);      11160012
     END;                                                               11170012
                                                   /* END OF RC01192 */ 11180012
 IF RCB220SI_IN.INDNULL(8)          = 99                  /* RC01192 */ 11190012
 THEN                                                                   11200012
   DO;                                                                  11210012
     RCB220S_MERGE.WARRANTY_EXP_DATE                                    11220012
                                    = RCB220S_FETCH.WARRANTY_EXP_DATE;  11230012
     RCB220SI_MERGE.INDNULL(8)      = RCB220SI_FETCH.INDNULL(8);        11240012
   END;                                                                 11250012
 IF RCB220SI_IN.INDNULL(9)          = 99                  /* RC01192 */ 11260012
 THEN                                                                   11270012
   DO;                                                                  11280012
     RCB220S_MERGE.SOURCE_INDICATOR                                     11290012
                                    = RCB220S_FETCH.SOURCE_INDICATOR;   11300012
     RCB220SI_MERGE.INDNULL(9)      = RCB220SI_FETCH.INDNULL(9);        11310012
   END;                                                                 11320012
 IF RCB220SI_IN.INDNULL(13)        = 99          /* SOC CEDS00000475 */ 11330012
 THEN                                                                   11340012
   DO;                                                                  11350012
     RCB220S_MERGE.F_TYPE_OF_WARRANTY                                   11360012
                                    = RCB220S_FETCH.F_TYPE_OF_WARRANTY; 11370012
     RCB220SI_MERGE.INDNULL(13)     = RCB220SI_FETCH.INDNULL(13);       11380012
   END;                                                                 11390012
                                                                        11400012
 IF RCB220SI_IN.INDNULL(14)        = 99                                 11410012
 THEN                                                                   11420012
   DO;                                                                  11430012
     RCB220S_MERGE.F_SPLT_DATE      = RCB220S_FETCH.F_SPLT_DATE;        11440012
     RCB220SI_MERGE.INDNULL(14)     = RCB220SI_FETCH.INDNULL(14);       11450012
   END;                                                                 11460012
                                                                        11470012
 IF RCB220SI_IN.INDNULL(15)        = 99                                 11480012
 THEN                                                                   11490012
   DO;                                                                  11500012
     RCB220S_MERGE.SERVICE_LVL_CODE_2                                   11510012
                                    = RCB220S_FETCH.SERVICE_LVL_CODE_2; 11520012
     RCB220SI_MERGE.INDNULL(15)     = RCB220SI_FETCH.INDNULL(15);       11530012
   END;                                          /* EOC CEDS00000475 */ 11540012
 END RCBFAVN_MERGE;                                                     11550012
1/********************************************************************/ 11560012
 /*                                                                  */ 11570012
 /* MODULE NAME      : COMPLETE                                      */ 11580012
 /*                                                                  */ 11590012
 /* DESCRIPTION      : COMPLETE MERGE RECORD IF NO CEDS DATA         */ 11600012
 /*                    AVAILABLE                                     */ 11610012
 /*                                                                  */ 11620012
 /********************************************************************/ 11630012
0RCBFAVN_COMPLETE: PROC;                                                11640012
                                     /* COMPLETE OLD RECORD          */ 11650012
 IF RCB220SI_MERGE.INDNULL(5)       = 99                                11660012
 THEN                                                                   11670012
   DO;                                                                  11680012
     RCB220S_MERGE.TYPE_OF_MAINT    = '';                               11690012
     RCB220SI_MERGE.INDNULL(5)      = -1;                               11700012
   END;                                                                 11710012
 IF RCB220SI_MERGE.INDNULL(6)       = 99                                11720012
 THEN                                                                   11730012
   DO;                                                                  11740012
     RCB220S_MERGE.TYPE_OF_WARRANTY = '';                               11750012
     RCB220SI_MERGE.INDNULL(6)      = -1;                               11760012
   END;                                                                 11770012
                                                      /* SOC PTM1113 */ 11780012
 /* PTM1113: THE CODE THAT SETS SERVICE_LVL_CODE TO HIGH(3) AND      */ 11790012
 /* THE SLC INDICATOR TO -1 WHEN THE SLC INDICATOR IS 99             */ 11800012
 /* HAS BEEN REMOVED.                                                */ 11810012
                                                      /* EOC PTM1113 */ 11820012
 /* RC01229: HANDLE LIKE THE WAR_EXP                                 */ 11830012
                                                                        11840012
 IF RCB220SI_MERGE.INDNULL(7)       = 99                  /* RC01229 */ 11850012
 THEN                                                                   11860012
   DO;                                                                  11870012
     IF RCB220S_OLD.SERVICE_LVL_CODE  ¬= ' ' &                          11880012
        RCB220SI_OLD.INDNULL(7) ¬= -1                                   11890012
     THEN                                                               11900012
       DO;                                                              11910012
         RCB220S_MERGE.SERVICE_LVL_CODE  =                              11920012
                      RCB220S_OLD.SERVICE_LVL_CODE;                     11930012
         RCB220SI_MERGE.INDNULL(7) = 0;                                 11940012
       END;                                                             11950012
     ELSE                                                               11960012
       DO;                                                              11970012
         RCB220S_MERGE.SERVICE_LVL_CODE  = '';                          11980012
         RCB220SI_MERGE.INDNULL(7)      = -1;             /* RC01229 */ 11990012
       END;                                                             12000012
   END;                                                                 12010012
                                                                        12020012
 IF RCB220SI_MERGE.INDNULL(8)       = 99                  /* RC01192 */ 12030012
 THEN                                                                   12040012
   DO;                                                                  12050012
     IF RCB220S_OLD.WARRANTY_EXP_DATE ¬= ' ' &     /* START PTM 437 */  12060012
        RCB220SI_OLD.INDNULL(8) ¬= -1                     /* RC01192 */ 12070012
     THEN                                                               12080012
       DO;                                                              12090012
         RCB220S_MERGE.WARRANTY_EXP_DATE =                              12100012
                      RCB220S_OLD.WARRANTY_EXP_DATE;                    12110012
         RCB220SI_MERGE.INDNULL(8) = 0;                   /* RC01192 */ 12120012
       END;                                                             12130012
     ELSE                                            /* END PTM 437 */  12140012
       DO;                                                              12150012
         RCB220S_MERGE.WARRANTY_EXP_DATE  = '';                         12160012
         RCB220SI_MERGE.INDNULL(8)      = -1;             /* RC01192 */ 12170012
       END;                                                             12180012
   END;                                                                 12190012
                                                                        12200012
 IF RCB220SI_MERGE.INDNULL(13)       = 99        /* SOC CEDS00000475 */ 12210012
 THEN                                                                   12220012
   DO;                                                                  12230012
     IF RCB220S_OLD.F_TYPE_OF_WARRANTY  ¬= ' ' &                        12240012
        RCB220SI_OLD.INDNULL(13)        ¬= -1                           12250012
     THEN                                                               12260012
       DO;                                                              12270012
         RCB220S_MERGE.F_TYPE_OF_WARRANTY  =                            12280012
                      RCB220S_OLD.F_TYPE_OF_WARRANTY;                   12290012
         RCB220SI_MERGE.INDNULL(13)        = 0;                         12300012
       END;                                                             12310012
     ELSE                                                               12320012
       DO;                                                              12330012
         RCB220S_MERGE.F_TYPE_OF_WARRANTY  = '';                        12340012
         RCB220SI_MERGE.INDNULL(13)        = -1;                        12350012
       END;                                                             12360012
   END;                                                                 12370012
                                                                        12380012
 IF RCB220SI_MERGE.INDNULL(14)       = 99                               12390012
 THEN                                                                   12400012
   DO;                                                                  12410012
     IF RCB220S_OLD.F_SPLT_DATE         ¬= ' ' &                        12420012
        RCB220SI_OLD.INDNULL(14)        ¬= -1                           12430012
     THEN                                                               12440012
       DO;                                                              12450012
         RCB220S_MERGE.F_SPLT_DATE         =                            12460012
                      RCB220S_OLD.F_SPLT_DATE;                          12470012
         RCB220SI_MERGE.INDNULL(14)        = 0;                         12480012
       END;                                                             12490012
     ELSE                                                               12500012
       DO;                                                              12510012
         RCB220S_MERGE.F_SPLT_DATE         = '';                        12520012
         RCB220SI_MERGE.INDNULL(14)        = -1;                        12530012
       END;                                                             12540012
   END;                                                                 12550012
                                                                        12560012
 IF RCB220SI_MERGE.INDNULL(15)       = 99                               12570012
 THEN                                                                   12580012
   DO;                                                                  12590012
     IF RCB220S_OLD.SERVICE_LVL_CODE_2  ¬= ' ' &                        12600012
        RCB220SI_OLD.INDNULL(15)        ¬= -1                           12610012
     THEN                                                               12620012
       DO;                                                              12630012
         RCB220S_MERGE.SERVICE_LVL_CODE_2  =                            12640012
                      RCB220S_OLD.SERVICE_LVL_CODE_2;                   12650012
         RCB220SI_MERGE.INDNULL(15)        = 0;                         12660012
       END;                                                             12670012
     ELSE                                                               12680012
       DO;                                                              12690012
         RCB220S_MERGE.SERVICE_LVL_CODE_2  = '';                        12700012
         RCB220SI_MERGE.INDNULL(15)        = -1;                        12710012
       END;                                                             12720012
   END;                                          /* EOC CEDS00000475 */ 12730012
 END RCBFAVN_COMPLETE;                                                  12740012
1/********************************************************************/ 12750012
 /*                                                                  */ 12760012
 /* MODULE NAME      : INSERT                                        */ 12770012
 /*                                                                  */ 12780012
 /* DESCRIPTION      : INSERT ROW INTO RCBV0220_SUPPL_CTR USING      */ 12790012
 /*                    RCBF22N                                       */ 12800012
 /*                                                                  */ 12810012
 /********************************************************************/ 12820012
0RCBFAVN_INSERT: PROC;                                                  12830012
                                     /* SET DUMMY RECORD             */ 12840012
 IF RCB220S_OUT.TYPE_OF_MAINT      = LOW(1) |                           12850012
    RCB220S_OUT.TYPE_OF_WARRANTY   = LOW(1)                             12860012
 THEN                                                                   12870012
   DO;                                                                  12880012
     RCB220S_OUT.TYPE_OF_MAINT     = WRK_RCBZ99S.TPMNT_ST3_DEF;         12890012
     RCB220S_OUT.TYPE_OF_WARRANTY  = '';                                12900012
     RCB220SI_OUT.INDNULL (5)      = 0;                                 12910012
     RCB220SI_OUT.INDNULL (6)      = -1;                                12920012
   END;                                                                 12930012
 IF RCB220S_OUT.TYPE_OF_MAINT      = HIGH(1)                            12940012
 THEN                                                                   12950012
   DO;                                                                  12960012
     RCB220S_OUT.TYPE_OF_MAINT     = WRK_RCBZ99S.TPMNT_ST1_DEF;         12970012
     RCB220S_OUT.TYPE_OF_WARRANTY  = '';                                12980012
     RCB220SI_OUT.INDNULL (5)      = 0;                                 12990012
     RCB220SI_OUT.INDNULL (6)      = -1;                                13000012
   END;                                                                 13010012
                                     /* INSERT INTO TABLE            */ 13020012
 CALL RCBF22N (PTR_RCB220S_OUT,                                         13030012
               PTR_RCB220SI_OUT,                                        13040012
               PTR_RET_AREA_BB,                                         13050012
               PTR_INT_AREA);                                           13060012
 SELECT (PARM_RET_AREA_BB.RETURN_CODE);                                 13070012
 WHEN (0);                                                              13080012
 OTHERWISE                                                              13090012
   DO;                               /* STOP PROCESSING IMMEDIATELY  */ 13100012
     GO TO RCBFAVN_EXIT;                                                13110012
   END;                                                                 13120012
 END;                                                                   13130012
 END RCBFAVN_INSERT;                                                    13140012
1/********************************************************************/ 13150012
 /*                                                                  */ 13160012
 /* MODULE NAME      : UPDATE                                        */ 13170012
 /*                                                                  */ 13180012
 /* DESCRIPTION      : UPDATE ROW OF RCBV0220_SUPPL_CTR USING        */ 13190012
 /*                    RCBG22N                                       */ 13200012
 /*                                                                  */ 13210012
 /********************************************************************/ 13220012
0RCBFAVN_UPDATE: PROC;                                                  13230012
                                     /* SET DUMMY RECORD             */ 13240012
 IF RCB220S_OUT.TYPE_OF_MAINT      = LOW(1) |                           13250012
    RCB220S_OUT.TYPE_OF_WARRANTY   = LOW(1)                             13260012
 THEN                                                                   13270012
   DO;                                                                  13280012
     RCB220S_OUT.TYPE_OF_MAINT     = WRK_RCBZ99S.TPMNT_ST3_DEF;         13290012
     RCB220S_OUT.TYPE_OF_WARRANTY  = '';                                13300012
     RCB220SI_OUT.INDNULL (5)      = 0;                                 13310012
     RCB220SI_OUT.INDNULL (6)      = -1;                                13320012
   END;                                                                 13330012
 IF RCB220S_OUT.TYPE_OF_MAINT      = HIGH(1)                            13340012
 THEN                                                                   13350012
   DO;                                                                  13360012
     RCB220S_OUT.TYPE_OF_MAINT     = WRK_RCBZ99S.TPMNT_ST1_DEF;         13370012
     RCB220S_OUT.TYPE_OF_WARRANTY  = '';                                13380012
     RCB220SI_OUT.INDNULL (5)      = 0;                                 13390012
     RCB220SI_OUT.INDNULL (6)      = -1;                                13400012
   END;                                                                 13410012
                                     /* UPDATE OF TABLE              */ 13420012
 CALL RCBG22N (PTR_RCB220S_OUT,                                         13430012
               PTR_RCB220SI_OUT,                                        13440012
               PTR_RET_AREA_BB,                                         13450012
               PTR_INT_AREA);                                           13460012
 SELECT (PARM_RET_AREA_BB.RETURN_CODE);                                 13470012
 WHEN (0);                                                              13480012
 OTHERWISE                                                              13490012
   DO;                               /* STOP PROCESSING IMMEDIATELY  */ 13500012
     GO TO RCBFAVN_EXIT;                                                13510012
   END;                                                                 13520012
 END;                                                                   13530012
 END RCBFAVN_UPDATE;                                                    13540012
1/********************************************************************/ 13550012
 /*                                                                  */ 13560012
 /* MODULE NAME      : DELETE                                        */ 13570012
 /*                                                                  */ 13580012
 /* DESCRIPTION      : CLOSE ROW FROM RCBV0220_SUPPL_CTR USING       */ 13590012
 /*                    RCBH22N                                       */ 13600012
 /*                                                                  */ 13610012
 /********************************************************************/ 13620012
0RCBFAVN_DELETE: PROC;                                                  13630012
                                     /* DELETE OF TABLE ROW          */ 13640012
 CALL RCBH22N (PTR_RCB220S_OUT,                                         13650012
               PTR_RCB220SI_OUT,                                        13660012
               PTR_RET_AREA_BB,                                         13670012
               PTR_INT_AREA);                                           13680012
 SELECT (PARM_RET_AREA_BB.RETURN_CODE);                                 13690012
 WHEN (0,4);                                                            13700012
 OTHERWISE                                                              13710012
   DO;                               /* STOP PROCESSING IMMEDIATELY  */ 13720012
     GO TO RCBFAVN_EXIT;                                                13730012
   END;                                                                 13740012
 END;                                                                   13750012
 END RCBFAVN_DELETE;                                                    13760012
1/********************************************************************/ 13770012
 /*                                                                  */ 13780012
 /* MODULE NAME      : RCBFAVN_OPEN_CURS_TABLE                       */ 13790012
 /*                                                                  */ 13800012
 /* DESCRIPTION      : OPEN CURSOR TABLE                             */ 13810012
 /*                                                                  */ 13820012
 /********************************************************************/ 13830012
0RCBFAVN_OPEN_CURS_TABLE: PROC;                                         13840012
0EXEC SQL                                                               13850012
   OPEN CURS_TABLE                                                      13860012
   ;                                                                    13870012
 SELECT (SQLCA.SQLCODE);                                                13880012
 WHEN (0)                                                               13890012
   DO;                                                                  13900012
     SWITCH_CURSOR_OPEN   = TRUE;                                       13910012
     SWITCH_END_OF_CURSOR = FALSE;                                      13920012
   END;                                                                 13930012
 OTHERWISE                                                              13940012
   DO;                               /* STOP PROCESSING IMMEDIATELY  */ 13950012
     WRK_SQLCA                    = SQLCA;                              13960012
     PARM_RET_AREA_BB.RETURN_CODE = 20;                                 13970012
     GO TO RCBFAVN_EXIT;                                                13980012
   END;                                                                 13990012
 END;                                                                   14000012
 END RCBFAVN_OPEN_CURS_TABLE;                                           14010012
1/********************************************************************/ 14020012
 /*                                                                  */ 14030012
 /* MODULE NAME      : RCBFAVN_FETCH_CURS_TABLE                      */ 14040012
 /*                                                                  */ 14050012
 /* DESCRIPTION      : FETCH CURSOR FOR TABLE                        */ 14060012
 /*                                                                  */ 14070012
 /********************************************************************/ 14080012
0RCBFAVN_FETCH_CURS_TABLE: PROC;                                        14090012
                                     /* INIT STRUCTURES              */ 14100012
 RCB220S_FETCH  = '';                                                   14110012
 RCB220SI_FETCH = '';                                                   14120012
                                     /* FETCH CURSOR                 */ 14130012
 EXEC SQL                                                               14140012
   FETCH CURS_TABLE                                                     14150012
   INTO :RCB220S_FETCH  :RCB220SI_FETCH.INDNULL                         14160012
   ;                                                                    14170012
 SELECT (SQLCA.SQLCODE);                                                14180012
 WHEN (0);                                                              14190012
 WHEN (100)                                                             14200012
   DO;                                                                  14210012
     SWITCH_END_OF_CURSOR = TRUE;                                       14220012
   END;                                                                 14230012
 OTHERWISE                                                              14240012
   DO;                               /* STOP PROCESSING IMMEDIATELY  */ 14250012
     WRK_SQLCA                    = SQLCA;                              14260012
     PARM_RET_AREA_BB.RETURN_CODE = 20;                                 14270012
     GO TO RCBFAVN_EXIT;                                                14280012
   END;                                                                 14290012
 END;                                                                   14300012
 END RCBFAVN_FETCH_CURS_TABLE;                                          14310012
1/********************************************************************/ 14320012
 /*                                                                  */ 14330012
 /* MODULE NAME      : RCBFAVN_FETCH_CURS_TABLE_1                    */ 14340012
 /*                                                                  */ 14350012
 /* DESCRIPTION      : FETCH CURSOR FOR TABLE SKIPPING THOSE RECORDS */ 14360012
 /*                    WHICH HAVE BEEN INSERTED DURING THE INTEGRATE */ 14370012
 /*                    SUPERIOR PROCESS                              */ 14380012
 /*                                                                  */ 14390012
 /********************************************************************/ 14400012
0RCBFAVN_FETCH_CURS_TABLE_1: PROC;                                      14410012
 CALL RCBFAVN_FETCH_CURS_TABLE;                                         14420012
 DO WHILE (¬SWITCH_END_OF_CURSOR  &                                     14430012
           RCB220S_FETCH.END_DATE <                                     14440012
           RCB220S_IN.EFFECTIVE_DATE);                                  14450012
   CALL RCBFAVN_FETCH_CURS_TABLE;                                       14460012
 END;                                                                   14470012
 END RCBFAVN_FETCH_CURS_TABLE_1;                                        14480012
1/********************************************************************/ 14490012
 /*                                                                  */ 14500012
 /* MODULE NAME      : RCBFAVN_CLOSE_CURS_TABLE                      */ 14510012
 /*                                                                  */ 14520012
 /* DESCRIPTION      : CLOSE CURSOR TABLE                            */ 14530012
 /*                                                                  */ 14540012
 /********************************************************************/ 14550012
0RCBFAVN_CLOSE_CURS_TABLE: PROC;                                        14560012
0EXEC SQL                                                               14570012
   CLOSE CURS_TABLE                                                     14580012
   ;                                                                    14590012
 SELECT (SQLCA.SQLCODE);                                                14600012
 WHEN (0)                                                               14610012
   DO;                                                                  14620012
     SWITCH_CURSOR_OPEN = FALSE;                                        14630012
   END;                                                                 14640012
 OTHERWISE                                                              14650012
   DO;                               /* STOP PROCESSING IMMEDIATELY  */ 14660012
     WRK_SQLCA                    = SQLCA;                              14670012
     PARM_RET_AREA_BB.RETURN_CODE = 20;                                 14680012
     GO TO RCBFAVN_EXIT;                                                14690012
   END;                                                                 14700012
 END;                                                                   14710012
 END RCBFAVN_CLOSE_CURS_TABLE;                                          14720012
1/********************************************************************/ 14730012
 /*                                                                  */ 14740012
 /* MODULE NAME      : RCBFAVN_END_COMMON                            */ 14750012
 /*                                                                  */ 14760012
 /* DESCRIPTION      :                                               */ 14770012
 /*                                                                  */ 14780012
 /********************************************************************/ 14790012
0RCBFAVN_END_COMMON: PROC;                                              14800012
                                     /* END PROCESSING               */ 14810012
                                     /* RESET LEVEL                  */ 14820012
0PARM_INT_AREA.ID_MOD_LEVEL = WRK_LEVEL - 1;                            14830012
 END RCBFAVN_END_COMMON;                                                14840012
1/********************************************************************/ 14850012
 /*                                                                  */ 14860012
 /* MODULE NAME      : RCBFAVN_TRANS_DATE                            */ 14870012
 /*                                                                  */ 14880012
 /* DESCRIPTION      : CHANGE DATE BY NUMBER OF DAYS                 */ 14890012
 /*                                                                  */ 14900012
 /********************************************************************/ 14910012
0RCBFAVN_TRANS_DATE:  PROC (DATE_IN,                                    14920012
                            NUMBER,                                     14930012
                            DATE_OUT);                                  14940012
 DCL DATE_IN  CHAR (10);                                                14950012
 DCL DATE_OUT CHAR (10);                                                14960012
 DCL NUMBER   FIXED BIN (31);                                           14970012
 PARM_DATE_CALC                = '';                                    14980012
 PARM_DATE_CALC.WD_IN_FORMAT   = 'ISO';                                 14990012
 PARM_DATE_CALC.WD_OUT_FORMAT  = 'ISO';                                 15000012
 PARM_DATE_CALC.WD_IN_DATE     = DATE_IN;                               15010012
 PARM_DATE_CALC.WD_FUNCTION    = 'C';                                   15020012
 PARM_DATE_CALC.WD_PERIOD      = NUMBER;                                15030012
 PARM_DATE_CALC.WD_PERIOD_TYPE = 'D';                                   15040012
 CALL RCB004N (PTR_DATE_CALC);                                          15050012
 SELECT (PARM_DATE_CALC.WD_STATUS);                                     15060012
 WHEN ('')                                                              15070012
   DO;                                                                  15080012
     DATE_OUT = SUBSTR(PARM_DATE_CALC.WD_OUT_DATE,1,10);                15090012
   END;                                                                 15100012
 OTHERWISE                                                              15110012
   DO;                                                                  15120012
     PARM_RET_AREA_BB.RETURN_CODE = 20;                                 15130012
     GO TO RCBFAVN_EXIT;                                                15140012
   END;                                                                 15150012
 END;                                                                   15160012
0END RCBFAVN_TRANS_DATE;                                                15170012
1/*******************************************************************/  15180012
 /*DO NOT CHANGE THIS PART, IT IS MEANT FOR ABR                     */  15190012
 /*******************************************************************/  15200012
0 %INCLUDE DAIFPLH ;                     /* COMPILE DATE/TIME STAMP */  15210012
  $DAIMOD (RCBFAVN);                     /* MODULE TO BE COMPILED   */  15220012
0/*******************************************************************/  15230012
 /* END OF ABR BLOCK '                                              */  15240012
 /*******************************************************************/  15250012
0 END RCBFAVN;                                                          15260012