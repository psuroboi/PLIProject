1/* RCBDRJM - RCMS HW: COMPARE                                       */ 00010021
 /*                                                                  */ 00020021
 /********************************************************************/ 00030021
 /* 5695-153 (C) COPYRIGHT IBM EMEA WORLD TRADE CORPORATION 1991     */ 00040021
 /* LICENSED MATERIAL - PROGRAM PROPERTY OF IBM                      */ 00050021
 /* REFER TO COPYRIGHT INSTRUCTIONS: FORM G120-2083                  */ 00060021
 /********************************************************************/ 00070021
 /*                                                                  */ 00080021
 /* MODULE NAME      : RCBDRJM                                       */ 00090021
 /*                                                                  */ 00100021
 /* PROGRAM NAME     : RCBDRJP                                       */ 00110021
 /*                                                                  */ 00120021
 /* LANGUAGE         : PLISQL                                        */ 00130021
 /*                                                                  */ 00140021
 /* TYPE             : BATCH                                         */ 00150021
 /*                                                                  */ 00160021
 /* DESCRIPTION      : CREATE FULL OR DELTA EXTRACT FILES FOR RCMS,  */ 00170021
 /*                    AND A NEW FULL IMAGE,                         */ 00180021
 /*                    BY COMPARING OF OLD FULL IMAGE WITH DELTA     */ 00190021
 /*                    EXTRACT AND TEMPORARY TABLE                   */ 00200021
 /*                                                                  */ 00210021
 /* INPUT            : RCBDRJ0 - OLD FULL IMAGE                      */ 00220021
 /*                    RCBDRJ1 - DELTA EXTRACT                       */ 00230021
 /*                    RCBV0722_RCMS_HW                              */ 00240021
 /*                    RCBV0040_OU  (VIA RCBDR1M)                    */ 00250021
 /*                    RCBV0130_OU_STRUCT (VIA RCBDR1M)              */ 00260021
 /*                    RCBV0500_PARM                                 */ 00270021
 /*                                                                  */ 00280021
 /* OUTPUT           : RCBDRJ2 - NEW FULL IMAGE                      */ 00290021
 /*                    RCBDRJX - FULL OR DELTA FILES FOR RCMS        */ 00300021
 /*                              (X=A-L,N-U)                         */ 00310021
 /*                    RCB0M10 - MESSAGE FILE                        */ 00320021
 /*                                                                  */ 00330021
 /* EXTERNAL MODULES : RCB0M1M - MESSAGE MODULE                      */ 00340021
 /*                    RCB0E1M - ERROR MODULE                        */ 00350021
 /*                    RCB0T1M - RETRIEVE SYSTEM DATE                */ 00360021
 /*                    RCB004M - DATE CALCULATION                    */ 00370021
 /*                    RCB018M - CALCULATE HASH TOTAL                */ 00380021
 /*                    RCB019M - RETRIEVE COUNTRY NUMBERS            */ 00390021
 /*                    RCB020M - RETRIEVE RUN DATE                   */ 00400021
 /*                    RCBI50M - REFERENCE PARAMETER                 */ 00410021
 /*                    RCBF50M - INSERT PARAMETER                    */ 00420021
 /*                    RCBG50M - UPDATE PARAMETER                    */ 00430021
 /*                                                      SOC PTM1038 */ 00440021
 /*                    RCB022M - CHECK HORIZON DATE                  */ 00450021
 /*                                                      EOC PTM1038 */ 00460021
 /*                    RCBDR0M - CREATE HEADER TRAILER FOR RCMS      */ 00470021
 /*                    RCBDR1M - RETRIEVE OU STRUCTURE ARRAY         */ 00480021
 /*                    RCBDR2M - OU PARAMETER REPORT                 */ 00490021
 /*                    RCBDR6U - USER EXIT                           */ 00500021
 /*                    RCB024M   LOCK DB2 TABLE PARTITIONS   RC01219 */ 00510021
 /*                                                                  */ 00520021
 /* MESSAGES         : I050,0002,0003,0004,0005,0013,0014,0142,0168, */ 00530021
 /*                    0174,0175,0189,9999                           */ 00540021
 /*                                                                  */ 00550021
 /* DEPENDENCIES     :                                               */ 00560021
 /*                                                                  */ 00570021
 /* FREQUENCY        : USER DEPENDENT (ON REQUEST)                   */ 00580021
 /*                                                                  */ 00590021
 /* MAINTENANCE LOG :                                                */ 00600021
 /* ---------------                                                  */ 00610021
 /*                                                                  */ 00620021
 /* DATE       | WORK-ITEMNO. | DESCRIPTION                          */ 00630021
 /* ---------------------------------------------------------------  */ 00640021
 /* 1993-04-22 |              | CEDS R2.0                            */ 00650021
 /* 1993-09-20 | CED0009      | MONITOR FUNCTION CHANGED CNT_PIC10   */ 00660021
 /*            |              | FORM (10)9 INTO Z,ZZZ,ZZZ,ZZ9 FOR    */ 00670021
 /*            |              | MESSAGE 0004                         */ 00680021
 /* 1993-11-30 | CED0014      | CHANGE FETCH INTO CALL SEE PTM 374   */ 00690021
 /* 1995-05-09 | PTM0697      | WRK_DATES OF DIFFERENT FORMAT WERE   */ 00700021
 /*            |              | COMPARED IN R039.                    */ 00710021
 /* 1995-08-03 | PTM0725      | IMPROVE SLOT CHANGE IND. PROCESSING  */ 00720021
 /* 1995-09-14 | PTM0724      | RCMS SLOT PROCESSING          (DG)   */ 00730021
 /* 1995-09-14 | RC01141      | FILL SEQUENCE_KEY                    */ 00740021
 /* 1996-03-20 | PTM0909      | IMPROVE TEST OF USER EXIT            */ 00750021
 /* 1996-05-23 | PTM0926      | INITIALISATION OF WRK_HIST/FUT_SLOTS */ 00760021
 /* 1996-11-15 | PCR0012      | INCREASE SIZE OF RETENTION PERIODS   */ 00770021
 /* 1997-04-11 | PTM1036      | CORRECTED PROLOG                     */ 00780021
 /* 1997-05-05 | PTM1038      | CORRECT NAMES                        */ 00790021
 /* 1998-02-10 | PTM1157      | SET DELETE CODE FOR OU WITH 'E' CODE */ 00800021
 /* 1998-03-25 | PTM1168      | DO NOT ALWAYS REPEAT DELETES         */ 00810021
 /* 1999-03-05 | PTM1252      | HONGKONG/CHINA IBM INTERNAL LOGIC    */ 00820021
 /* 1999-07-06 | RC01219      | DORO                                 */ 00830021
 /* 2001-12-12 | RC01229      | SERV REF INTERIM                     */ 00840021
 /* 2004-07-02 | RB01254      | LAST PROCESSED DATE IN FULL IMAGE    */ 00850021
 /* 2010-05-05 | RC01306      | Restricting TPMNT Change (3=>A)      */ 00860021
 /*            |              | for Japan '760'                      */ 00870021
 /********************************************************************/ 00880021
 /********************************************************************/ 00890021
1RCBDRJM: PROC                                                          00900021
          OPTIONS (MAIN)                                                00910021
          REORDER;                                                      00920021
0/********************************************************************/ 00930021
 /* FILE DECLARATIONS (NON GSAM)                                     */ 00940021
 /********************************************************************/ 00950021
                                 /* ALL FILES LENGTH 864             */ 00960021
0DCL RCBDRJ0  FILE RECORD INPUT; /* OLD FULL IMAGE FILE              */ 00970021
0DCL RCBDRJ1  FILE RECORD INPUT; /* DELTA EXTRACT FILE               */ 00980021
0DCL RCBDRJ2  FILE RECORD OUTPUT;/* NEW FULL IMAGE FILE              */ 00990021
0DCL RCBDRJA  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 01  */ 01000021
 DCL RCBDRJB  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 02  */ 01010021
 DCL RCBDRJC  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 03  */ 01020021
 DCL RCBDRJD  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 04  */ 01030021
 DCL RCBDRJE  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 05  */ 01040021
 DCL RCBDRJF  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 06  */ 01050021
 DCL RCBDRJG  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 07  */ 01060021
 DCL RCBDRJH  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 08  */ 01070021
 DCL RCBDRJI  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 09  */ 01080021
 DCL RCBDRJJ  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 10  */ 01090021
 DCL RCBDRJK  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 11  */ 01100021
 DCL RCBDRJL  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 12  */ 01110021
 DCL RCBDRJN  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 13  */ 01120021
 DCL RCBDRJO  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 14  */ 01130021
 DCL RCBDRJP  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 15  */ 01140021
 DCL RCBDRJQ  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 16  */ 01150021
 DCL RCBDRJR  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 17  */ 01160021
 DCL RCBDRJS  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 18  */ 01170021
 DCL RCBDRJT  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 19  */ 01180021
 DCL RCBDRJU  FILE RECORD OUTPUT;/* FULL/DELTA FILE FOR RCMS GRP 20  */ 01190021
0DCL RCBDRJX(20)    FILE         /* FILES A-L, N-U                   */ 01200021
                    VARIABLE;                                           01210021
0/********************************************************************/ 01220021
 /* RECORD STRUCTURES FOR INPUT FILES                                */ 01230021
 /********************************************************************/ 01240021
                             /* SOC RB01254: ADD LAST_PROCESSED_DATE */ 01250021
0DCL 1 FILE_RCBDRJ0,             /* IOAREA OLD FULL IMAGE            */ 01260021
      %INCLUDE RCBDRIS;,                                                01270021
      3 LAST_PROCESSED_DATE CHAR(10);;                                  01280021
                             /* EOC RB01254   */                        01290021
                                                                        01300021
0                                /* FULL IMAGE HEADER/TRAILER        */ 01310021
 DCL 1 FILE_RCBDRJ0_H BASED(ADDR(FILE_RCBDRJ0)),                        01320021
      %INCLUDE RCBD01S;;                                                01330021
                                                                        01340021
 DCL FILE_RCBDRJ0_SRCC0MD        /* CURRENT                          */ 01350021
                    BASED(ADDR(FILE_RCBDRJ0.SRCC0MD))                   01360021
                    CHAR(236);                                          01370021
 DCL FILE_RCBDRJ0_HF_SLOT1_2     /* HISTORY SLOTS                    */ 01380021
                    BASED(ADDR(FILE_RCBDRJ0.HF_SLOT(1)))                01390021
                    CHAR(472);                                          01400021
 DCL FILE_RCBDRJ0_HF_SLOT3_4     /* FUTURE SLOTS                     */ 01410021
                    BASED(ADDR(FILE_RCBDRJ0.HF_SLOT(3)))                01420021
                    CHAR(472);                                          01430021
                                                                        01440021
0DCL 1 FILE_RCBDRJ1,             /* IOAREA DELTA EXTRACT             */ 01450021
      %INCLUDE RCBDRIS;;                                                01460021
0                                /* DELTA EXTRACT HEADER/TRAIL.      */ 01470021
 DCL 1 FILE_RCBDRJ1_H BASED(ADDR(FILE_RCBDRJ1)),                        01480021
      %INCLUDE RCBD01S;;                                                01490021
                                                                        01500021
 DCL FILE_RCBDRJ1_SRCC0MD        /* CURRENT                          */ 01510021
                    BASED(ADDR(FILE_RCBDRJ1.SRCC0MD))                   01520021
                    CHAR(236);                                          01530021
 DCL FILE_RCBDRJ1_HF_SLOT1_2     /* HISTORY SLOTS                    */ 01540021
                    BASED(ADDR(FILE_RCBDRJ1.HF_SLOT(1)))                01550021
                    CHAR(472);                                          01560021
 DCL FILE_RCBDRJ1_HF_SLOT3_4     /* FUTURE SLOTS                     */ 01570021
                    BASED(ADDR(FILE_RCBDRJ1.HF_SLOT(3)))                01580021
                    CHAR(472);                                          01590021
                                                                        01600021
0/********************************************************************/ 01610021
 /* EXTERNAL PARAMETER INTERFACES                                    */ 01620021
 /********************************************************************/ 01630021
0DCL PTR_INT_AREA        PTR;                                           01640021
 DCL PTR_RETURN_AREA_BB  PTR;                                           01650021
 DCL PTR_COUNTRY_AREA    PTR;                                           01660021
 DCL PTR_RUN_DATE_AREA   PTR;                                           01670021
0DCL 1 PARM_INT_AREA,                          /* INTERFACE AREA     */ 01680021
       %INCLUDE (RCBZ01S);;                                             01690021
0DCL 1 RETURN_AREA_BB,                         /* RETURN AREA        */ 01700021
       %INCLUDE (RCBZ02S);;                                             01710021
0DCL 1 DATE_AREA,                              /* DATE AREA          */ 01720021
       %INCLUDE (RCBZ03S);;                                             01730021
0DCL 1 COUNTRY_AREA,                           /* COUNTRY AREA       */ 01740021
       %INCLUDE (RCBZ26S);;                                             01750021
0DCL 1 RUN_DATE_AREA,                          /* RUN DATE AREA      */ 01760021
       %INCLUDE (RCBZ28S);;                                             01770021
 DCL 1 PARM_RCB024M,                           /* RCB024M PARM       */ 01780021
      %INCLUDE (RCBZ33S);;                                              01790021
0/********************************************************************/ 01800021
 /* SPECIAL AREAS                                                    */ 01810021
 /********************************************************************/ 01820021
 /* SOC RB01254 ADD NFI_AREA */                                         01830021
0DCL 1 NFI_AREA,                /* NEW FULL IMAGE AREA              */  01840021
      %INCLUDE RCBDRIS;,                                                01850021
      3 LAST_PROCESSED_DATE CHAR(10);;                                  01860021
 /* EOC RB01254              */                                         01870021
                                                                        01880021
0DCL 1 IOAREA_OUT,               /* IOAREA OUT                       */ 01890021
      %INCLUDE RCBDRIS;;                                                01900021
                                 /* HEADER/TRAILER AREA RCMS         */ 01910021
 DCL 1 IOAREA_OUT_H     BASED(ADDR(IOAREA_OUT)),                        01920021
      %INCLUDE RCBDR0S1;;                                               01930021
 DCL 1 IOAREA_OUT_HF_SLOT1_2     /* HISTORY SLOTS                    */ 01940021
                    BASED(ADDR(IOAREA_OUT.HF_SLOT(1)))                  01950021
                    CHAR(472);                                          01960021
 DCL 1 RCBDR0S0,                 /* HEADER/TRAILER AREA RCMS         */ 01970021
      %INCLUDE RCBDR0S0;;                                               01980021
0DCL 1 RCBDR1S0,                 /* OU STRUCTURE ARRAY               */ 01990021
      %INCLUDE (RCBDR1S0);;                                             02000021
 DCL PTR_RCBDR1S  PTR;           /* OUTPUT FILE POINTER              */ 02010021
0DCL 1 RCBDR2S0,                 /* OU PARAMETER REPORT              */ 02020021
      %INCLUDE (RCBDR2S0);;                                             02030021
 DCL PTR_RCBDR2S  PTR;           /* OUTPUT FILE POINTER              */ 02040021
1/********************************************************************/ 02050021
 /*  USER EXIT FIELDS                                                */ 02060021
 /********************************************************************/ 02070021
 DCL USER_SWITCH_EXIT    BIT(1);                                        02080021
0DCL 1 USER_EXIT,                                                       02090021
      3 UDTEUEX          CHAR(8),                                       02100021
      3 UDTECUF          CHAR(10);                                      02110021
1/********************************************************************/ 02120021
 /* DB2 TABLE STRUCTURES                                             */ 02130021
 /********************************************************************/ 02140021
0DCL 1 TB_RCBV722,                                                      02150021
      %INCLUDE (RCB722S);;                                              02160021
0DCL 1 TB_RCBV500,                                                      02170021
      %INCLUDE (RCB500S);;                                              02180021
 DCL 1 TB_RCBV500_I,                                                    02190021
      %INCLUDE (RCB500SI);;                                             02200021
0DCL 1 TB_RCB005    BASED (ADDR(TB_RCBV500))                            02210021
                    UNALIGNED,                                          02220021
      %INCLUDE (RCBP05S);;                                              02230021
0DCL 1 TB_RCB010    BASED (ADDR(TB_RCBV500))                            02240021
                    UNALIGNED,                                          02250021
      %INCLUDE (RCBP10S);;                                              02260021
0DCL 1 TB_RCB011    BASED (ADDR(TB_RCBV500))                            02270021
                    UNALIGNED,                                          02280021
      %INCLUDE (RCBP11S);;                                              02290021
0DCL 1 TB_RCB014    BASED (ADDR(TB_RCBV500)),                           02300021
      %INCLUDE (RCBP14S);;                                              02310021
0DCL 1 TB_RCB016    BASED (ADDR(TB_RCBV500)),                           02320021
      %INCLUDE (RCBP16S);;                                              02330021
0DCL 1 TB_RCB024    BASED (ADDR(TB_RCBV500)),                           02340021
      %INCLUDE (RCBP24S);;                                              02350021
0DCL 1 TB_RCB037    BASED (ADDR(TB_RCBV500)),                           02360021
      %INCLUDE (RCBP37S);;                                              02370021
1/********************************************************************/ 02380021
 /* SORT KEYS                                                        */ 02390021
 /********************************************************************/ 02400021
0DCL 1 SK_NEW,                   /* SORT KEY NEW                     */ 02410021
      3 EOF              CHAR (1),                                      02420021
      3 KEY,                     /* SORT KEY HW                      */ 02430021
       5 PRODUCT_TYPE    CHAR (4),                                      02440021
       5 ORIGIN          CHAR (2),                                      02450021
       5 SEQUENCE_NUMBER CHAR (7);                                      02460021
0DCL 1 SK0          LIKE SK_NEW; /* SORT KEY RCBDRJ0                 */ 02470021
 DCL 1 SK1          LIKE SK_NEW; /* SORT KEY RCBDRJ1                 */ 02480021
 DCL 1 SK2          LIKE SK_NEW; /* KEY RCBV0722_RCMS_HW             */ 02490021
 DCL 1 SK_OLD       LIKE SK_NEW; /* OLD SORT KEY                     */ 02500021
1/********************************************************************/ 02510021
 /* EXTERNAL ENTRI528                                                */ 02520021
 /********************************************************************/ 02530021
0DCL PLIXOPT   EXTERNAL                                                 02540021
               CHAR (30) VARYING INIT ('ISA(20K),NOSTAE');              02550021
0DCL RCB0M1M        EXT ENTRY;   /* MESSAGE MODULE                   */ 02560021
 DCL RCB0E1M        EXT ENTRY;   /* ERROR MODULE                     */ 02570021
 DCL RCB0T1M        EXT ENTRY;   /* RETRIEVE SYSTEM DATE             */ 02580021
 DCL RCB004M        EXT ENTRY;   /* DATE CALCULATION                 */ 02590021
 DCL RCB018M        EXT ENTRY;   /* HASH TOTAL CALCULATION           */ 02600021
 DCL RCB019M        EXT ENTRY;   /* RETRIEVE COUNTRY NUMBERS         */ 02610021
 DCL RCB020M        EXT ENTRY;   /* RETRIEVE RUN DATE                */ 02620021
                                                      /* SOC PTM1038 */ 02630021
 DCL RCB022M        EXT ENTRY;   /* CHECK HORIZON DATE               */ 02640021
                                                      /* EOC PTM1038 */ 02650021
 DCL RCBI50M        EXT ENTRY;   /* REFERENCE PARAMETER              */ 02660021
 DCL RCBF50M        EXT ENTRY;   /* INSERT PARAMETER                 */ 02670021
 DCL RCBG50M        EXT ENTRY;   /* UPDATE PARAMETER                 */ 02680021
 DCL RCBDR0M        EXT ENTRY;   /* CREATE HEADER/TRAILER            */ 02690021
 DCL RCBDR1M        EXT ENTRY;   /* OU STRUCTURE ARRAY               */ 02700021
 DCL RCBDR2M        EXT ENTRY;   /* OU PARAMETER REPORT              */ 02710021
 DCL RCBDR6U        EXT ENTRY;   /* USER EXIT                        */ 02720021
 DCL RCB024M   ENTRY  EXTERNAL;          /* LOCK DB2 TABLE PARTITION */ 02730021
0/********************************************************************/ 02740021
 /* BIT SWITCHES                                                     */ 02750021
 /********************************************************************/ 02760021
 DCL 1 SWITCHES,                                                        02770021
     3 TRUE             BIT(1)       INIT('1'B),                        02780021
     3 FALSE            BIT(1)       INIT('0'B),                        02790021
     3 SWITCH_USER_EXIT BIT(1)       INIT('1'B),                        02800021
     3 WRK_END_OF_SLOTS BIT(1);                                         02810021
0/********************************************************************/ 02820021
 /* MISCELLANEOUS FIELDS                                             */ 02830021
 /********************************************************************/ 02840021
0DCL WRK_MOD_NAME         CHAR (08)   INIT ('RCBDRJM ');                02850021
 DCL WRK_LEVEL            FIXED BIN (15);                               02860021
 DCL I                    FIXED BIN (15);                               02870021
 DCL WRK_PGM_NAME         CHAR (08)   INIT ('RCBDRJP ');                02880021
 DCL WRK_SYSTEM_TYPE      CHAR (01)   INIT ('B');                       02890021
 DCL WRK_PGR_TYPE         CHAR (03);                                    02900021
 DCL WRK_PROC_ID          CHAR (04);                                    02910021
 DCL WRK_CTRYNO           CHAR (03)   INIT ('');                        02920021
 DCL WRK_RUN_DATE         CHAR (10);                                    02930021
 DCL WRK_LENGTH_PARM      FIXED BIN (15);                               02940021
 DCL WRK_TIME_STAMP       CHAR (20);                                    02950021
 DCL WRK_SYSTEM_ID        PIC'99';     /* WRK FIELD FOR MSG NR       */ 02960021
 DCL WRK_SYSTEM_ID_PIC4   BASED(ADDR(RCBDR0S0.SYSTEM_ID))               02970021
                          PIC'9999';   /* TO FILL CHAR FIELD WITH NUM*/ 02980021
 DCL WRK_HIST_RET_PERIOD  PIC'999';    /* HISTORY RETENTION PER(DAYS)*/ 02990021
 DCL WRK_HIST_START_DATE  PIC'99999999';         /* PTM 697          */ 03000021
 DCL WRK_ENDDATE          BASED(ADDR(IOAREA_OUT.HF_SLOT(1).ENDDATE))    03010021
                          PIC'99999999';         /* PTM 697          */ 03020021
 DCL WRK_HIST_SLOTS       PIC'9';                                       03030021
 DCL WRK_FUT_SLOTS        PIC'9';                                       03040021
 DCL WRK_HF_SLOT1_2       CHAR(472);                                    03050021
 DCL WRK_RCBDRJ0          CHAR (07)   INIT ('RCBDRJ0');                 03060021
 DCL WRK_RCBDRJ1          CHAR (07)   INIT ('RCBDRJ1');                 03070021
 DCL WRK_RCBDRJ2          CHAR (07)   INIT ('RCBDRJ2');                 03080021
 DCL WRK_RCBDRI1          CHAR (07)   INIT ('RCBDRI1'); /* DELTA FILE*/ 03090021
 DCL WRK_INDNULL          FIXED BIN(15);                                03100021
 DCL WRK_HORIZON_DATE     CHAR (10);                                    03110021
 DCL WRK_OU_CODE    CHAR(7)  INIT(' ');/* OU_CODE WORK FIELD         */ 03120021
 DCL WRK_OU_CODE_O  CHAR(7)  INIT(' ');/* OU_CODE WORK FIELD PREV.   */ 03130021
 DCL 1 WRK_RCB014,                     /* SAVE FOR UPDATE RUN SEQ NO */ 03140021
      %INCLUDE (RCBP14S);;                                              03150021
 DCL WRK_OU_PARM_REP      CHAR (01);   /* OU PARM REPORT REQUESTED   */ 03160021
 DCL OU_NR          FIXED BIN(15);     /* OU_NR WITHIN P11_ARRAY     */ 03170021
 DCL OU_NR_LOW      FIXED BIN(15);     /* LOWER BOUNDERY             */ 03180021
 DCL OU_NR_HIGH     FIXED BIN(15);     /* UPPER BOUNDERY             */ 03190021
 DCL OU_FOUND       BIT(1);                                             03200021
0DCL SQLCODE_FETCH  FIXED BIN(31);     /* RESULT OF FETCH            */ 03210021
 DCL 1 P10_ARRAY(20),            /* SYSTEM ID ARRAY FROM PARM 10     */ 03220021
      3 EXTRACT_TYPE             /* TYPE OF EXTRACT                  */ 03230021
                    CHAR(1);                                            03240021
 DCL 1 P11_ARRAY,                /* OU CODE ARRAY FROM PARM 11       */ 03250021
      %INCLUDE RCBDR1S1;;                                               03260021
 DCL WRK_HASH_RCBDRJ0     FIXED DEC (15,0);                             03270021
 DCL WRK_HASH_RCBDRJ1     FIXED DEC (15,0);                             03280021
0DCL 1 COUNT,                                                           03290021
       3 RCBDRJ0_HASH     FIXED DEC (15,0),                             03300021
       3 RCBDRJ1_HASH     FIXED DEC (15,0),                             03310021
       3 RCBDRJ2_HASH     FIXED DEC (15,0),                             03320021
       3 RCBDRJX_HASH(20) FIXED DEC (15,0),                             03330021
       3 RCBDRJ0          FIXED BIN (31),                               03340021
       3 RCBDRJ1          FIXED BIN (31),                               03350021
       3 RCBDRJ2          FIXED BIN (31),                               03360021
       3 RCBDRJX(20)      FIXED BIN (31);                               03370021
 DCL CNT_TOT               FIXED DEC (9,0)     INIT (0);                03380021
 DCL CNT_PIC10             PIC 'Z,ZZZ,ZZZ,ZZ9';        /* WI CED0009 */ 03390021
 DCL CNT_PIC15             PIC '(15)9';                                 03400021
 DCL TRUE           BIT(1)             INIT('1'B);                      03410021
 DCL FALSE          BIT(1)             INIT('0'B);                      03420021
1/********************************************************************/ 03430021
 /*  BUILTIN FUNCTIONS                                               */ 03440021
 /********************************************************************/ 03450021
0DCL (ADDR,                                                             03460021
     CSTG,                                                              03470021
     DATE,                                                              03480021
     NULL,                                                              03490021
     STG,                                                               03500021
     PLIRETC,                                                           03510021
     STRING,                                                            03520021
     SUBSTR,                                                            03530021
     TIME)                   BUILTIN;                                   03540021
1/********************************************************************/ 03550021
 /* ON ENDFILE                                                       */ 03560021
 /********************************************************************/ 03570021
0ON ENDFILE (RCBDRJ0)                                                   03580021
   BEGIN;                                                               03590021
     SK0.EOF = '1';                                                     03600021
   END;                                                                 03610021
 ON ENDFILE (RCBDRJ1)                                                   03620021
   BEGIN;                                                               03630021
     SK1.EOF = '1';                                                     03640021
   END;                                                                 03650021
0/********************************************************************/ 03660021
 /* ON ERROR CONDITIONS                                              */ 03670021
 /********************************************************************/ 03680021
 %INCLUDE RCB0E0M;                                                      03690021
 END;                                                                   03700021
1/********************************************************************/ 03710021
 /* DB2/SQL SQLCA                                                    */ 03720021
 /********************************************************************/ 03730021
0 EXEC SQL                                                              03740021
    INCLUDE SQLCA                                                       03750021
   ;                                                                    03760021
0/********************************************************************/ 03770021
 /* DB2/SQL CURSORS                                                  */ 03780021
 /********************************************************************/ 03790021
                                 /************************************/ 03800021
                                 /* CURSOR_1_V722                    */ 03810021
                                 /* RETRIEVE FROM TEMP.TABLE         */ 03820021
                                 /************************************/ 03830021
 EXEC SQL                                                               03840021
   DECLARE CURSOR_1_V722 CURSOR FOR                                     03850021
   SELECT DISTINCT PRODUCT_TYPE                                         03860021
         ,ORIGIN                                                        03870021
         ,SEQUENCE_NUMBER                                               03880021
   FROM RCBV0722_RCMS_HW                                                03890021
   WHERE COUNTRY_NUMBER = :WRK_CTRYNO                                   03900021
   ORDER BY PRODUCT_TYPE                                                03910021
           ,ORIGIN                                                      03920021
           ,SEQUENCE_NUMBER                                             03930021
   FOR FETCH ONLY                                         /* RC01219 */ 03940021
           ;                                                            03950021
                                 /************************************/ 03960021
                                 /* CURSOR_1_V500                    */ 03970021
                                 /* RETRIEVE FROM PARAMETER TABLE    */ 03980021
                                 /************************************/ 03990021
 EXEC SQL                                                               04000021
   DECLARE CURSOR_1_V500 CURSOR FOR                                     04010021
   SELECT *                                                             04020021
   FROM RCBV0500_PARM                                                   04030021
   WHERE PARAMETER_NUMBER     = :TB_RCBV500.PARAMETER_NUMBER            04040021
     AND PARAMETER_KEY     LIKE :TB_RCBV500.PARAMETER_KEY               04050021
   ORDER BY PARAMETER_KEY                                               04060021
   FOR FETCH ONLY                                         /* RC01219 */ 04070021
           ;                                                            04080021
1/********************************************************************/ 04090021
 /*                 S T A R T   P R O C C E S S I N G                */ 04100021
 /********************************************************************/ 04110021
 CALL R090_INIT_PROG;                        /* INIT PROGRAM         */ 04120021
 CALL R080_INIT_PROCESSING;                  /* INIT PROCESSING      */ 04130021
 DO WHILE (SK_NEW.EOF = '0');    /* WHILE NOT EOF                    */ 04140021
   SELECT;                                                              04150021
                                             /* SITUATION 1          */ 04160021
     WHEN (STRING(SK0) = STRING(SK1) &                                  04170021
           STRING(SK1) = STRING(SK2))                                   04180021
       DO;                                                              04190021
         CALL R002_GET_SEL(FILE_RCBDRJ1.SRCC0MD.IODPDBU.BUCODE);        04200021
         IF STRING(FILE_RCBDRJ0.SRCC0MD.IODPDBU) =                      04210021
            STRING(FILE_RCBDRJ1.SRCC0MD.IODPDBU)                        04220021
           THEN                                                         04230021
             DO;                                                        04240021
               CALL R031_UPD;                /* CHANGED RECORD       */ 04250021
             END;                                                       04260021
           ELSE                                                         04270021
             DO;                                                        04280021
               CALL R002_GET_SEL(FILE_RCBDRJ0.SRCC0MD.IODPDBU.BUCODE);  04290021
               CALL R032_DEL;                /* DELETE RECORD        */ 04300021
               CALL R002_GET_SEL(FILE_RCBDRJ1.SRCC0MD.IODPDBU.BUCODE);  04310021
               CALL R034_INSERT;             /* INSERT RECORD        */ 04320021
             END;                                                       04330021
                                                                        04340021
         CALL R021_WRITE_RCBDRJ2;            /* WRITE F.I.RECORD     */ 04350021
         CALL R010_READ0;                    /* READ F.I. RECORD     */ 04360021
         CALL R011_READ1;                    /* READ DELTA RECORD    */ 04370021
         CALL R012_FETCH_CURSOR_1_V722;      /* READ TEMP.TAB.RECORD */ 04380021
       END;                                                             04390021
                                             /* SITUATION 2          */ 04400021
     WHEN (STRING(SK0) = STRING(SK2) &                                  04410021
           STRING(SK0) < STRING(SK1))                                   04420021
       DO;                                                              04430021
         CALL R002_GET_SEL(FILE_RCBDRJ0.SRCC0MD.IODPDBU.BUCODE);        04440021
         CALL R032_DEL;                      /* DELETED RECORD       */ 04450021
         CALL R010_READ0;                    /* READ F.I. RECORD     */ 04460021
         CALL R012_FETCH_CURSOR_1_V722;      /* READ TEMP.TAB. RECORD*/ 04470021
       END;                                                             04480021
                                             /* SITUATION 3          */ 04490021
     WHEN (STRING(SK0) < STRING(SK1) &                                  04500021
           STRING(SK0) < STRING(SK2))                                   04510021
       DO;                                                              04520021
         CALL R002_GET_SEL(FILE_RCBDRJ0.SRCC0MD.IODPDBU.BUCODE);        04530021
         CALL R033_NO_CHANGE;                /* NO CHANGE RECORD     */ 04540021
         CALL R021_WRITE_RCBDRJ2;            /* WRITE F.I.RECORD     */ 04550021
         CALL R010_READ0;                    /* READ F.I. RECORD     */ 04560021
       END;                                                             04570021
                                             /* SITUATION 4          */ 04580021
     WHEN (STRING(SK1) = STRING(SK2) &                                  04590021
           STRING(SK1) < STRING(SK0))                                   04600021
       DO;                                                              04610021
         CALL R002_GET_SEL(FILE_RCBDRJ1.SRCC0MD.IODPDBU.BUCODE);        04620021
         CALL R034_INSERT;                   /* INSERT RECORD        */ 04630021
         CALL R021_WRITE_RCBDRJ2;            /* WRITE F.I.RECORD     */ 04640021
         CALL R011_READ1;                    /* READ F.I. RECORD     */ 04650021
         CALL R012_FETCH_CURSOR_1_V722;      /* READ TEMP.TAB. RECORD*/ 04660021
       END;                                                             04670021
                                             /* SITUATION 5          */ 04680021
     WHEN (STRING(SK2) < STRING(SK0) &                                  04690021
           STRING(SK2) < STRING(SK1))                                   04700021
       DO;                                                              04710021
         CALL R012_FETCH_CURSOR_1_V722;      /* READ TEMP.TAB. RECORD*/ 04720021
       END;                                                             04730021
     OTHERWISE                                                          04740021
       DO;                                                              04750021
         CALL R100_ERROR (NULL, 'OTHER', '#001');                       04760021
       END;                                                             04770021
   END;                                                                 04780021
                                             /* DETERMINE SMALLEST   */ 04790021
   CALL R059_PROCESS_SK;                     /* SORT KEY             */ 04800021
 END;                                                                   04810021
 CALL R089_END_PROCESSING;                                              04820021
 CALL R099_TERM;                             /* TERMINATE PROGRAM    */ 04830021
1/********************************************************************/ 04840021
 /*                                                                  */ 04850021
 /* MODULE NAME      : R001_LOCK_TABLES                              */ 04860021
 /*                                                                  */ 04870021
 /* DESCRIPTION      : LOCK TABLES UNTIL PROGRAM ENDS                */ 04880021
 /*                                                                  */ 04890021
 /********************************************************************/ 04900021
 R001_LOCK_TABLES: PROC;                                                04910021
                                                                        04920021
 PARM_RCB024M.COUNTRY_NUMBER = WRK_CTRYNO;            /* SOC RC01219 */ 04930021
                                                                        04940021
 PARM_RCB024M.VIEW_NAME      = 'RCBT0722_RCMS_HW';                      04950021
 PARM_RCB024M.LOCK_MODE      = 'S';                    /* SHARE MODE */ 04960021
                                                                        04970021
 CALL RCB024M (ADDR(PARM_RCB024M),                                      04980021
               PTR_RETURN_AREA_BB,                                      04990021
               PTR_INT_AREA);                                           05000021
                                                                        05010021
 SELECT(RETURN_AREA_BB.RETURN_CODE);                                    05020021
   WHEN (0);                                                            05030021
   WHEN (4)                        /* INVALID OR AMBIGUOUS PARAMETER */ 05040021
     DO;                                                                05050021
       CALL R100_ERROR (NULL, 'OTHER', '#002');                         05060021
     END;                                                               05070021
   OTHERWISE                                                            05080021
     DO;                                                                05090021
       CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),               05100021
                                 'DB2',                                 05110021
                                 '#003');                               05120021
     END;                                                               05130021
 END;                                                 /* EOC RC01219 */ 05140021
                                                                        05150021
 END R001_LOCK_TABLES;                                                  05160021
1/********************************************************************/ 05170021
 /*                                                                  */ 05180021
 /* MODULE NAME      : R002_GET_SEL                                  */ 05190021
 /*                                                                  */ 05200021
 /* DESCRIPTION      : GET SELECTION FOR OU CODE                     */ 05210021
 /*                                                                  */ 05220021
 /********************************************************************/ 05230021
 R002_GET_SEL: PROC(OU_CODE);                                           05240021
 DCL OU_CODE      CHAR(7);       /* OU CODE                         */  05250021
 OU_NR_LOW  = 1;                 /* SET BOUNDERIES                  */  05260021
 OU_NR_HIGH = RCBDR1S0.MAX_OU_SEQNR;                                    05270021
 OU_FOUND   = FALSE;                                                    05280021
                                 /* DO BINARY SEARCH FOR OU CODE    */  05290021
 DO WHILE (OU_NR_LOW <= OU_NR_HIGH);                                    05300021
   OU_NR = (OU_NR_HIGH + OU_NR_LOW) / 2;                                05310021
   SELECT;                       /* CHECK WHERE WE ARE              */  05320021
                                 /* WHERE WE WANT TO BE             */  05330021
     WHEN (P11_ARRAY.OU_CODE(OU_NR) = OU_CODE)                          05340021
       DO;                                                              05350021
                                 /* FORCE LOOP EXIT                 */  05360021
         OU_FOUND   = TRUE;                                             05370021
         OU_NR_HIGH = OU_NR_LOW - 1;                                    05380021
       END;                                                             05390021
                                 /* WE HAVE TO LOOK HIGHER          */  05400021
     WHEN (P11_ARRAY.OU_CODE(OU_NR) < OU_CODE)                          05410021
       DO;                                                              05420021
         OU_NR_LOW = OU_NR + 1;  /* MOVE LOWER BOUNDERY UP          */  05430021
       END;                                                             05440021
     OTHERWISE                                                          05450021
       DO;                       /* WE HAVE TO LOOK LOWER           */  05460021
         OU_NR_HIGH = OU_NR - 1; /* MOVE UPPER BOUNDERY DOWN        */  05470021
       END;                                                             05480021
     END;                                                               05490021
   END;                                                                 05500021
 END R002_GET_SEL;                                                      05510021
1/********************************************************************/ 05520021
 /*                                                                  */ 05530021
 /* MODULE NAME      : R010_READ0                                    */ 05540021
 /*                                                                  */ 05550021
 /* DESCRIPTION      : READ OLD FULL IMAGE                           */ 05560021
 /*                                                                  */ 05570021
 /********************************************************************/ 05580021
 R010_READ0: PROC;                                                      05590021
 READ FILE(RCBDRJ0) INTO (FILE_RCBDRJ0);                                05600021
 IF SK0.EOF = '0'                /* NOT YET EOF                      */ 05610021
   THEN                                                                 05620021
     DO;                                                                05630021
       SELECT(FILE_RCBDRJ0_H.KEY);                                      05640021
         WHEN (' ');                                                    05650021
         WHEN ('99999999999999999999')                                  05660021
           DO;                                                          05670021
             SK0.EOF = '1';                                             05680021
           END;                                                         05690021
         OTHERWISE                                                      05700021
           DO;                                                          05710021
             COUNT.RCBDRJ0 = COUNT.RCBDRJ0 + 1;                         05720021
             CALL RCB018M (SUBSTR(FILE_RCBDRJ0.TYPESER.SERNO,5,4),      05730021
                           COUNT.RCBDRJ0_HASH,                          05740021
                           PTR_INT_AREA);                               05750021
             SK0.KEY = '';                                              05760021
             SK0.PRODUCT_TYPE = FILE_RCBDRJ0.TYPESER.TYPE;              05770021
             SK0.ORIGIN       = SUBSTR(FILE_RCBDRJ0.TYPESER.SERNO,1,2); 05780021
             SK0.SEQUENCE_NUMBER =                                      05790021
                                SUBSTR(FILE_RCBDRJ0.TYPESER.SERNO,3,7); 05800021
             /* TEMPORARY FIX, TO BE REMOVED WHEN TPMNT=A IS            05810021
                PROPERLY HANDLED IN T220 UPSTREAM */                    05820021
             IF WRK_CTRYNO = '672' |  /* CHINA            PTM 1252 */   05830021
                WRK_CTRYNO = '738'    /* HONGKONG */                    05840021
             THEN DO;                                                   05850021
               IF SUBSTR(FILE_RCBDRJ0.SRCC0MD.CUNOUSE,3,1) = '9' &      05860021
                  FILE_RCBDRJ0.SRCC0MD.TPMNT = '3'                      05870021
               THEN                                                     05880021
                  FILE_RCBDRJ0.SRCC0MD.TPMNT = 'A';                     05890021
               DO I = 1 TO 4;                                           05900021
                 IF SUBSTR(FILE_RCBDRJ0.HF_SLOT(I).CUNOUSE,3,1) = '9' & 05910021
                    FILE_RCBDRJ0.HF_SLOT(I).TPMNT = '3'                 05920021
                 THEN                                                   05930021
                    FILE_RCBDRJ0.HF_SLOT(I).TPMNT = 'A';                05940021
               END;                                                     05950021
             END;                                                       05960021
             ELSE DO;                                                   05970021
              IF WRK_CTRYNO ¬= '760'                      /* RC01306 */ 05980021
              THEN DO;                                    /* RC01306 */ 05990021
               IF SUBSTR(FILE_RCBDRJ0.SRCC0MD.CUNOUSE,3,2) = '99' &     06000021
                  FILE_RCBDRJ0.SRCC0MD.TPMNT = '3'                      06010021
               THEN                                                     06020021
                  FILE_RCBDRJ0.SRCC0MD.TPMNT = 'A';                     06030021
               DO I = 1 TO 4;                                           06040021
                 IF SUBSTR(FILE_RCBDRJ0.HF_SLOT(I).CUNOUSE,3,2)='99' &  06050021
                    FILE_RCBDRJ0.HF_SLOT(I).TPMNT = '3'                 06060021
                 THEN                                                   06070021
                    FILE_RCBDRJ0.HF_SLOT(I).TPMNT = 'A';                06080021
               END;                                                     06090021
              END;                                        /* RC01306 */ 06100021
             END;                                                       06110021
           END;                                                         06120021
       END;                                                             06130021
     END;                                                               06140021
 END R010_READ0;                                                        06150021
1/********************************************************************/ 06160021
 /*                                                                  */ 06170021
 /* MODULE NAME      : R011_READ1                                    */ 06180021
 /*                                                                  */ 06190021
 /* DESCRIPTION      : READ DELTA EXTRACT FILE                       */ 06200021
 /*                                                                  */ 06210021
 /********************************************************************/ 06220021
 R011_READ1: PROC;                                                      06230021
 READ FILE(RCBDRJ1) INTO (FILE_RCBDRJ1);                                06240021
 IF SK1.EOF = '0'                /* NOT YET EOF                      */ 06250021
   THEN                                                                 06260021
     DO;                                                                06270021
       SELECT(FILE_RCBDRJ1_H.KEY);                                      06280021
         WHEN (' ');                                                    06290021
         WHEN ('99999999999999999999')                                  06300021
           DO;                                                          06310021
             SK1.EOF = '1';                                             06320021
           END;                                                         06330021
         OTHERWISE                                                      06340021
           DO;                                                          06350021
             COUNT.RCBDRJ1 = COUNT.RCBDRJ1 + 1;                         06360021
             CALL RCB018M (SUBSTR(FILE_RCBDRJ1.TYPESER.SERNO,5,4),      06370021
                           COUNT.RCBDRJ1_HASH,                          06380021
                           PTR_INT_AREA);                               06390021
             SK1.KEY = '';                                              06400021
             SK1.PRODUCT_TYPE = FILE_RCBDRJ1.TYPESER.TYPE;              06410021
             SK1.ORIGIN       = SUBSTR(FILE_RCBDRJ1.TYPESER.SERNO,1,2); 06420021
             SK1.SEQUENCE_NUMBER =                                      06430021
                                SUBSTR(FILE_RCBDRJ1.TYPESER.SERNO,3,7); 06440021
             IF SUBSTR(FILE_RCBDRJ1.SRCC0MD.CUNOUSE,3,2) = '99' &       06450021
                FILE_RCBDRJ1.SRCC0MD.TPMNT = '3'                        06460021
             THEN                                                       06470021
                FILE_RCBDRJ1.SRCC0MD.TPMNT = 'A';                       06480021
             DO I = 1 TO 4;                                             06490021
               IF SUBSTR(FILE_RCBDRJ1.HF_SLOT(I).CUNOUSE,3,2) = '99' &  06500021
                  FILE_RCBDRJ1.HF_SLOT(I).TPMNT = '3'                   06510021
               THEN                                                     06520021
                  FILE_RCBDRJ1.HF_SLOT(I).TPMNT = 'A';                  06530021
             END;                                                       06540021
           END;                                                         06550021
       END;                                                             06560021
     END;                                                               06570021
 END R011_READ1;                                                        06580021
1/********************************************************************/ 06590021
 /*                                                                  */ 06600021
 /* MODULE NAME      : R012_FETCH_CURSOR_1_V722                      */ 06610021
 /*                                                                  */ 06620021
 /* DESCRIPTION      : FETCH CURSOR_1_V722                           */ 06630021
 /*                                                                  */ 06640021
 /********************************************************************/ 06650021
 R012_FETCH_CURSOR_1_V722: PROC;                                        06660021
0                                /* INIT STRUCTURES                  */ 06670021
 TB_RCBV722    = '';                                                    06680021
0                                /* FETCH CURSOR                     */ 06690021
 EXEC SQL                                                               06700021
   FETCH CURSOR_1_V722                                                  06710021
   INTO :TB_RCBV722.PRODUCT_TYPE           :WRK_INDNULL                 06720021
       ,:TB_RCBV722.ORIGIN                 :WRK_INDNULL                 06730021
       ,:TB_RCBV722.SEQUENCE_NUMBER        :WRK_INDNULL                 06740021
       ;                                                                06750021
0 SELECT (SQLCODE);                                                     06760021
   WHEN (0)                                                             06770021
     DO;                                                                06780021
       SK2.KEY             = '';                                        06790021
       SK2.PRODUCT_TYPE    = TB_RCBV722.PRODUCT_TYPE;                   06800021
       SK2.ORIGIN          = TB_RCBV722.ORIGIN;                         06810021
       SK2.SEQUENCE_NUMBER = TB_RCBV722.SEQUENCE_NUMBER;                06820021
     END;                                                               06830021
   WHEN (100)                                                           06840021
     DO;                                                                06850021
       SK2.EOF = '1';                                                   06860021
     END;                                                               06870021
   OTHERWISE                                                            06880021
     DO;                                                                06890021
       CALL R100_ERROR (ADDR (SQLCA),                                   06900021
                              'DB2',                                    06910021
                              '#004');                                  06920021
     END;                                                               06930021
 END;                                                                   06940021
                                                                        06950021
0 END R012_FETCH_CURSOR_1_V722;                                         06960021
1/********************************************************************/ 06970021
 /*                                                                  */ 06980021
 /* MODULE NAME      : R013_FETCH_CURSOR_1_V500                      */ 06990021
 /*                                                                  */ 07000021
 /* DESCRIPTION      : FETCH CURSOR_1_V500                           */ 07010021
 /*                                                                  */ 07020021
 /********************************************************************/ 07030021
 R013_FETCH_CURSOR_1_V500: PROC;                                        07040021
0                                /* FETCH CURSOR                     */ 07050021
 EXEC SQL                                                               07060021
   FETCH CURSOR_1_V500                                                  07070021
   INTO :TB_RCBV500  :TB_RCBV500_I.INDNULL                              07080021
   ;                                                                    07090021
 SQLCODE_FETCH = SQLCA.SQLCODE;  /* SAVE SQLCODE FROM FETCH         */  07100021
                                                                        07110021
0 SELECT (SQLCODE);                                                     07120021
   WHEN (0,100);                                                        07130021
   OTHERWISE                                                            07140021
     DO;                                                                07150021
       CALL R100_ERROR (ADDR (SQLCA),                                   07160021
                              'DB2',                                    07170021
                              '#005');                                  07180021
     END;                                                               07190021
 END;                                                                   07200021
                                                                        07210021
0 END R013_FETCH_CURSOR_1_V500;                                         07220021
1/********************************************************************/ 07230021
 /*                                                                  */ 07240021
 /* MODULE NAME      : R021_WRITE_RCBDRJ2                            */ 07250021
 /*                                                                  */ 07260021
 /* DESCRIPTION      : WRITE NEW F.I.                                */ 07270021
 /*                                                                  */ 07280021
 /********************************************************************/ 07290021
 R021_WRITE_RCBDRJ2: PROC;                                              07300021
                                                                        07310021
 IOAREA_OUT.QHSIHIS = WRK_HIST_SLOTS;                                   07320021
 IOAREA_OUT.QHSIFUT = WRK_FUT_SLOTS;                                    07330021
                                                                        07340021
 /* SOC RB01254: ADD NFI_AREA */                                        07350021
 NFI_AREA = IOAREA_OUT, BY NAME;                                        07360021
 WRITE FILE(RCBDRJ2) FROM (NFI_AREA);                                   07370021
 NFI_AREA.LAST_PROCESSED_DATE = '';                                     07380021
 COUNT.RCBDRJ2 = COUNT.RCBDRJ2 + 1;                                     07390021
 CALL RCB018M (SUBSTR(NFI_AREA.TYPESER.SERNO,5,4),                      07400021
               COUNT.RCBDRJ2_HASH,                                      07410021
               PTR_INT_AREA);                                           07420021
 /* EOC RB01254 */                                                      07430021
                                                                        07440021
 END R021_WRITE_RCBDRJ2;                                                07450021
1/********************************************************************/ 07460021
 /*                                                                  */ 07470021
 /* MODULE NAME      : R022_WRITE_RCBDRJX                            */ 07480021
 /*                                                                  */ 07490021
 /* DESCRIPTION      : WRITE RCMS FILE                               */ 07500021
 /*                                                                  */ 07510021
 /********************************************************************/ 07520021
 R022_WRITE_RCBDRJX: PROC;                                              07530021
                                                                        07540021
 WRITE FILE(RCBDRJX(WRK_SYSTEM_ID)) FROM (IOAREA_OUT);                  07550021
 COUNT.RCBDRJX(WRK_SYSTEM_ID)                                           07560021
               = COUNT.RCBDRJX(WRK_SYSTEM_ID)+ 1;                       07570021
                                 /* NOTE:                            */ 07580021
                                 /* HASH ACC. TO RCMS RULES(NOT CEDS)*/ 07590021
 CALL RCB018M (SUBSTR(IOAREA_OUT.TYPESER.SERNO,3,4),                    07600021
               COUNT.RCBDRJX_HASH(WRK_SYSTEM_ID),                       07610021
               PTR_INT_AREA);                                           07620021
                                                                        07630021
 END R022_WRITE_RCBDRJX;                                                07640021
1/********************************************************************/ 07650021
 /*                                                                  */ 07660021
 /* MODULE NAME      : R031_UPD                                      */ 07670021
 /*                                                                  */ 07680021
 /* DESCRIPTION      : PROCESS CHANGED RECORD                        */ 07690021
 /*                                                                  */ 07700021
 /********************************************************************/ 07710021
 R031_UPD: PROC;                                                        07720021
                                                                        07730021
 /* SOC RB01254: ADD LAST_PROCESSED_DATE */                             07740021
 NFI_AREA.LAST_PROCESSED_DATE = WRK_RUN_DATE;                           07750021
 /* EOC RB01254 */                                                      07760021
                                                                        07770021
 IOAREA_OUT = FILE_RCBDRJ1;      /* INPUT TO OUTPUT                  */ 07780021
                                                                        07790021
                                 /************************************/ 07800021
                                 /* SAVE COUNTERS BECAUSE COUNTERS   */ 07810021
                                 /* SENT TO RCMS ARE DIFFERENT FROM  */ 07820021
                                 /* COUNTERS STORED IN FULL IMAGE    */ 07830021
                                 /************************************/ 07840021
 WRK_HIST_SLOTS = FILE_RCBDRJ1.QHSIHIS;                                 07850021
 WRK_FUT_SLOTS  = FILE_RCBDRJ1.QHSIFUT;                                 07860021
                                                                        07870021
 IF OU_FOUND                                                            07880021
   THEN                                                                 07890021
     DO;                                                                07900021
                                 /* PROCESS SYSTEM ID'S              */ 07910021
       DO WRK_SYSTEM_ID = 1 TO 20;                                      07920021
         IF P10_ARRAY(WRK_SYSTEM_ID).EXTRACT_TYPE ¬= ' '                07930021
           THEN                                                         07940021
             DO;                                                        07950021
               SELECT (P11_ARRAY.UPDATE_TYPE                            07960021
                                         (OU_NR,WRK_SYSTEM_ID));        07970021
                 WHEN ('E')                                             07980021
                   DO;                                                  07990021
                                            /* PTM1168 NO RE-DELETE */  08000021
                     IF FILE_RCBDRJ0.CDBSCHG ¬= 'D'                     08010021
                     THEN DO;                                           08020021
                       IOAREA_OUT.CDBSCHG = 'D';                        08030021
                       CALL R022_WRITE_RCBDRJX;                         08040021
                     END;                                               08050021
                   END;                                                 08060021
                 WHEN ('F')                                             08070021
                   DO;                                                  08080021
                     IOAREA_OUT.CDBSCHG = 'M';                          08090021
                     IF SWITCH_USER_EXIT = TRUE                         08100021
                       THEN                                             08110021
                         DO;                                            08120021
                                 /* CALL USER EXIT                   */ 08130021
                           USER_SWITCH_EXIT = SWITCH_USER_EXIT;         08140021
                           CALL RCBDR6U (ADDR(USER_SWITCH_EXIT),        08150021
                                         ADDR(IOAREA_OUT),              08160021
                                         ADDR(USER_EXIT.UDTEUEX),       08170021
                                         ADDR(USER_EXIT.UDTECUF),       08180021
                                         PTR_INT_AREA);                 08190021
                           SWITCH_USER_EXIT = USER_SWITCH_EXIT;         08200021
                           IF SWITCH_USER_EXIT = TRUE                   08210021
                             THEN                                       08220021
                               DO;                                      08230021
                                 IOAREA_OUT.UDTEUEX = USER_EXIT.UDTEUEX;08240021
                                 IOAREA_OUT.UDTECUF = USER_EXIT.UDTECUF;08250021
                               END;                                     08260021
                         END;                                           08270021
                     IOAREA_OUT.FDTEUEX = '1';                          08280021
                     IOAREA_OUT.FDTECUF = '1';                          08290021
                     CALL R022_WRITE_RCBDRJX;                           08300021
                   END;                                                 08310021
                 WHEN ('D')                                             08320021
                   DO;                                                  08330021
                                            /* PTM1168  LEAVE 'D' */    08340021
                     IF FILE_RCBDRJ0.CDBSCHG ¬= 'D'                     08350021
                     THEN                                               08360021
                       IOAREA_OUT.CDBSCHG = '';                         08370021
                     IOAREA_OUT.FDTEUEX = '0';                          08380021
                     IOAREA_OUT.FDTECUF = '0';                          08390021
                     IF SWITCH_USER_EXIT = TRUE                         08400021
                       THEN                                             08410021
                         DO;                                            08420021
                                 /* CALL USER EXIT                   */ 08430021
                           USER_SWITCH_EXIT = SWITCH_USER_EXIT;         08440021
                           CALL RCBDR6U (ADDR(USER_SWITCH_EXIT),        08450021
                                         ADDR(IOAREA_OUT),              08460021
                                         ADDR(USER_EXIT.UDTEUEX),       08470021
                                         ADDR(USER_EXIT.UDTECUF),       08480021
                                         PTR_INT_AREA);                 08490021
                           SWITCH_USER_EXIT = USER_SWITCH_EXIT;         08500021
                                                   /* SOC PTM 909    */ 08510021
                           IF SWITCH_USER_EXIT = TRUE                   08520021
                             THEN                                       08530021
                               DO;                                      08540021
                                 IOAREA_OUT.UDTEUEX = USER_EXIT.UDTEUEX;08550021
                                 IOAREA_OUT.UDTECUF = USER_EXIT.UDTECUF;08560021
                               END;                /* EOC PTM 909    */ 08570021
                           IF IOAREA_OUT.UDTEUEX ¬=                     08580021
                                  FILE_RCBDRJ0.UDTEUEX    /* PTM 909 */ 08590021
                             THEN                                       08600021
                               DO;                                      08610021
                                 IOAREA_OUT.CDBSCHG = 'M';              08620021
                                 IOAREA_OUT.FDTEUEX = '1';              08630021
                               END;                                     08640021
                           IF IOAREA_OUT.UDTECUF ¬=                     08650021
                                  FILE_RCBDRJ0.UDTECUF    /* PTM 909 */ 08660021
                             THEN                                       08670021
                               DO;                                      08680021
                                 IOAREA_OUT.CDBSCHG = 'M';              08690021
                                 IOAREA_OUT.FDTECUF = '1';              08700021
                               END;                                     08710021
                         END;                                           08720021
                     IF FILE_RCBDRJ1.MOD ¬= FILE_RCBDRJ0.MOD            08730021
                       THEN                                             08740021
                         DO;                                            08750021
                           IOAREA_OUT.CDBSCHG = 'M';                    08760021
                         END;                                           08770021
                     IF FILE_RCBDRJ1.QCUOHVP ¬= FILE_RCBDRJ0.QCUOHVP    08780021
                       THEN                                             08790021
                         DO;                                            08800021
                           IOAREA_OUT.CDBSCHG = 'M';                    08810021
                         END;                                           08820021
                     IF FILE_RCBDRJ1.BUILT_TO_MOD ¬=                    08830021
                              FILE_RCBDRJ0.BUILT_TO_MOD                 08840021
                       THEN                                             08850021
                         DO;                                            08860021
                           IOAREA_OUT.CDBSCHG = 'M';                    08870021
                         END;                                           08880021
                     IF FILE_RCBDRJ1.CPUTYPE ¬=                         08890021
                              FILE_RCBDRJ0.CPUTYPE                      08900021
                       THEN                                             08910021
                         DO;                                            08920021
                           IOAREA_OUT.CDBSCHG = 'M';                    08930021
                         END;                                           08940021
                     IF FILE_RCBDRJ1.DPSYSNO ¬=   FILE_RCBDRJ0.DPSYSNO  08950021
                       THEN                                             08960021
                         DO;                                            08970021
                           IOAREA_OUT.CDBSCHG = 'M';                    08980021
                         END;                                           08990021
                     IF FILE_RCBDRJ1.MKINSDAT ¬= FILE_RCBDRJ0.MKINSDAT  09000021
                       THEN                                             09010021
                         DO;                                            09020021
                           IOAREA_OUT.CDBSCHG = 'M';                    09030021
                         END;                                           09040021
                     IF FILE_RCBDRJ1.MKSCREMD ¬= FILE_RCBDRJ0.MKSCREMD  09050021
                       THEN                                             09060021
                         DO;                                            09070021
                           IOAREA_OUT.CDBSCHG = 'M';                    09080021
                         END;                                           09090021
                     IF FILE_RCBDRJ1.WED ¬= FILE_RCBDRJ0.WED            09100021
                       THEN                                             09110021
                         DO;                                            09120021
                           IOAREA_OUT.CDBSCHG = 'M';                    09130021
                         END;                                           09140021
                     IF STRING(FILE_RCBDRJ1.MKBINA) ¬=                  09150021
                                           STRING(FILE_RCBDRJ0.MKBINA)  09160021
                       THEN                                             09170021
                         DO;                                            09180021
                           IOAREA_OUT.CDBSCHG = 'M';                    09190021
                         END;                                           09200021
                     IF FILE_RCBDRJ1.ORDREF ¬= FILE_RCBDRJ0.ORDREF      09210021
                       THEN                                             09220021
                         DO;                                            09230021
                           IOAREA_OUT.CDBSCHG = 'M';                    09240021
                         END;                                           09250021
                     IF FILE_RCBDRJ1.DEALER_NUMBER ¬=                   09260021
                                   FILE_RCBDRJ0.DEALER_NUMBER           09270021
                       THEN                                             09280021
                         DO;                                            09290021
                           IOAREA_OUT.CDBSCHG = 'M';                    09300021
                         END;                                           09310021
                     IF FILE_RCBDRJ1.DPIS ¬= FILE_RCBDRJ0.DPIS          09320021
                       THEN                                             09330021
                         DO;                                            09340021
                           IOAREA_OUT.CDBSCHG = 'M';                    09350021
                         END;                                           09360021
                     IF FILE_RCBDRJ1.TPAGR ¬= FILE_RCBDRJ0.TPAGR        09370021
                       THEN                                             09380021
                         DO;                                            09390021
                           IOAREA_OUT.CDBSCHG = 'M';                    09400021
                         END;                                           09410021
                     IF FILE_RCBDRJ1.ICUSANO ¬= FILE_RCBDRJ0.ICUSANO    09420021
                       THEN                                             09430021
                         DO;                                            09440021
                           IOAREA_OUT.CDBSCHG = 'M';                    09450021
                         END;                                           09460021
                     IF FILE_RCBDRJ1_SRCC0MD ¬= FILE_RCBDRJ0_SRCC0MD    09470021
                       THEN                                             09480021
                         DO;                                            09490021
                           IOAREA_OUT.CDBSCHG = 'M';                    09500021
                         END;                                           09510021
                                 /************************************/ 09520021
                                 /* CHECK HISTORY/FUTURE SLOTS       */ 09530021
                                 /************************************/ 09540021
                     SELECT;                                            09550021
                       WHEN (FILE_RCBDRJ1_HF_SLOT1_2 ¬=                 09560021
                             FILE_RCBDRJ0_HF_SLOT1_2                    09570021
                           & FILE_RCBDRJ1_HF_SLOT3_4 ¬=                 09580021
                             FILE_RCBDRJ0_HF_SLOT3_4)                   09590021
                         DO;                                            09600021
                           SELECT;               /* PTM 725 START    */ 09610021
                             WHEN (FILE_RCBDRJ1.QHSIHIS = '0'           09620021
                                 & FILE_RCBDRJ1.QHSIFUT = '0')          09630021
                                IOAREA_OUT.CDBSHFS = 'A';               09640021
                             WHEN (FILE_RCBDRJ1.QHSIHIS = '0')          09650021
                                IOAREA_OUT.CDBSHFS = 'H';               09660021
                             WHEN (FILE_RCBDRJ1.QHSIFUT = '0')          09670021
                                IOAREA_OUT.CDBSHFS = 'F';               09680021
                             OTHERWISE;                                 09690021
                             END;                /* PTM 725 END      */ 09700021
                           IOAREA_OUT.CDBSCHG = 'M';                    09710021
                         END;                                           09720021
                       WHEN (FILE_RCBDRJ1_HF_SLOT1_2 ¬=                 09730021
                             FILE_RCBDRJ0_HF_SLOT1_2                    09740021
                           & FILE_RCBDRJ1_HF_SLOT3_4 =                  09750021
                             FILE_RCBDRJ0_HF_SLOT3_4)                   09760021
                         DO;                                            09770021
                           IOAREA_OUT.QHSIFUT = '0';                    09780021
                           IF FILE_RCBDRJ1.QHSIHIS = '0'                09790021
                             THEN                                       09800021
                               DO;                                      09810021
                                 IOAREA_OUT.CDBSHFS = 'H';              09820021
                               END;                                     09830021
                           IOAREA_OUT.CDBSCHG = 'M';                    09840021
                         END;                                           09850021
                       WHEN (FILE_RCBDRJ1_HF_SLOT1_2 =                  09860021
                             FILE_RCBDRJ0_HF_SLOT1_2                    09870021
                           & FILE_RCBDRJ1_HF_SLOT3_4 ¬=                 09880021
                             FILE_RCBDRJ0_HF_SLOT3_4)                   09890021
                         DO;                                            09900021
                           IOAREA_OUT.QHSIHIS = '0';                    09910021
                           IF FILE_RCBDRJ1.QHSIFUT = '0'                09920021
                             THEN                                       09930021
                               DO;                                      09940021
                                 IOAREA_OUT.CDBSHFS = 'F';              09950021
                               END;                                     09960021
                           IOAREA_OUT.CDBSCHG = 'M';                    09970021
                         END;                                           09980021
                       OTHERWISE                                        09990021
                         DO;                                            10000021
                           IOAREA_OUT.QHSIHIS = '0';                    10010021
                           IOAREA_OUT.QHSIFUT = '0';                    10020021
                         END;                                           10030021
                     END;                                               10040021
                                   /* CHANGES FOUND OR FLAGS SET     */ 10050021
                     IF IOAREA_OUT.CDBSCHG = 'M'                        10060021
                       THEN                                             10070021
                         DO;                                            10080021
                           CALL R022_WRITE_RCBDRJX;                     10090021
                         END;                                           10100021
                   END;                                                 10110021
                 OTHERWISE;                                             10120021
                 END;                                                   10130021
           END;                                                         10140021
       END;                                                             10150021
     END;                                                               10160021
                                                                        10170021
 END R031_UPD;                                                          10180021
1/********************************************************************/ 10190021
 /*                                                                  */ 10200021
 /* MODULE NAME      : R032_DEL                                      */ 10210021
 /*                                                                  */ 10220021
 /* DESCRIPTION      : PROCESS OBSOLETE RECORD                       */ 10230021
 /*                                                                  */ 10240021
 /********************************************************************/ 10250021
 R032_DEL: PROC;                                                        10260021
                                                                        10270021
                                       /* SOC RB01254                */ 10280021
 IOAREA_OUT = FILE_RCBDRJ0, BY NAME;   /* INPUT TO OUTPUT            */ 10290021
                                       /* EOC RB01254                */ 10300021
 IF OU_FOUND                                                            10310021
   THEN                                                                 10320021
     DO;                                                                10330021
                                 /* PROCESS SYSTEM ID'S              */ 10340021
       DO WRK_SYSTEM_ID = 1 TO 20;                                      10350021
         IF P10_ARRAY(WRK_SYSTEM_ID).EXTRACT_TYPE ¬= ' '                10360021
          & (P11_ARRAY.UPDATE_TYPE(OU_NR,WRK_SYSTEM_ID) = 'E'           10370021
           | P11_ARRAY.UPDATE_TYPE(OU_NR,WRK_SYSTEM_ID) = 'D')          10380021
         THEN                                                           10390021
           DO;                                                          10400021
             IOAREA_OUT.CDBSCHG = 'D';                                  10410021
             CALL R022_WRITE_RCBDRJX;                                   10420021
           END;                                                         10430021
       END;                                                             10440021
     END;                                                               10450021
 END R032_DEL;                                                          10460021
1/********************************************************************/ 10470021
 /*                                                                  */ 10480021
 /* MODULE NAME      : R033_NO_CHANGE                                */ 10490021
 /*                                                                  */ 10500021
 /* DESCRIPTION      : PROCESS UNCHANGED RECORD                      */ 10510021
 /*                                                                  */ 10520021
 /********************************************************************/ 10530021
 R033_NO_CHANGE: PROC;                                                  10540021
                                                                        10550021
                                                /* SOC RB01254 */       10560021
 /* WHEN OLD FULL IMAGE RECORD DOES NOT CHANGE:                */       10570021
 /* COPY OLD LAST_PROCESSED_DATE TO NEW FULL IMAGE RECORD      */       10580021
 NFI_AREA.LAST_PROCESSED_DATE = FILE_RCBDRJ0.LAST_PROCESSED_DATE;       10590021
                                               /* ADD BY NAME  */       10600021
 IOAREA_OUT = FILE_RCBDRJ0, BY NAME;        /* INPUT TO OUTPUT */       10610021
                                                /* EOC RB01254 */       10620021
 WRK_HIST_SLOTS   = FILE_RCBDRJ0.QHSIHIS;               /* PTM 926   */ 10630021
 WRK_FUT_SLOTS    = FILE_RCBDRJ0.QHSIFUT;               /* PTM 926   */ 10640021
                                                                        10650021
 IF OU_FOUND                                                            10660021
   THEN                                                                 10670021
     DO;                                                                10680021
       CALL R039_CHECK_HIST_DATE;                                       10690021
                                 /* PROCESS SYSTEM ID'S              */ 10700021
       DO WRK_SYSTEM_ID = 1 TO 20;                                      10710021
         IF P10_ARRAY(WRK_SYSTEM_ID).EXTRACT_TYPE ¬= ' '                10720021
           THEN                                                         10730021
             DO;                                                        10740021
               SELECT(P11_ARRAY.UPDATE_TYPE(OU_NR,WRK_SYSTEM_ID));      10750021
                 WHEN('F')                                              10760021
                   DO;                                                  10770021
                     IOAREA_OUT.CDBSCHG = 'M';                          10780021
                     IOAREA_OUT.FDTEUEX = '1';                          10790021
                     IOAREA_OUT.FDTECUF = '1';                          10800021
                     CALL R022_WRITE_RCBDRJX;                           10810021
                   END;                                                 10820021
                 WHEN('E')                                              10830021
                   DO;                                                  10840021
                                            /* PTM1168 NO RE-DELETE */  10850021
                     IF FILE_RCBDRJ0.CDBSCHG ¬= 'D'                     10860021
                     THEN DO;                                           10870021
                       IOAREA_OUT.CDBSCHG = 'D';                        10880021
                       CALL R022_WRITE_RCBDRJX;                         10890021
                     END;                                               10900021
                   END;                                                 10910021
                 WHEN('D')                                              10920021
                   DO;                                                  10930021
                                 /* IF HISTORY SLOTS CHANGED         */ 10940021
                     IF IOAREA_OUT.QHSIHIS ¬= FILE_RCBDRJ0.QHSIHIS      10950021
                       THEN                                             10960021
                         DO;                                            10970021
                           IOAREA_OUT.CDBSCHG = 'M';                    10980021
                           CALL R022_WRITE_RCBDRJX;                     10990021
                         END;                                           11000021
                   END;                                                 11010021
                 OTHERWISE;                                             11020021
               END;                                                     11030021
             END;                                                       11040021
       END;                                                             11050021
     END;                                                               11060021
                                                                        11070021
 END R033_NO_CHANGE;                                                    11080021
1/********************************************************************/ 11090021
 /*                                                                  */ 11100021
 /* MODULE NAME      : R034_INSERT                                   */ 11110021
 /*                                                                  */ 11120021
 /* DESCRIPTION      : PROCESS NEW RECORD                            */ 11130021
 /*                                                                  */ 11140021
 /********************************************************************/ 11150021
 R034_INSERT: PROC;                                                     11160021
                                                                        11170021
 /* SOC RB01254: ADD LAST_PROCESSED_DATE */                             11180021
 NFI_AREA.LAST_PROCESSED_DATE = WRK_RUN_DATE;                           11190021
 /* EOC RB01254 */                                                      11200021
                                                                        11210021
 IOAREA_OUT = FILE_RCBDRJ1;      /* INPUT TO OUTPUT                  */ 11220021
                                 /* PTM 0401 START                   */ 11230021
 WRK_HIST_SLOTS = FILE_RCBDRJ1.QHSIHIS;                                 11240021
 WRK_FUT_SLOTS  = FILE_RCBDRJ1.QHSIFUT;                                 11250021
                                 /* PTM 0401 END                     */ 11260021
                                                                        11270021
 IF OU_FOUND                                                            11280021
   THEN                                                                 11290021
     DO;                                                                11300021
                                 /* PROCESS SYSTEM ID'S              */ 11310021
       DO WRK_SYSTEM_ID = 1 TO 20;                                      11320021
         IF P10_ARRAY(WRK_SYSTEM_ID).EXTRACT_TYPE ¬= ' '                11330021
          & (P11_ARRAY.UPDATE_TYPE(OU_NR,WRK_SYSTEM_ID) = 'F'           11340021
           | P11_ARRAY.UPDATE_TYPE(OU_NR,WRK_SYSTEM_ID) = 'D')          11350021
         THEN                                                           11360021
           DO;                                                          11370021
             IOAREA_OUT.CDBSCHG = 'M';                                  11380021
             IF SWITCH_USER_EXIT = TRUE                                 11390021
               THEN                                                     11400021
                 DO;                                                    11410021
                                 /* CALL USER EXIT                   */ 11420021
                   USER_SWITCH_EXIT = SWITCH_USER_EXIT;                 11430021
                   CALL RCBDR6U (ADDR(USER_SWITCH_EXIT),                11440021
                                 ADDR(IOAREA_OUT),                      11450021
                                 ADDR(USER_EXIT.UDTEUEX),               11460021
                                 ADDR(USER_EXIT.UDTECUF),               11470021
                                 PTR_INT_AREA);                         11480021
                   SWITCH_USER_EXIT = USER_SWITCH_EXIT;                 11490021
                   IF SWITCH_USER_EXIT = TRUE                           11500021
                     THEN                                               11510021
                       DO;                                              11520021
                         IOAREA_OUT.UDTEUEX = USER_EXIT.UDTEUEX;        11530021
                         IOAREA_OUT.UDTECUF = USER_EXIT.UDTECUF;        11540021
                       END;                                             11550021
                 END;                                                   11560021
             IOAREA_OUT.FDTEUEX = '1';                                  11570021
             IOAREA_OUT.FDTECUF = '1';                                  11580021
             CALL R022_WRITE_RCBDRJX;                                   11590021
           END;                                                         11600021
       END;                                                             11610021
     END;                                                               11620021
                                                                        11630021
 END R034_INSERT;                                                       11640021
1/********************************************************************/ 11650021
 /*                                                                  */ 11660021
 /* MODULE NAME      : R039_CHECK_HIST_DATE                          */ 11670021
 /*                                                                  */ 11680021
 /* DESCRIPTION      : CHECK ENDDATE OF HISTORY SLOTS; IF TOO OLD    */ 11690021
 /*                    THEN BLANK SLOT AND SHIFT REMAINING SLOTS     */ 11700021
 /*                                                                  */ 11710021
 /********************************************************************/ 11720021
 R039_CHECK_HIST_DATE: PROC;                                            11730021
                                 /* PROCESS HISTORY SLOTS            */ 11740021
 WRK_END_OF_SLOTS = FALSE;                                              11750021
 WRK_HIST_SLOTS   = FILE_RCBDRJ0.QHSIHIS;                               11760021
 WRK_FUT_SLOTS    = FILE_RCBDRJ0.QHSIFUT;                               11770021
 DO WHILE (WRK_END_OF_SLOTS = FALSE & WRK_HIST_SLOTS > 0);              11780021
   WRK_HF_SLOT1_2 = IOAREA_OUT_HF_SLOT1_2;                              11790021
   IF WRK_ENDDATE < WRK_HIST_START_DATE                                 11800021
     THEN                                                               11810021
       DO;                       /* SHIFT REMAINING SLOTS TO LEFT    */ 11820021
         SUBSTR(IOAREA_OUT_HF_SLOT1_2,1,236) =                          11830021
           SUBSTR(WRK_HF_SLOT1_2,237,236);                              11840021
         IOAREA_OUT.HF_SLOT(2) = '';                                    11850021
         WRK_HIST_SLOTS = WRK_HIST_SLOTS - 1;                           11860021
         IOAREA_OUT.CDBSCHG = 'M';                                      11870021
         IOAREA_OUT.QHSIHIS = WRK_HIST_SLOTS;                           11880021
         IOAREA_OUT.QHSIFUT = '0';                                      11890021
         IF IOAREA_OUT.QHSIHIS = '0'                                    11900021
           THEN                                                         11910021
             DO;                                                        11920021
               IOAREA_OUT.CDBSHFS = 'H';                                11930021
             END;                                                       11940021
       END;                                                             11950021
     ELSE                                                               11960021
       DO;                                                              11970021
         WRK_END_OF_SLOTS = TRUE;                                       11980021
       END;                                                             11990021
 END;                                                                   12000021
                                                                        12010021
 END R039_CHECK_HIST_DATE;                                              12020021
1/********************************************************************/ 12030021
 /*                                                                  */ 12040021
 /* MODULE NAME      : R059_PROCESS_SK                               */ 12050021
 /*                                                                  */ 12060021
 /* DESCRIPTION      : DETERMINE SMALLEST SORT KEY AND PROCESS KEY   */ 12070021
 /*                                                                  */ 12080021
 /********************************************************************/ 12090021
 R059_PROCESS_SK: PROC;                                                 12100021
                                 /* DETERMINE SMALLEST SORT KEY      */ 12110021
 IF STRING(SK0) < STRING(SK1)                                           12120021
   THEN                                                                 12130021
     DO;                                                                12140021
       IF STRING(SK0) < STRING(SK2)                                     12150021
         THEN                                                           12160021
           DO;                                                          12170021
             SK_NEW = SK0;       /* SITUATION 3                      */ 12180021
           END;                                                         12190021
         ELSE                                                           12200021
           DO;                                                          12210021
             SK_NEW = SK2;       /* SITUATION 5                      */ 12220021
           END;                                                         12230021
     END;                                                               12240021
   ELSE                          /* I.E. SK1 <= SK0                  */ 12250021
     DO;                                                                12260021
       IF STRING(SK1) < STRING(SK2)                                     12270021
         THEN                                                           12280021
           DO;                                                          12290021
             SK_NEW = SK1;       /* SITUATION 6                      */ 12300021
           END;                                                         12310021
         ELSE                    /* I.E. SK1 <= SK0 & SK2 <= SK1     */ 12320021
           DO;                                                          12330021
             SK_NEW = SK2;       /* SITUATION 1/2/4                  */ 12340021
           END;                                                         12350021
     END;                                                               12360021
                                                                        12370021
 PARM_INT_AREA.SEQUENCE_KEY = STRING(SK_NEW);            /* RC01141  */ 12380021
                                                                        12390021
 END R059_PROCESS_SK;                                                   12400021
1/********************************************************************/ 12410021
 /*                                                                  */ 12420021
 /* MODULE NAME      : R080_INIT_PROCESSING                          */ 12430021
 /*                                                                  */ 12440021
 /* DESCRIPTION      : OPEN AND INTITIAL FETCH CURSORS               */ 12450021
 /*                                                                  */ 12460021
 /********************************************************************/ 12470021
 R080_INIT_PROCESSING: PROC;                                            12480021
                                                                        12490021
                                 /************************************/ 12500021
                                 /* INIT SORT KEYS AND COUNT         */ 12510021
                                 /************************************/ 12520021
 SK_NEW             = '';                                               12530021
 SK_NEW.EOF         = '0';                                              12540021
 SK0                = '';                                               12550021
 SK0.EOF            = '0';                                              12560021
 SK1                = '';                                               12570021
 SK1.EOF            = '0';                                              12580021
 SK2                = '';                                               12590021
 SK2.EOF            = '0';                                              12600021
 COUNT              = 0;                                                12610021
                                 /************************************/ 12620021
0                                /* INIT CURSOR CURSOR_1_V722        */ 12630021
                                 /************************************/ 12640021
 EXEC SQL                                                               12650021
   OPEN CURSOR_1_V722;                                                  12660021
                                                                        12670021
 SELECT (SQLCODE);                                                      12680021
   WHEN (0);                                                            12690021
   OTHERWISE                                                            12700021
     DO;                                                                12710021
       CALL R100_ERROR (ADDR (SQLCA),                                   12720021
                              'DB2',                                    12730021
                              '#006');                                  12740021
     END;                                                               12750021
 END;                                                                   12760021
                                 /************************************/ 12770021
                                 /* FILL FILE ARRAY                  */ 12780021
                                 /************************************/ 12790021
 RCBDRJX(01) = RCBDRJA;                                                 12800021
 RCBDRJX(02) = RCBDRJB;                                                 12810021
 RCBDRJX(03) = RCBDRJC;                                                 12820021
 RCBDRJX(04) = RCBDRJD;                                                 12830021
 RCBDRJX(05) = RCBDRJE;                                                 12840021
 RCBDRJX(06) = RCBDRJF;                                                 12850021
 RCBDRJX(07) = RCBDRJG;                                                 12860021
 RCBDRJX(08) = RCBDRJH;                                                 12870021
 RCBDRJX(09) = RCBDRJI;                                                 12880021
 RCBDRJX(10) = RCBDRJJ;                                                 12890021
 RCBDRJX(11) = RCBDRJK;                                                 12900021
 RCBDRJX(12) = RCBDRJL;                                                 12910021
 RCBDRJX(13) = RCBDRJN;                                                 12920021
 RCBDRJX(14) = RCBDRJO;                                                 12930021
 RCBDRJX(15) = RCBDRJP;                                                 12940021
 RCBDRJX(16) = RCBDRJQ;                                                 12950021
 RCBDRJX(17) = RCBDRJR;                                                 12960021
 RCBDRJX(18) = RCBDRJS;                                                 12970021
 RCBDRJX(19) = RCBDRJT;                                                 12980021
 RCBDRJX(20) = RCBDRJU;                                                 12990021
                                 /************************************/ 13000021
                                 /* FILL DEFAULT HEADER FOR 20 FILES */ 13010021
                                 /************************************/ 13020021
 RCBDR0S0.KIND_OF_RECORD = 'H';                                         13030021
 RCBDR0S0.EXTRACT_DATE   = WRK_RUN_DATE;                                13040021
 RCBDR0S0.RUN_SEQ_NUMBER = WRK_RCB014.RUN_SEQ_NO;                       13050021
 RCBDR0S0.FILE_NAME      = 'RCCINV';                                    13060021
 RCBDR0S0.FILE_DESCR     = 'INVENTORY';                                 13070021
 RCBDR0S0.CTRYNO         = WRK_CTRYNO;                                  13080021
                                 /************************************/ 13090021
                                 /* GET EXTRACT CODES FOR SELECTED   */ 13100021
                                 /* SYSTEM ID'S AND INIT             */ 13110021
                                 /* CORRESPONDING FILES              */ 13120021
                                 /************************************/ 13130021
 P10_ARRAY                = '';  /* INIT SYSTEM ID TABLE             */ 13140021
 TB_RCBV500               = '';  /* INIT TABLESTRUCTURE              */ 13150021
 TB_RCBV500_I             = '';                                         13160021
 TB_RCB010.NUMBER         = 'RCB010';                                   13170021
 TB_RCBV500.PARAMETER_KEY = (20)'_';                                    13180021
 TB_RCB010.CTRYNO         = WRK_CTRYNO;                                 13190021
 TB_RCB010.PGR_TYPE       = WRK_PGR_TYPE;                               13200021
 IOAREA_OUT               = '';  /* INIT IO AREA                     */ 13210021
                                                                        13220021
 CALL R081_OPEN_CURSOR_1_V500 ;  /* OPEN CURSOR 2 (AFTER INIT KEYS)  */ 13230021
 CALL R013_FETCH_CURSOR_1_V500;  /* FETCH FIRST RCB010 PARAMETER     */ 13240021
 DO WHILE (SQLCODE_FETCH = 0);   /* WHILE ROW FOUND                  */ 13250021
   IF TB_RCB010.SYSTEM_ID >= 1   /* SYSTEM ID WITHIN LIMITS          */ 13260021
    & TB_RCB010.SYSTEM_ID <= 20                                         13270021
   THEN                                                                 13280021
     DO;                         /* OPEN FILE AND CREATE HEADER      */ 13290021
       OPEN FILE (RCBDRJX(TB_RCB010.SYSTEM_ID));                        13300021
       WRK_SYSTEM_ID_PIC4       = TB_RCB010.SYSTEM_ID;                  13310021
       RCBDR0S0.KIND_OF_EXTRACT = TB_RCB010.EXTRACT_TYPE;               13320021
       P10_ARRAY(TB_RCB010.SYSTEM_ID).EXTRACT_TYPE                      13330021
                                = TB_RCB010.EXTRACT_TYPE;               13340021
       CALL RCBDR0M (PTR_INT_AREA,                                      13350021
                     ADDR(RCBDR0S0),                                    13360021
                     ADDR(IOAREA_OUT_H));                               13370021
       WRITE FILE (RCBDRJX(TB_RCB010.SYSTEM_ID)) FROM (IOAREA_OUT);     13380021
     END;                                                               13390021
   ELSE                                                                 13400021
     DO;                         /* SYSTEM ID INVALID                */ 13410021
       PARM_INT_AREA.MESSAGE_TYPE           = 'IS';                     13420021
       PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER = '0142';                  13430021
       PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES = '';                       13440021
       PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6 = 'PN';                    13450021
       PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6 =                         13460021
                             TB_RCBV500.PARAMETER_NUMBER;               13470021
       PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_7 = 'PK';                    13480021
       PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_7 =                         13490021
                             TB_RCBV500.PARAMETER_KEY;                  13500021
       CALL RCB0M1M (PTR_INT_AREA);                                     13510021
       CALL R100_ERROR (NULL(),                                         13520021
                        'OTHER',                                        13530021
                        '#007');                                        13540021
     END;                                                               13550021
   CALL R013_FETCH_CURSOR_1_V500;/* FETCH NEXT RCB010 PARAMETER      */ 13560021
   END;                                                                 13570021
 CALL R088_CLOSE_CURSOR_1_V500;  /* CLOSE CURSOR                     */ 13580021
                                                                        13590021
                                 /* FILL OU STRUCTURE TABLE          */ 13600021
 PTR_RCBDR1S = ADDR(RCBDR1S0);                                          13610021
 RCBDR1S0.CTRYNO        = WRK_CTRYNO;                                   13620021
 RCBDR1S0.PGR_TYPE      = WRK_PGR_TYPE;                                 13630021
 RCBDR1S0.EXTRACT_DATE  = WRK_RUN_DATE;                                 13640021
                                                                        13650021
 CALL RCBDR1M(PTR_INT_AREA,                                             13660021
              PTR_RCBDR1S,                                              13670021
              ADDR(P11_ARRAY));                                         13680021
 DO WRK_SYSTEM_ID = 1 TO 20;                                            13690021
 END;                                                                   13700021
                                 /* GENERATE OU PARAMETER REPORT     */ 13710021
                                 /* IF ASKED FOR                     */ 13720021
 IF WRK_OU_PARM_REP = 'Y'                                               13730021
   THEN                                                                 13740021
     DO;                                                                13750021
       PTR_RCBDR2S               = ADDR(RCBDR2S0);                      13760021
       RCBDR2S0.CTRYNO           = WRK_CTRYNO;                          13770021
       RCBDR2S0.PGR_TYPE         = WRK_PGR_TYPE;                        13780021
       RCBDR2S0.EXTRACT_DATE     = RCBDR0S0.EXTRACT_DATE;               13790021
       CALL RCBDR2M(PTR_INT_AREA,                                       13800021
                    PTR_RCBDR2S,                                        13810021
                    ADDR(P11_ARRAY));                                   13820021
     END;                                                               13830021
                                                                        13840021
                                 /************************************/ 13850021
                                 /* DETERMINE TIMESTAMP              */ 13860021
                                 /* FOR HEADER + HASH                */ 13870021
                                 /* AND PARAMETER LENGTH             */ 13880021
                                 /************************************/ 13890021
 WRK_TIME_STAMP  = PARM_INT_AREA.SYSTEM_DATE || '.' || TIME();          13900021
 WRK_LENGTH_PARM = CSTG (TB_RCB024.TIME_STAMP) +                        13910021
                   CSTG (TB_RCB024.HASH_TOTAL);                         13920021
                                 /************************************/ 13930021
                                 /* OPEN OTHER FILES                 */ 13940021
                                 /************************************/ 13950021
 OPEN FILE (RCBDRJ0);                                                   13960021
 OPEN FILE (RCBDRJ1);                                                   13970021
 OPEN FILE (RCBDRJ2);                                                   13980021
                                 /************************************/ 13990021
                                 /* READ HEADER RECORD OLD FULL IMAGE*/ 14000021
                                 /************************************/ 14010021
 CALL R010_READ0;                                                       14020021
 IF SK0.EOF = '1'                /* EMPTY FILE                       */ 14030021
   THEN                                                                 14040021
     DO;                                                                14050021
       PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                            14060021
       PARM_INT_AREA.MESSAGE_NUMBER  = '0013';                          14070021
       PARM_INT_AREA.MSG_VAR_CODES   = '';                              14080021
       PARM_INT_AREA.MSG_VAR_CODE_6  = 'FL';                            14090021
       PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBDRJ0';                       14100021
       CALL RCB0M1M (PTR_INT_AREA);                                     14110021
       CALL R100_ERROR (NULL(), 'OTHER', '#008');                       14120021
     END;                                                               14130021
                                 /************************************/ 14140021
                                 /* CHECK HEADER RECORD OLD F.I.     */ 14150021
                                 /************************************/ 14160021
 IF FILE_RCBDRJ0_H.PROCESS_NAME   ¬= 'RCMS HW'                          14170021
  | FILE_RCBDRJ0_H.FILE_TYPE      ¬= 'FULL IMAGE'                       14180021
  | FILE_RCBDRJ0_H.COUNTRY_NUMBER ¬= WRK_CTRYNO                         14190021
 THEN                                                                   14200021
   DO;                                                                  14210021
     PARM_INT_AREA.MESSAGE_TYPE                    = 'IS';              14220021
     PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER         = '0014';            14230021
     PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES          = '';                14240021
     PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6         = 'FL';              14250021
     PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6        = 'RCBDRJ0';         14260021
     CALL RCB0M1M (PTR_INT_AREA);                                       14270021
     CALL R100_ERROR (NULL(),                                           14280021
                      'OTHER',                                          14290021
                      '#009');                                          14300021
   END;                                                                 14310021
                                                                        14320021
0                                /* RETRIEVE PARAMETER RCB024        */ 14330021
 TB_RCBV500            = '';     /* INIT TABLESTRUCTURE              */ 14340021
 TB_RCBV500_I          = '';                                            14350021
 TB_RCB024.NUMBER      = 'RCB024';                                      14360021
 TB_RCB024.PROC_ID     = WRK_PROC_ID;                                   14370021
 TB_RCB024.CTRYNO      = WRK_CTRYNO;                                    14380021
 TB_RCB024.FILE_NAME   = WRK_RCBDRJ2;                                   14390021
 TB_RCB024.SEQ_NUMBER = '  ';                                           14400021
                                 /* INPUT FILE TIMESTAMP + HASH TOTAL*/ 14410021
0CALL RCBI50M ('R',                                       /* RC01219 */ 14420021
               ADDR (TB_RCBV500),                                       14430021
               ADDR (TB_RCBV500_I),                                     14440021
               PTR_RETURN_AREA_BB,                                      14450021
               PTR_INT_AREA);                                           14460021
0SELECT(RETURN_AREA_BB.RETURN_CODE);                                    14470021
   WHEN (0)                                                             14480021
     DO;                                                                14490021
       IF TB_RCB024.TIME_STAMP ¬= FILE_RCBDRJ0_H.TIME_STAMP             14500021
         THEN                                                           14510021
           DO;                                                          14520021
             PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                      14530021
             PARM_INT_AREA.MESSAGE_NUMBER  = '0174';                    14540021
             PARM_INT_AREA.MSG_VAR_CODES   = '';                        14550021
             PARM_INT_AREA.MSG_VAR_CODE_6  = 'FL';                      14560021
             PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBDRJ0';                 14570021
             PARM_INT_AREA.MSG_VAR_CODE_7  = 'TS';                      14580021
             PARM_INT_AREA.MSG_VAR_VALUE_7 = FILE_RCBDRJ0_H.TIME_STAMP; 14590021
             PARM_INT_AREA.MSG_VAR_CODE_8  = 'PM';                      14600021
             PARM_INT_AREA.MSG_VAR_VALUE_8 = 'RCBDRJ0';                 14610021
             PARM_INT_AREA.MSG_VAR_CODE_9  = 'TS';                      14620021
             PARM_INT_AREA.MSG_VAR_VALUE_9 = TB_RCB024.TIME_STAMP;      14630021
             CALL RCB0M1M (PTR_INT_AREA);                               14640021
             CALL R100_ERROR (NULL(), 'OTHER', '#010');                 14650021
           END;                                                         14660021
         ELSE                                                           14670021
           DO;                                                          14680021
             WRK_HASH_RCBDRJ0 = TB_RCB024.HASH_TOTAL;                   14690021
           END;                                                         14700021
     END;                                                               14710021
   OTHERWISE                                                            14720021
     DO;                                                                14730021
       CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),               14740021
                              'DB2',                                    14750021
                              '#011');                                  14760021
     END;                                                               14770021
 END;                                                                   14780021
                                 /************************************/ 14790021
                                 /* SET HEADER RECORD NEW FULL IMAGE*/  14800021
                                 /************************************/ 14810021
 FILE_RCBDRJ0   = '';                                                   14820021
 FILE_RCBDRJ0_H = '';                                                   14830021
 FILE_RCBDRJ0_H.KEY            = ' ';                                   14840021
 FILE_RCBDRJ0_H.PROCESS_NAME   = 'RCMS HW';                             14850021
 FILE_RCBDRJ0_H.FILE_TYPE      = 'FULL IMAGE';                          14860021
 FILE_RCBDRJ0_H.COUNTRY_NUMBER = WRK_CTRYNO;                            14870021
 FILE_RCBDRJ0_H.RUN_DATE       = WRK_RUN_DATE;                          14880021
 FILE_RCBDRJ0_H.TIME_STAMP     = WRK_TIME_STAMP;                        14890021
 WRITE FILE(RCBDRJ2) FROM (FILE_RCBDRJ0);                               14900021
                                 /************************************/ 14910021
                                 /* READ HEADER RECORD DELTA EXTRACT */ 14920021
                                 /************************************/ 14930021
 CALL R011_READ1;                                                       14940021
 IF SK1.EOF = '1'                /* EMPTY FILE                       */ 14950021
   THEN                                                                 14960021
     DO;                                                                14970021
       PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                            14980021
       PARM_INT_AREA.MESSAGE_NUMBER  = '0013';                          14990021
       PARM_INT_AREA.MSG_VAR_CODES   = '';                              15000021
       PARM_INT_AREA.MSG_VAR_CODE_6  = 'FL';                            15010021
       PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBDRJ1';                       15020021
       CALL RCB0M1M (PTR_INT_AREA);                                     15030021
       CALL R100_ERROR (NULL(), 'OTHER', '#012');                       15040021
     END;                                                               15050021
                                 /************************************/ 15060021
                                 /* CHECK HEADER RECORD DELTA EXTRACT*/ 15070021
                                 /************************************/ 15080021
 IF FILE_RCBDRJ1_H.PROCESS_NAME   ¬= 'RCMS HW'                          15090021
  | FILE_RCBDRJ1_H.FILE_TYPE      ¬= 'DELTA EXTR'                       15100021
  | FILE_RCBDRJ1_H.COUNTRY_NUMBER ¬= WRK_CTRYNO                         15110021
 THEN                                                                   15120021
   DO;                                                                  15130021
     PARM_INT_AREA.MESSAGE_TYPE                    = 'IS';              15140021
     PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER         = '0014';            15150021
     PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES          = '';                15160021
     PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6         = 'FL';              15170021
     PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6        = 'RCBDRJ1';         15180021
     CALL RCB0M1M (PTR_INT_AREA);                                       15190021
     CALL R100_ERROR (NULL(),                                           15200021
                      'OTHER',                                          15210021
                      '#013');                                          15220021
   END;                                                                 15230021
                                                                        15240021
0                                /* RETRIEVE PARAMETER RCB024        */ 15250021
 TB_RCBV500            = '';     /* INIT TABLESTRUCTURE              */ 15260021
 TB_RCBV500_I          = '';                                            15270021
 TB_RCB024.NUMBER      = 'RCB024';                                      15280021
 TB_RCB024.PROC_ID     = WRK_PROC_ID;                                   15290021
 TB_RCB024.CTRYNO      = WRK_CTRYNO;                                    15300021
 TB_RCB024.FILE_NAME   = WRK_RCBDRI1;                                   15310021
 TB_RCB024.SEQ_NUMBER = '  ';                                           15320021
                                 /* INPUT FILE TIMESTAMP + HASH TOTAL*/ 15330021
0CALL RCBI50M ('U',                                       /* RC01219 */ 15340021
               ADDR (TB_RCBV500),                                       15350021
               ADDR (TB_RCBV500_I),                                     15360021
               PTR_RETURN_AREA_BB,                                      15370021
               PTR_INT_AREA);                                           15380021
0SELECT(RETURN_AREA_BB.RETURN_CODE);                                    15390021
   WHEN (0)                                                             15400021
     DO;                                                                15410021
       IF TB_RCB024.TIME_STAMP ¬= FILE_RCBDRJ1_H.TIME_STAMP             15420021
         THEN                                                           15430021
           DO;                                                          15440021
             PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                      15450021
             PARM_INT_AREA.MESSAGE_NUMBER  = '0174';                    15460021
             PARM_INT_AREA.MSG_VAR_CODES   = '';                        15470021
             PARM_INT_AREA.MSG_VAR_CODE_6  = 'FL';                      15480021
             PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBDRJ1';                 15490021
             PARM_INT_AREA.MSG_VAR_CODE_7  = 'TS';                      15500021
             PARM_INT_AREA.MSG_VAR_VALUE_7 = TB_RCB024.TIME_STAMP;      15510021
             PARM_INT_AREA.MSG_VAR_CODE_8  = 'TS';                      15520021
             PARM_INT_AREA.MSG_VAR_VALUE_8 = FILE_RCBDRJ1_H.TIME_STAMP; 15530021
             CALL RCB0M1M (PTR_INT_AREA);                               15540021
             CALL R100_ERROR (NULL(), 'OTHER', '#014');                 15550021
           END;                                                         15560021
         ELSE                                                           15570021
           DO;                                                          15580021
             WRK_HASH_RCBDRJ1 = TB_RCB024.HASH_TOTAL;                   15590021
           END;                                                         15600021
     END;                                                               15610021
   OTHERWISE                                                            15620021
     DO;                                                                15630021
       CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),               15640021
                              'DB2',                                    15650021
                              '#015');                                  15660021
     END;                                                               15670021
 END;                                                                   15680021
                                 /************************************/ 15690021
                                 /* READ NEXT RECORD OLD F.I.& DELTA */ 15700021
                                 /************************************/ 15710021
 CALL R010_READ0;                                                       15720021
 CALL R011_READ1;                                                       15730021
                                 /************************************/ 15740021
                                 /* READ FIRST RECORD IN TEMP. TABLE */ 15750021
                                 /************************************/ 15760021
 CALL R012_FETCH_CURSOR_1_V722;                                         15770021
                                 /************************************/ 15780021
                                 /* DETERMINE SMALLEST SORT KEY      */ 15790021
                                 /************************************/ 15800021
 CALL R059_PROCESS_SK;                                                  15810021
 END R080_INIT_PROCESSING;                                              15820021
1/********************************************************************/ 15830021
 /*                                                                  */ 15840021
 /* MODULE NAME      : R081_OPEN_CURSOR_1_V500                       */ 15850021
 /*                                                                  */ 15860021
 /* DESCRIPTION      : OPEN CURSOR_1_V500                            */ 15870021
 /*                                                                  */ 15880021
 /********************************************************************/ 15890021
 R081_OPEN_CURSOR_1_V500: PROC;                                         15900021
                                 /************************************/ 15910021
                                 /* INIT CURSOR CURSOR_1_V500        */ 15920021
                                 /************************************/ 15930021
 EXEC SQL                                                               15940021
   OPEN CURSOR_1_V500;                                                  15950021
                                                                        15960021
 SELECT (SQLCODE);                                                      15970021
   WHEN (0);                                                            15980021
   OTHERWISE                                                            15990021
     DO;                                                                16000021
       CALL R100_ERROR (ADDR (SQLCA),                                   16010021
                              'DB2',                                    16020021
                              '#016');                                  16030021
     END;                                                               16040021
 END;                                                                   16050021
 END R081_OPEN_CURSOR_1_V500;                                           16060021
1/********************************************************************/ 16070021
 /*                                                                  */ 16080021
 /* MODULE NAME      : R088_CLOSE_CURSOR_1_V500                      */ 16090021
 /*                                                                  */ 16100021
 /* DESCRIPTION      : CLOSE CURSOR_1_V500                           */ 16110021
 /*                                                                  */ 16120021
 /********************************************************************/ 16130021
 R088_CLOSE_CURSOR_1_V500: PROC;                                        16140021
                                 /************************************/ 16150021
                                 /* CLOSE CURSOR CURSOR_1_V500       */ 16160021
                                 /************************************/ 16170021
 EXEC SQL                                                               16180021
   CLOSE CURSOR_1_V500;                                                 16190021
                                                                        16200021
 SELECT (SQLCODE);                                                      16210021
   WHEN (0);                                                            16220021
   OTHERWISE                                                            16230021
     DO;                                                                16240021
       CALL R100_ERROR (ADDR (SQLCA),                                   16250021
                              'DB2',                                    16260021
                              '#017');                                  16270021
     END;                                                               16280021
 END;                                                                   16290021
 END R088_CLOSE_CURSOR_1_V500;                                          16300021
1/********************************************************************/ 16310021
 /*                                                                  */ 16320021
 /* MODULE NAME      : R089_END_PROCESSING                           */ 16330021
 /*                                                                  */ 16340021
 /* DESCRIPTION      : CLOSE CURSOR                                  */ 16350021
 /*                                                                  */ 16360021
 /********************************************************************/ 16370021
 R089_END_PROCESSING: PROC;                                             16380021
                                 /************************************/ 16390021
                                 /* CLOSE CURSOR CURSOR_1_V722       */ 16400021
                                 /************************************/ 16410021
 EXEC SQL                                                               16420021
   CLOSE CURSOR_1_V722;                                                 16430021
                                                                        16440021
 SELECT (SQLCODE);                                                      16450021
   WHEN (0);                                                            16460021
   OTHERWISE                                                            16470021
     DO;                                                                16480021
       CALL R100_ERROR (ADDR (SQLCA),                                   16490021
                              'DB2',                                    16500021
                              '#018');                                  16510021
     END;                                                               16520021
 END;                                                                   16530021
                                 /************************************/ 16540021
                                 /* FULL IMAGE:                      */ 16550021
                                 /* SAVE HASH TOTAL AND              */ 16560021
                                 /* TIMESTAMP IN PARAMETER RCB024    */ 16570021
                                 /************************************/ 16580021
 TB_RCBV500   = '';                                                     16590021
 TB_RCBV500_I = '';                                                     16600021
 TB_RCB024.NUMBER      = 'RCB024';                                      16610021
 TB_RCB024.PROC_ID     = WRK_PROC_ID;                                   16620021
 TB_RCB024.CTRYNO      = WRK_CTRYNO;                                    16630021
 TB_RCB024.FILE_NAME   = WRK_RCBDRJ2;                                   16640021
 TB_RCB024.SEQ_NUMBER  = '  ';                                          16650021
 TB_RCB024.LENGTH_PARM = WRK_LENGTH_PARM;                               16660021
 TB_RCB024.TIME_STAMP  = WRK_TIME_STAMP;                                16670021
 TB_RCB024.HASH_TOTAL  = COUNT.RCBDRJ2_HASH;                            16680021
0CALL RCBG50M (ADDR (TB_RCBV500),                                       16690021
               ADDR (TB_RCBV500_I),                                     16700021
               PTR_RETURN_AREA_BB,                                      16710021
               PTR_INT_AREA);                                           16720021
                                                                        16730021
 SELECT(RETURN_AREA_BB.RETURN_CODE);                                    16740021
   WHEN (0)                                                             16750021
     DO;                                                                16760021
     END;                                                               16770021
   WHEN (4)                        /* WHEN NOT FOUND THEN INSERT  */    16780021
     DO;                                                                16790021
       CALL RCBF50M (ADDR(TB_RCBV500),                                  16800021
                     ADDR(TB_RCBV500_I),                                16810021
                     PTR_RETURN_AREA_BB,                                16820021
                     PTR_INT_AREA);                                     16830021
       SELECT(RETURN_AREA_BB.RETURN_CODE);                              16840021
         WHEN (0);                                                      16850021
         OTHERWISE                                                      16860021
           DO;                                                          16870021
             CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),         16880021
                              'DB2',                                    16890021
                              '#019');                                  16900021
           END;                                                         16910021
       END;                                                             16920021
     END;                                                               16930021
   OTHERWISE                                                            16940021
     DO;                                                                16950021
        CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),              16960021
                               'DB2',                                   16970021
                               '#020');                                 16980021
     END;                                                               16990021
 END;                                                                   17000021
                                 /************************************/ 17010021
                                 /* SAVE PARAMETER RCB037            */ 17020021
                                 /* TO INDICATE END OF RCMS HW EXTR. */ 17030021
                                 /************************************/ 17040021
 TB_RCBV500   = '';                                                     17050021
 TB_RCBV500_I = '';                                                     17060021
 TB_RCB037.NUMBER         = 'RCB037';                                   17070021
 TB_RCB037.PROC_ID        = WRK_PROC_ID;                                17080021
 TB_RCB037.CTRYNO         = WRK_CTRYNO;                                 17090021
 TB_RCB037.LENGTH_PARM    = CSTG (TB_RCB037.LAST_EXTR_DATE);            17100021
 TB_RCB037.LAST_EXTR_DATE = WRK_RUN_DATE;                               17110021
0CALL RCBG50M (ADDR (TB_RCBV500),                                       17120021
               ADDR (TB_RCBV500_I),                                     17130021
               PTR_RETURN_AREA_BB,                                      17140021
               PTR_INT_AREA);                                           17150021
 SELECT(RETURN_AREA_BB.RETURN_CODE);                                    17160021
   WHEN (0)                                                             17170021
     DO;                                                                17180021
     END;                                                               17190021
   OTHERWISE                                                            17200021
     DO;                                                                17210021
        CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),              17220021
                               'DB2',                                   17230021
                               '#021');                                 17240021
     END;                                                               17250021
 END;                                                                   17260021
 END R089_END_PROCESSING;                                               17270021
1/********************************************************************/ 17280021
 /*                                                                  */ 17290021
 /* MODULE NAME      : R090_INIT_PROG                                */ 17300021
 /*                                                                  */ 17310021
 /* DESCRIPTION      : INIT PROGRAM                                  */ 17320021
 /*                                                                  */ 17330021
 /********************************************************************/ 17340021
 R090_INIT_PROG: PROC;                                                  17350021
                                 /************************************/ 17360021
                                 /* INITIALIZE POINTERS              */ 17370021
                                 /************************************/ 17380021
 PTR_INT_AREA       =  ADDR (PARM_INT_AREA);                            17390021
 PTR_RETURN_AREA_BB =  ADDR (RETURN_AREA_BB);                           17400021
 PTR_COUNTRY_AREA   =  ADDR (COUNTRY_AREA);                             17410021
 PTR_RUN_DATE_AREA  =  ADDR (RUN_DATE_AREA);                            17420021
                                 /************************************/ 17430021
                                 /* INITIALIZE VARIABLES             */ 17440021
                                 /************************************/ 17450021
 PARM_INT_AREA.MSG_AREA = '';                                           17460021
 PARM_INT_AREA.ERR_AREA = '';                                           17470021
                                                                        17480021
 PARM_INT_AREA.MSG_REQUEST     = 'O';                                   17490021
 PARM_INT_AREA.MSG_TARGET      = 'F';                                   17500021
                                                                        17510021
 PARM_INT_AREA.ID_SOURCE_APPL  = 'RCB';                                 17520021
 PARM_INT_AREA.ID_SOURCE_PROG  = WRK_PGM_NAME;                          17530021
 PARM_INT_AREA.ID_MOD_PATH (1) = WRK_MOD_NAME;                          17540021
 PARM_INT_AREA.ID_MOD_LEVEL    = 1;                                     17550021
 PARM_INT_AREA.PTR_PCB_IO      = NULL;                                  17560021
 PARM_INT_AREA.PTR_PCB_ALT     = NULL;                                  17570021
 PARM_INT_AREA.SYSTEM_TYPE     = 'B';                                   17580021
                                 /************************************/ 17590021
                                 /* OPEN MESSAGE FILE                */ 17600021
                                 /************************************/ 17610021
 CALL RCB0M1M (PTR_INT_AREA);                                           17620021
                                 /************************************/ 17630021
                                 /* RETRIEVE SYSTEM DATE             */ 17640021
                                 /************************************/ 17650021
 CALL RCB0T1M (PTR_INT_AREA);                                           17660021
                                 /************************************/ 17670021
                                 /* RETRIEVE COUNTRY NUMBERS         */ 17680021
                                 /************************************/ 17690021
 CALL RCB019M (PTR_COUNTRY_AREA,                                        17700021
                   PTR_INT_AREA);                                       17710021
                                                                        17720021
 SELECT;                         /* ONLY ONE COUNTRY                 */ 17730021
   WHEN(COUNTRY_AREA.COUNT_CTRY = 0)                                    17740021
     DO;                                                                17750021
       PARM_INT_AREA.COUNTRY_NUMBER    = '';                            17760021
       PARM_INT_AREA.MSG_VAR_CODES     = '';                            17770021
       PARM_INT_AREA.MESSAGE_TYPE      = 'IS';                          17780021
       PARM_INT_AREA.MESSAGE_NUMBER    = '0005';                        17790021
       CALL RCB0M1M (PTR_INT_AREA);                                     17800021
       CALL R100_ERROR (NULL, 'OTHER', '#022');                         17810021
     END;                                                               17820021
   WHEN(COUNTRY_AREA.COUNT_CTRY > 1)                                    17830021
     DO;                                                                17840021
       PARM_INT_AREA.COUNTRY_NUMBER    = '';                            17850021
       PARM_INT_AREA.MSG_VAR_CODES     = '';                            17860021
       PARM_INT_AREA.MESSAGE_TYPE      = 'IS';                          17870021
       PARM_INT_AREA.MESSAGE_NUMBER    = '0189';                        17880021
       CALL RCB0M1M (PTR_INT_AREA);                                     17890021
       CALL R100_ERROR (NULL, 'OTHER', '#023');                         17900021
     END;                                                               17910021
   OTHERWISE                                                            17920021
     DO;                                                                17930021
       WRK_PROC_ID  = COUNTRY_AREA.PROC_ID;                             17940021
       WRK_CTRYNO   = COUNTRY_AREA.CTRY_ARRAY(1).CTRYNO;                17950021
       WRK_PGR_TYPE = COUNTRY_AREA.CTRY_ARRAY(1).PGR_TYPE;              17960021
     END;                                                               17970021
 END;                                                                   17980021
                                 /************************************/ 17990021
                                 /* LOCK TABLES                      */ 18000021
                                 /************************************/ 18010021
 CALL R001_LOCK_TABLES;                                                 18020021
                                 /************************************/ 18030021
                                 /* RETRIEVE RUN DATE                */ 18040021
                                 /************************************/ 18050021
 RUN_DATE_AREA.PROC_ID   =  WRK_PROC_ID;                                18060021
 RUN_DATE_AREA.CTRYNO    =  WRK_CTRYNO;                                 18070021
 RUN_DATE_AREA.PGR_TYPE  =  WRK_PGR_TYPE;                               18080021
 CALL RCB020M (PTR_RUN_DATE_AREA,                                       18090021
                    PTR_INT_AREA);                                      18100021
                                                                        18110021
 IF RUN_DATE_AREA.RUN_DATE = ''  /* NO RUN DATE RCB001 FOUND         */ 18120021
   THEN                                                                 18130021
     DO;                                                                18140021
       WRK_RUN_DATE = PARM_INT_AREA.SYSTEM_DATE;                        18150021
     END;                                                               18160021
   ELSE                                                                 18170021
     DO;                                                                18180021
       WRK_RUN_DATE = RUN_DATE_AREA.RUN_DATE;                           18190021
     END;                                                               18200021
                                 /* WRITE MESSAGE WITH RUN DATE      */ 18210021
 PARM_INT_AREA.COUNTRY_NUMBER  = WRK_CTRYNO;                            18220021
 PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                                  18230021
 PARM_INT_AREA.MESSAGE_NUMBER  = '0002';                                18240021
 PARM_INT_AREA.MSG_VAR_CODES   = '';                                    18250021
 PARM_INT_AREA.MSG_VAR_CODE_6  = 'DT';                                  18260021
 PARM_INT_AREA.MSG_VAR_VALUE_6 = WRK_RUN_DATE;                          18270021
 CALL RCB0M1M (PTR_INT_AREA);                                           18280021
                                 /************************************/ 18290021
                                 /* CHECK HORIZON DATE               */ 18300021
                                 /************************************/ 18310021
 CALL RCB022M (ADDR(WRK_CTRYNO),                          /* PTM1038 */ 18320021
               ADDR(WRK_RUN_DATE),                                      18330021
               ADDR(WRK_HORIZON_DATE),                                  18340021
               PTR_INT_AREA);                                           18350021
 IF WRK_HORIZON_DATE ¬= ''       /* HORIZON DATE > RUN DATE          */ 18360021
 THEN                                                                   18370021
   DO;                                                                  18380021
      PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                             18390021
      PARM_INT_AREA.MESSAGE_NUMBER  = '0168';                           18400021
      PARM_INT_AREA.MSG_VAR_CODES   = '';                               18410021
      PARM_INT_AREA.MSG_VAR_CODE_6  = 'D1';                             18420021
      PARM_INT_AREA.MSG_VAR_VALUE_6 = WRK_RUN_DATE;                     18430021
      PARM_INT_AREA.MSG_VAR_CODE_7  = 'D2';                             18440021
      PARM_INT_AREA.MSG_VAR_VALUE_7 = WRK_HORIZON_DATE;                 18450021
      CALL RCB0M1M (PTR_INT_AREA);                                      18460021
      CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),                18470021
                         'DB2',                                         18480021
                         '#024');                                       18490021
   END;                                                                 18500021
                                         /* SOC RB01254 ADD NFI_AREA */ 18510021
 NFI_AREA = '';                          /* INITIALIZE NFI_AREA      */ 18520021
                                         /* EOC RB01254              */ 18530021
                                                                        18540021
                                 /************************************/ 18550021
                                 /* RETRIEVE PARAMETER RCB005        */ 18560021
                                 /************************************/ 18570021
 TB_RCBV500          = '';                                              18580021
 TB_RCBV500_I        = '';                                              18590021
 TB_RCB005.NUMBER   = 'RCB005';                                         18600021
 TB_RCB005.PGR_TYPE = WRK_PGR_TYPE;                                     18610021
 TB_RCB005.CTRYNO   = WRK_CTRYNO;                                       18620021
                                                                        18630021
0CALL RCBI50M ('U',                                       /* RC01219 */ 18640021
               ADDR (TB_RCBV500),                                       18650021
               ADDR (TB_RCBV500_I),                                     18660021
               PTR_RETURN_AREA_BB,                                      18670021
               PTR_INT_AREA);                                           18680021
                                                                        18690021
 SELECT(RETURN_AREA_BB.RETURN_CODE);                                    18700021
   WHEN (0)                                                             18710021
     DO;                                                                18720021
       WRK_HIST_RET_PERIOD = TB_RCB005.HIST_RET_PERIOD;                 18730021
     END;                                                               18740021
   WHEN (4)                                                             18750021
     DO;                                                                18760021
        PARM_INT_AREA.MESSAGE_TYPE               = 'IS';                18770021
        PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER    = 'I050';              18780021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES     = ' ';                 18790021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6    = 'PN';                18800021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6   =                      18810021
                                       TB_RCBV500.PARAMETER_NUMBER;     18820021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_7    = 'PK';                18830021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_7   =                      18840021
                                       TB_RCBV500.PARAMETER_KEY;        18850021
        CALL RCB0M1M (PTR_INT_AREA);                                    18860021
        CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),              18870021
                               'OTHER',                                 18880021
                               '#025');                                 18890021
     END;                                                               18900021
   OTHERWISE                                                            18910021
     DO;                                                                18920021
        CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),              18930021
                               'DB2',                                   18940021
                               '#026');                                 18950021
     END;                                                               18960021
 END;                                                                   18970021
                                 /************************************/ 18980021
0                                /* CALCULATE HISTORY START DATE     */ 18990021
                                 /************************************/ 19000021
 DATE_AREA = '';                                                        19010021
 DATE_AREA.WD_IN_FORMAT        = 'ISO';                                 19020021
 DATE_AREA.WD_OUT_FORMAT       = 'ISO';                                 19030021
 DATE_AREA.WD_FUNCTION         = 'C';                                   19040021
 DATE_AREA.WD_PERIOD           = - WRK_HIST_RET_PERIOD;                 19050021
 DATE_AREA.WD_PERIOD_TYPE      = 'D';                                   19060021
 DATE_AREA.WD_IN_DATE          = WRK_RUN_DATE;                          19070021
 CALL RCB004M (ADDR(DATE_AREA));                                        19080021
 SELECT (DATE_AREA.WD_STATUS);                                          19090021
   WHEN ('')                                                            19100021
     DO;                                         /* PTM 697 START    */ 19110021
       WRK_HIST_START_DATE = SUBSTR(DATE_AREA.WD_OUT_DATE,1,4)||        19120021
                                                 /* PTM 697 END      */ 19130021
                             SUBSTR(DATE_AREA.WD_OUT_DATE,6,2)||        19140021
                             SUBSTR(DATE_AREA.WD_OUT_DATE,9,2);         19150021
     END;                                                               19160021
   OTHERWISE                                                            19170021
     DO;                                                                19180021
       PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                            19190021
       PARM_INT_AREA.MESSAGE_NUMBER  = '0012';                          19200021
       PARM_INT_AREA.MSG_VAR_CODES   = '';                              19210021
       PARM_INT_AREA.MSG_VAR_CODE_6  = 'DT';                            19220021
       PARM_INT_AREA.MSG_VAR_VALUE_6 = WRK_RUN_DATE;                    19230021
       PARM_INT_AREA.MSG_VAR_CODE_7  = 'DT';                            19240021
       PARM_INT_AREA.MSG_VAR_VALUE_7 = WRK_HIST_RET_PERIOD;             19250021
       PARM_INT_AREA.MSG_VAR_CODE_8  = 'RC';                            19260021
       PARM_INT_AREA.MSG_VAR_VALUE_8 = DATE_AREA.WD_STATUS;             19270021
       CALL RCB0M1M (ADDR(PARM_INT_AREA));                              19280021
       CALL R100_ERROR (NULL(),                                         19290021
                        'OTHER',                                        19300021
                        '#027');                                        19310021
     END;                                                               19320021
 END;                                                                   19330021
                                 /************************************/ 19340021
                                 /* RETRIEVE PARAMETER RCB014        */ 19350021
                                 /************************************/ 19360021
 TB_RCBV500          = '';                                              19370021
 TB_RCBV500_I        = '';                                              19380021
 TB_RCB014.NUMBER   = 'RCB014';                                         19390021
 TB_RCB014.PROC_ID  = WRK_PROC_ID;                                      19400021
 TB_RCB014.CTRYNO   = WRK_CTRYNO;                                       19410021
                                                                        19420021
0CALL RCBI50M ('R',                                       /* RC01219 */ 19430021
               ADDR (TB_RCBV500),                                       19440021
               ADDR (TB_RCBV500_I),                                     19450021
               PTR_RETURN_AREA_BB,                                      19460021
               PTR_INT_AREA);                                           19470021
                                                                        19480021
 SELECT(RETURN_AREA_BB.RETURN_CODE);                                    19490021
   WHEN (0)                                                             19500021
     DO;                                                                19510021
       WRK_RCB014 = TB_RCB014, BY NAME;                                 19520021
     END;                                                               19530021
   WHEN (4)                                                             19540021
     DO;                                                                19550021
        PARM_INT_AREA.MESSAGE_TYPE               = 'IS';                19560021
        PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER    = 'I050';              19570021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES     = ' ';                 19580021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6    = 'PN';                19590021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6   =                      19600021
                                       TB_RCBV500.PARAMETER_NUMBER;     19610021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_7    = 'PK';                19620021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_7   =                      19630021
                                       TB_RCBV500.PARAMETER_KEY;        19640021
        CALL RCB0M1M (PTR_INT_AREA);                                    19650021
        CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),              19660021
                               'OTHER',                                 19670021
                               '#028');                                 19680021
     END;                                                               19690021
   OTHERWISE                                                            19700021
     DO;                                                                19710021
        CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),              19720021
                               'DB2',                                   19730021
                               '#029');                                 19740021
     END;                                                               19750021
 END;                                                                   19760021
                                 /************************************/ 19770021
                                 /* RETRIEVE PARAMETER RCB016        */ 19780021
                                 /************************************/ 19790021
 TB_RCBV500          = '';                                              19800021
 TB_RCBV500_I        = '';                                              19810021
 TB_RCB016.NUMBER   = 'RCB016';                                         19820021
 TB_RCB016.PROC_ID  = WRK_PROC_ID;                                      19830021
 TB_RCB016.CTRYNO   = WRK_CTRYNO;                                       19840021
 TB_RCB016.PGR_TYPE = WRK_PGR_TYPE;                                     19850021
                                                                        19860021
0CALL RCBI50M ('U',                                       /* RC01219 */ 19870021
               ADDR (TB_RCBV500),                                       19880021
               ADDR (TB_RCBV500_I),                                     19890021
               PTR_RETURN_AREA_BB,                                      19900021
               PTR_INT_AREA);                                           19910021
                                                                        19920021
 SELECT(RETURN_AREA_BB.RETURN_CODE);                                    19930021
   WHEN (0)                                                             19940021
     DO;                                                                19950021
       WRK_OU_PARM_REP = TB_RCB016.OU_PARM_REP;                         19960021
     END;                                                               19970021
   WHEN (4)                                                             19980021
     DO;                                                                19990021
                                 /* DEFAULT TO Y                     */ 20000021
       WRK_OU_PARM_REP = 'Y';                                           20010021
     END;                                                               20020021
   OTHERWISE                                                            20030021
     DO;                                                                20040021
        PARM_INT_AREA.MESSAGE_TYPE               = 'IS';                20050021
        PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER    = 'I050';              20060021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES     = ' ';                 20070021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6    = 'PN';                20080021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6   =                      20090021
                                       TB_RCBV500.PARAMETER_NUMBER;     20100021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_7    = 'PK';                20110021
        PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_7   =                      20120021
                                       TB_RCBV500.PARAMETER_KEY;        20130021
        CALL RCB0M1M (PTR_INT_AREA);                                    20140021
        CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),              20150021
                               'DB2',                                   20160021
                               '#030');                                 20170021
     END;                                                               20180021
 END;                                                                   20190021
                                                                        20200021
 END R090_INIT_PROG;                                                    20210021
1/********************************************************************/ 20220021
 /*                                                                  */ 20230021
 /* MODULE NAME      : R099_TERM                                     */ 20240021
 /*                                                                  */ 20250021
 /* DESCRIPTION      : TERMINATE PROGRAM                             */ 20260021
 /*                                                                  */ 20270021
 /********************************************************************/ 20280021
 R099_TERM: PROC;                                                       20290021
                                 /************************************/ 20300021
                                 /* CHECK HASH TOTALS OLD FULL IMAGE */ 20310021
                                 /************************************/ 20320021
 IF WRK_HASH_RCBDRJ0 ¬= COUNT.RCBDRJ0_HASH                              20330021
   THEN                                                                 20340021
     DO;                                                                20350021
       PARM_INT_AREA.COUNTRY_NUMBER  = '   ';                           20360021
       PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                            20370021
       PARM_INT_AREA.MESSAGE_NUMBER  = '0175';                          20380021
       PARM_INT_AREA.MSG_VAR_CODES   = '';                              20390021
       PARM_INT_AREA.MSG_VAR_CODE_6  = 'FL';                            20400021
       PARM_INT_AREA.MSG_VAR_VALUE_6 = WRK_RCBDRJ0;                     20410021
       PARM_INT_AREA.MSG_VAR_CODE_7  = 'HT';                            20420021
       CNT_PIC15                     = COUNT.RCBDRJ0_HASH;              20430021
       PARM_INT_AREA.MSG_VAR_VALUE_7 = CNT_PIC15;                       20440021
       PARM_INT_AREA.MSG_VAR_CODE_8  = 'HT';                            20450021
       CNT_PIC15                     = WRK_HASH_RCBDRJ0;                20460021
       PARM_INT_AREA.MSG_VAR_VALUE_8 = CNT_PIC15;                       20470021
       CALL RCB0M1M (PTR_INT_AREA);                                     20480021
       CALL R100_ERROR (NULL, 'OTHER', '#031');                         20490021
     END;                                                               20500021
                                 /************************************/ 20510021
                                 /* CHECK HASH TOTALS DELTA EXTRACT  */ 20520021
                                 /************************************/ 20530021
 IF WRK_HASH_RCBDRJ1 ¬= COUNT.RCBDRJ1_HASH                              20540021
   THEN                                                                 20550021
     DO;                                                                20560021
       PARM_INT_AREA.COUNTRY_NUMBER  = '   ';                           20570021
       PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                            20580021
       PARM_INT_AREA.MESSAGE_NUMBER  = '0175';                          20590021
       PARM_INT_AREA.MSG_VAR_CODES   = '';                              20600021
       PARM_INT_AREA.MSG_VAR_CODE_6  = 'FL';                            20610021
       PARM_INT_AREA.MSG_VAR_VALUE_6 = WRK_RCBDRJ1;                     20620021
       PARM_INT_AREA.MSG_VAR_CODE_7  = 'HT';                            20630021
       CNT_PIC15                     = COUNT.RCBDRJ1_HASH;              20640021
       PARM_INT_AREA.MSG_VAR_VALUE_7 = CNT_PIC15;                       20650021
       PARM_INT_AREA.MSG_VAR_CODE_8  = 'HT';                            20660021
       CNT_PIC15                     = WRK_HASH_RCBDRJ1;                20670021
       PARM_INT_AREA.MSG_VAR_VALUE_8 = CNT_PIC15;                       20680021
       CALL RCB0M1M (PTR_INT_AREA);                                     20690021
       CALL R100_ERROR (NULL, 'OTHER', '#032');                         20700021
     END;                                                               20710021
                                 /************************************/ 20720021
                                 /* CREATE TRAILER RECORD NEW F.I.   */ 20730021
                                 /************************************/ 20740021
 FILE_RCBDRJ0 = '';                                                     20750021
 FILE_RCBDRJ0_H ='';                                                    20760021
 FILE_RCBDRJ0_H.KEY            = (20)'9';                               20770021
 FILE_RCBDRJ0_H.PROCESS_NAME   = 'RCMS HW';                             20780021
 FILE_RCBDRJ0_H.FILE_TYPE      = 'FULL IMAGE';                          20790021
 FILE_RCBDRJ0_H.COUNTRY_NUMBER = WRK_CTRYNO;                            20800021
 WRITE FILE(RCBDRJ2) FROM (FILE_RCBDRJ0);                               20810021
                                 /************************************/ 20820021
                                 /* CREATE TRAILER RECORDS RCMS FILES*/ 20830021
                                 /************************************/ 20840021
 RCBDR0S0.KIND_OF_RECORD = 'T';  /* FILL TRAILER INTERFACE           */ 20850021
 IOAREA_OUT = '';                /* INIT IO AREA                     */ 20860021
 DO WRK_SYSTEM_ID = 1 TO 20;                                            20870021
   IF P10_ARRAY(WRK_SYSTEM_ID).EXTRACT_TYPE ¬= ' '                      20880021
     THEN                                                               20890021
       DO;                                                              20900021
         WRK_SYSTEM_ID_PIC4  = WRK_SYSTEM_ID;                           20910021
         RCBDR0S0.KIND_OF_EXTRACT                                       20920021
                             = P10_ARRAY(WRK_SYSTEM_ID).EXTRACT_TYPE;   20930021
         RCBDR0S0.HASH_TOTAL = COUNT.RCBDRJX_HASH(WRK_SYSTEM_ID);       20940021
                                                                        20950021
         CALL RCBDR0M (PTR_INT_AREA,                                    20960021
                       ADDR(RCBDR0S0),                                  20970021
                       ADDR(IOAREA_OUT_H));                             20980021
                                                                        20990021
         WRITE FILE (RCBDRJX(WRK_SYSTEM_ID)) FROM (IOAREA_OUT);         21000021
                                                                        21010021
         CLOSE FILE (RCBDRJX(WRK_SYSTEM_ID));                           21020021
                                                                        21030021
       END;                                                             21040021
 END;                                                                   21050021
                                 /************************************/ 21060021
                                 /* CLOSE OTHER FILES                */ 21070021
                                 /************************************/ 21080021
0CLOSE FILE (RCBDRJ0);                                                  21090021
 CLOSE FILE (RCBDRJ1);                                                  21100021
 CLOSE FILE (RCBDRJ2);                                                  21110021
                                 /************************************/ 21120021
                                 /* WRITE COUNT MESSAGE RCBDRJ0      */ 21130021
                                 /************************************/ 21140021
 PARM_INT_AREA.MESSAGE_TYPE                 = 'IS';                     21150021
 PARM_INT_AREA.MESSAGE_NUMBER               = '0003';                   21160021
 PARM_INT_AREA.MSG_VAR_CODES                = '';                       21170021
 PARM_INT_AREA.MSG_VAR_CODE_6               = 'FL';                     21180021
 PARM_INT_AREA.MSG_VAR_VALUE_6              = 'RCBDRJ0';                21190021
 PARM_INT_AREA.MSG_VAR_CODE_7               = 'C1';                     21200021
 CNT_PIC10                                  = COUNT.RCBDRJ0;            21210021
 PARM_INT_AREA.MSG_VAR_VALUE_7              = CNT_PIC10;                21220021
 CALL RCB0M1M (PTR_INT_AREA);                                           21230021
                                 /************************************/ 21240021
                                 /* WRITE COUNT MESSAGE DELTA EXTRACT*/ 21250021
                                 /************************************/ 21260021
 PARM_INT_AREA.MESSAGE_TYPE                 = 'IS';                     21270021
 PARM_INT_AREA.MESSAGE_NUMBER               = '0003';                   21280021
 PARM_INT_AREA.MSG_VAR_CODES                = '';                       21290021
 PARM_INT_AREA.MSG_VAR_CODE_6               = 'FL';                     21300021
 PARM_INT_AREA.MSG_VAR_VALUE_6              = 'RCBDRJ1';                21310021
 PARM_INT_AREA.MSG_VAR_CODE_7               = 'C1';                     21320021
 CNT_PIC10                                  = COUNT.RCBDRJ1;            21330021
 PARM_INT_AREA.MSG_VAR_VALUE_7              = CNT_PIC10;                21340021
 CALL RCB0M1M (PTR_INT_AREA);                                           21350021
                                 /************************************/ 21360021
                                 /* WRITE COUNT MESSAGE NEW F.I.     */ 21370021
                                 /************************************/ 21380021
 PARM_INT_AREA.MESSAGE_TYPE                 = 'IS';                     21390021
 PARM_INT_AREA.MESSAGE_NUMBER               = '0004';                   21400021
 PARM_INT_AREA.MSG_VAR_CODES                = '';                       21410021
 PARM_INT_AREA.MSG_VAR_CODE_6               = 'FL';                     21420021
 PARM_INT_AREA.MSG_VAR_VALUE_6              = 'RCBDRJ2';                21430021
 PARM_INT_AREA.MSG_VAR_CODE_7               = 'C1';                     21440021
 CNT_PIC10                                  = COUNT.RCBDRJ2;            21450021
 PARM_INT_AREA.MSG_VAR_VALUE_7              = CNT_PIC10;                21460021
 CALL RCB0M1M (PTR_INT_AREA);                                           21470021
                                 /************************************/ 21480021
                                 /* WRITE COUNT MESSAGE RCMS FILES   */ 21490021
                                 /* RCBDRJX(1-20)                    */ 21500021
                                 /************************************/ 21510021
 CNT_TOT = 0;                                                           21520021
                                                                        21530021
 DO WRK_SYSTEM_ID = 1 TO 20;                                            21540021
   IF P10_ARRAY(WRK_SYSTEM_ID).EXTRACT_TYPE ¬= ' '                      21550021
     THEN                                                               21560021
       DO;                                                              21570021
         PARM_INT_AREA.MESSAGE_TYPE             = 'IS';                 21580021
         PARM_INT_AREA.MESSAGE_NUMBER  = '0004';                        21590021
         PARM_INT_AREA.MSG_VAR_CODES   = '';                            21600021
         PARM_INT_AREA.MSG_VAR_CODE_6  = 'FL';                          21610021
         PARM_INT_AREA.MSG_VAR_VALUE_6 =                                21620021
                                    'RCBDRJX '||'GR'||WRK_SYSTEM_ID;    21630021
         PARM_INT_AREA.MSG_VAR_CODE_7  = 'C6';                          21640021
         CNT_TOT = CNT_TOT + COUNT.RCBDRJX(WRK_SYSTEM_ID);              21650021
         CNT_PIC10                     = COUNT.RCBDRJX(WRK_SYSTEM_ID);  21660021
         PARM_INT_AREA.MSG_VAR_VALUE_7 = CNT_PIC10;                     21670021
                                                                        21680021
         CALL RCB0M1M (PTR_INT_AREA);                                   21690021
       END;                                                             21700021
 END;                                                                   21710021
                                                                        21720021
 PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                                  21730021
 PARM_INT_AREA.MESSAGE_NUMBER  = '0004';                                21740021
 PARM_INT_AREA.MSG_VAR_CODES   = '';                                    21750021
 PARM_INT_AREA.MSG_VAR_CODE_6  = 'FL';                                  21760021
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBDRJX';                             21770021
 PARM_INT_AREA.MSG_VAR_CODE_7  = 'C6';                                  21780021
 CNT_PIC10                     = CNT_TOT;                               21790021
 PARM_INT_AREA.MSG_VAR_VALUE_7 = CNT_PIC10;                             21800021
                                                                        21810021
 CALL RCB0M1M (PTR_INT_AREA);                                           21820021
                                                                        21830021
                                 /************************************/ 21840021
                                 /* INCREASE PARAMETER RUN SEQ. NO   */ 21850021
                                 /************************************/ 21860021
 WRK_RCB014.RUN_SEQ_NO = WRK_RCB014.RUN_SEQ_NO + 1;                     21870021
 TB_RCBV500            = '';     /* INIT TABLESTRUCTURE              */ 21880021
 TB_RCBV500_I          = '';                                            21890021
 TB_RCB014             = WRK_RCB014;                                    21900021
                                                                        21910021
                                 /* UPDATE RUN SEQUENCE NUMBER       */ 21920021
0CALL RCBG50M (ADDR (TB_RCBV500),                                       21930021
               ADDR (TB_RCBV500_I),                                     21940021
               PTR_RETURN_AREA_BB,                                      21950021
               PTR_INT_AREA);                                           21960021
                                                                        21970021
 SELECT(RETURN_AREA_BB.RETURN_CODE);                                    21980021
   WHEN (0);                                                            21990021
   OTHERWISE                                                            22000021
     DO;                                                                22010021
       CALL R100_ERROR (ADDR (RETURN_AREA_BB.RETURN_SQL),               22020021
                              'DB2',                                    22030021
                              '#033');                                  22040021
     END;                                                               22050021
 END;                                                                   22060021
                                 /************************************/ 22070021
                                 /* PROGRAM SUCC. ENDED              */ 22080021
                                 /************************************/ 22090021
0PARM_INT_AREA.MESSAGE_TYPE         = 'IS';                             22100021
 PARM_INT_AREA.MESSAGE_NUMBER       = '9999';                           22110021
 PARM_INT_AREA.MSG_VAR_CODES        = ' ';                              22120021
0CALL RCB0M1M (PTR_INT_AREA);                                           22130021
                                 /************************************/ 22140021
                                 /* CLOSE MESSAGE FILE               */ 22150021
                                 /************************************/ 22160021
 PARM_INT_AREA.MSG_REQUEST = 'C';                                       22170021
 CALL RCB0M1M (PTR_INT_AREA);                                           22180021
                                                                        22190021
 END R099_TERM;                                                         22200021
1/********************************************************************/ 22210021
 /*                                                                  */ 22220021
 /* MODULE NAME      : R100_ERROR                                    */ 22230021
 /*                                                                  */ 22240021
 /* DESCRIPTION      : CALLS THE COMMON ERROR ROUTINE AFTER FILLING  */ 22250021
 /*                    THE INPUT VARIABLES                           */ 22260021
 /*                                                                  */ 22270021
 /********************************************************************/ 22280021
0 R100_ERROR: PROC (PTR_ERROR,                                          22290021
                            ERR_TYPE,                                   22300021
                            CALL_ID);                                   22310021
0DCL PTR_ERROR    PTR;                                                  22320021
 DCL ERR_TYPE     CHAR(8);                                              22330021
 DCL CALL_ID      CHAR(4);                                              22340021
0PARM_INT_AREA.PTR_ERROR         = PTR_ERROR;                           22350021
 PARM_INT_AREA.ERR_TYPE          = ERR_TYPE;                            22360021
 PARM_INT_AREA.CALL_ID           = CALL_ID;                             22370021
0CALL RCB0E1M (PTR_INT_AREA);                                           22380021
0END R100_ERROR;                                                        22390021
1/*******************************************************************/  22400021
 /*DO NOT CHANGE THIS PART, IT IS MEANT FOR ABR                     */  22410021
 /*******************************************************************/  22420021
0 %INCLUDE DAIFPLH ;                     /* COMPILE DATE/TIME STAMP */  22430021
 $DAIMOD (RCBDRJM);                      /* MODULE TO BE COMPILED   */  22440021
0/*******************************************************************/  22450021
 /* END OF ABR BLOCK                                                */  22460021
 /*******************************************************************/  22470021
 END RCBDRJM;                                                           22480021