1/* RCBHK0M - HOUSEKEEP TABLES                                       */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M                                       */
 /*                                                                  */
 /* PROGRAM NAME     : RCBHK0P                                       */
 /*                                                                  */
 /* LANGUAGE         : PLISQL                                        */
 /*                                                                  */
 /* TYPE             : BATCH                                         */
 /*                                                                  */
 /* DESCRIPTION      : THE HOUSEKEEP OF ALL HARDWARE RELATED DATA    */
 /*                    IN THE CEDS TABLES. FOR THE RULES USED, SEE   */
 /*                    THE NOTES.                                    */
 /*                                                                  */
 /* INPUT            : - DB2   : RCBT0010_CUSTOMER                   */
 /*                              RCBT0020_EMPLOYEE                   */
 /*                              RCBT0030_CONTRACT                   */
 /*                              RCBT0035_CUST_CTR                   */
 /*                              RCBT0040_OU                         */
 /*                              RCBT0450_HW_PR                      */
 /*                              RCBT0060_SW_PR                      */
 /*                              RCBT0070_HW_PO                      */
 /*                              RCBT0075_SE_PO                      */
 /*                              RCBT0080_SW_PO                      */
 /*                              RCBT0100_MES_ORDER                  */
 /*                              RCBT0110_HW_STATUS                  */
 /*                              RCBT0125_DMMY_REAL          RB01320 */
 /*                              RCBT0140_OU_EMP                     */
 /*                              RCBT0150_CUST_ADDR                  */
 /*                              RCBT0160_EMPL_ADDR                  */
 /*                              RCBT0170_OU_HW                      */
 /*                              RCBT0180_OU_SW                      */
 /*                              RCBT0190_HW_CUST                    */
 /*                              RCBT0200_SW_CUST                    */
 /*                              RCBT0210_ADD_SERV                   */
 /*                              RCBT0220_SUPPL_CTR                  */
 /*                              RCBT0240_SERV_CTR                   */
 /*                              RCBT0250_MES_PR                     */
 /*                              RCBT0260_HW_IN_ORD                  */
 /*                              RCBT0270_SW_IN_ORD                  */
 /*                              RCBT0280_ADDR_LINE                  */
 /*                              RCBT0290_ADDR_LINE                  */
 /*                              RCBT0300_HW_REAL                    */
 /*                              RCBT0310_FEATURES                   */
 /*                              RCBT0320_SW_ON_HW                   */
 /*                              RCBT0330_MES_PO                     */
 /*                              RCBT0340_HW_ADDR                    */
 /*                              RCBT0350_CUST_MOD                   */
 /*                              RCBT0360_EMPL_MOD                   */
 /*                              RCBT0370_OU_MOD                     */
 /*                              RCBT0380_HW_PR_MOD                  */
 /*                              RCBT0400_PO_MOD1                    */
 /*                              RCBT0420_PO_MOD2                    */
 /*                              RCBT0540_MSG_ISSUE                  */
 /*                              RCBT0560_XACTION                    */
 /*                  : - FILE  : RCBOWNER                   PTM1311  */
 /*                                                                  */
 /* OUTPUT           : - FILE  : RCB0M10                             */
 /*                                                                  */
 /* EXTERNAL MODULES :  RCB0E1M  COMMON ERROR ROUTINE                */
 /*                     RCB0M1M  COMMON MSG ROUTINE                  */
 /*                     RCB0T1M  RETREIVE SYSTEM DATE                */
 /*                     RCB004M  COMMON DATE CALCULATION ROUTINE     */
 /*                     RCB019M  RETRIEVE RCB000 COUNTRY NUMBERS     */
 /*                     RCB020M  RETRIEVE RCB001 RUNDATE             */
 /*                     RCBF50M  CREATE PARAMETER                    */
 /*                     RCBG50M  UPDATE PARAMETER                    */
 /*                     RCBI50M  RETRIEVE PARAMETER                  */
 /*                     QCH0BCM  CHIS LAM                    PTM1057 */
 /*                                                                  */
 /* MESSAGES         : 0002,0005,0006,0012,0112,0176,9998,9999,I050  */
 /*                                                                  */
 /* DEPENDENCIES     : NONE                                          */
 /*                                                                  */
 /* FREQUENCY        : USER DEPENDENT                                */
 /*                                                                  */
 /* NOTE: 1) A PREREQUISITE FOR THE HOUSEKEEP PROGRAM IS THE         */
 /*          INTEGRITY OF THE TABLES, SO:                            */
 /*          - IF A RECORD IS NOT EFFECTIVE ANYMORE, ITS CHILDREN    */
 /*            ALSO ARE NOT EFFECTIVE ANYMORE                        */
 /*          - IF A RECORD IS NOT EFFECTIVE ANYMORE, IT CAN NOT BE   */
 /*            POINTED TO BY ANY EFFECTIVE RECORD, USING A FOREIGN   */
 /*            KEY                                                   */
 /*       2) A RECORD WILL BE HOUSEKEPT IF ITS NOT EFFECTIVE ANYMORE */
 /*          OR NONE OF ITS CHILDREN ARE, EXCEPT FOR:                */
 /*          - RCBV0040_OU       : MUST BE EXPLICITELY CLOSED, BUT   */
 /*                                ONLY IF NO EFFECTIVE RECORDS IN   */
 /*                                - RCBV0051_PI_HW_PR               */
 /*          - RCBV0070_HW_PO    : ONLY IF NO EFFECTIVE RECORDS IN   */
 /*                                - RCBV0250_MES_PR                 */
 /*                                - RCBV0260_HW_IN_ORD              */
 /*                                - RCBV0300_HW_REAL                */
 /*                                - RCBV0330_MES_PO                 */
 /*          - RCBV0080_SW_PO    : MUST BE EXPLICITELY CLOSED        */
 /*          - RCBV0220_SUPPL_CTR: ONLY IF NOT LAST WARRANTY PERIOD  */
 /*                                FOR A HW PRODUCT                  */
 /*       3) SOME TABLES DO NOT CONTAIN EFFECTIVE PERIOD DATES,      */
 /*          SO THEY WILL BE DELETED USING SOME OTHER RULE:          */
 /*          - RCBV0030_CONTRACT : NO EFFECTIVE RECORDS IN TABLES    */
 /*                                - RCBV0210_ADD_SERV               */
 /*                                - RCBV0240_SERV_CTR               */
 /*          - RCBV0035_CUST_CTR : NO EFFECTIVE RECORDS IN TABLES    */
 /*                                - RCBV0210_ADD_SERV               */
 /*                                - RCBV0240_SERV_CTR               */
 /*          - RCBV0050_HW_PR    : NO EFFECTIVE RECORDS IN TABLES    */
 /*                                - RCBV0190_HW_CUST                */
 /*                                - RCBV0260_HW_IN_ORD              */
 /*                                - RCBV0270_SW_IN_ORD (SEE NOTE)   */
 /*                                - RCBV0320_SW_ON_HW  (SEE NOTE)   */
 /*          - RCBV0075_SE_PO    : NO EFFECTIVE RECORDS IN TABLES    */
 /*                                - RCBV0210_ADD_SERV               */
 /*                                                                  */
 /*          * NOTE: THESE TABLES ARE MENTIONED BECAUSE OF THE       */
 /*                  FACT THAT THEY CAN BE LINKED TO A 'DUMMY' HW_PR */
 /*                  WHICH DOES NOT HAVE LINKS WITH RCBV0190 NOR     */
 /*                  WITH RCBV0260.                                  */
 /*                                                                  */
 /*          - RCBV0060_SW_PR    : NO EFFECTIVE RECORDS IN TABLES    */
 /*                                - RCBV0200_SW_CUST                */
 /*          - RCBV0100_MES_ORDER: NO EFFECTIVE RECORDS IN TABLES    */
 /*                                - RCBV0250_MES_PR                 */
 /*                                - RCBV0330_MES_PO                 */
 /*          - RCBV0280_ADDR_LINE: CASCADE --> RCBV0150_CUST_ADDR    */
 /*          - RCBV0290_ADDR_LINE: CASCADE --> RCBV0160_EMPL_ADDR    */
 /*       4) SOME RECORDS WILL ALSO BE DELETED IF IN SOME TABLES NO  */
 /*          CORRESPONDING EFFECTIVE RECORDS EXIST ANYMORE:          */
 /*          - RCBV0010_CUSTOMER: RCBV0190_HW_CUST                   */
 /*                               RCBV0200_SW_CUST                   */
 /*                               RCBV0210_ADD_SERV                  */
 /*                               RCBV0260_HW_IN_ORD                 */
 /*                               RCBV0270_SW_IN_ORD                 */
 /*                               RCBV0340_HW_ADDR                   */
 /*          - RCBV0020_EMPLOYEE: RCBV0140_OU_EMP                    */
 /*       5) TABLE RCBV0080_SW_PO MUST BE HOUSEKEPT AFTER TABLE      */
 /*          RCBV0060_SW_PR                                          */
 /*          - NO DELETE OF SW PRODUCT OFFERING FROM TABLE           */
 /*            RCBV0080_SW_PO IF PID (PRODUCT_TYPE,MODEL_NUMBER)     */
 /*            IS STILL PRESENT IN TABLE RCBV0060_SW_PR OR           */
 /*            IN TABLE RCBV0270_SW_IN_ORD                           */
 /*       6) THE RECORD IN TABLE T125(LONG-SERIAL TABLE) SHOULD      */
 /*          BE KEPT AS LONG AS THE RECORD IS AVAILABLE             */
 /*          IN TABLE T50 FOR BAU LONG SERIAL NUMBER OR IN TABLE     */
 /*          T51 FOR PI LONG SERIAL NUMBER.                          */
 /*                                                                  */
 /*  MAINTENANCE LOG :                                               */
 /*  ---------------                                                 */
 /*                                                                  */
 /*  DATE     | WORK-ITEMNO. | DESCRIPTION                           */
 /*  --------------------------------------------------------------  */
 /*27-01-1992 | ----         | CEDS INITIAL DEVELOPMENT              */
 /*10-07-1992 | ----         | PERFORMANCE IMPROVEMENT               */
 /*01-07-1993 | CEDS REL. 2.0| CEDS REL 2.0 DEVELOPMENT              */
 /*16-08-1993 | PTM 0403     | PERFORMANCE IMPROVEMENT               */
 /*20-04-1994 | PTM 0453     | HOUSEKEEP CROSSES THE COUNTRY RESTRIC */
 /*           |              | TIONS, DELETES FOR OTHER COUNTRIES    */
 /*07-07-1994 | RA01104      | COUNTRY_NUMBER IN HW_KEY ADDED        */
 /*15-09-1994 | PTM0541      | HOUSEKEEP T80 NOT ALLOWED IF THERE    */
 /*           |              | ARE CORRESPONDING ENTRIES IN T60      */
 /*18-02-1995 |              | HOUSEKEEP T35 AND T75                 */
 /*19-04-1996 | PTM0908      | CKPT IN HOUSEKEEP OF VARIOUS TABLES   */
 /*           |              | CHANGED LOGIC OF T10 AND T240         */
 /*           |              | REMOVED HOUSEKEEP OF T540             */
 /*           |              | IMPROVED PERFORMANCE FOR T50, T220    */
 /*           |              | AND T240                              */
 /*           |              | CORRECTED ERROR IN T10 PROCESSING     */
 /*06-05-1996 | RC01158      | HOUSEKEEP T40 ONLY WHEN NO EFFECTIVE  */
 /*           |              | ROWS FOR THAT OU_CODE IN RCBV0051.    */
 /*06-06-1996 | PTM0923      | REMOVED IN T300 DELETE STATEMENT      */
 /*26-11-1996 | PCR0016      | DELETE 'CREATED BY CEDS' AND          */
 /*           |              | DELETE 'CREATED BY P{RIME} I{NPUT}    */
 /*           |              | INCLUDE DEPENDANCY BETWEEN RCBV0051   */
 /*           |              | AND RCBV0070                          */
 /*11-04-1997 | PTM1036      | CORRECTED PROLOG                      */
 /*11-06-1997 | PTM1053      | MERGE SYSTEM-PARAMETERS               */
 /*07-07-1997 | PTM1064      | -IMPLEMENTATION OF PCR0016 CAUSED A   */
 /*           |              | PROBLEM IN HOUSEKEEP OF TABLE 70.     */
 /*           |              | -ADDED "WITH HOLD" OPTION TO ALL      */
 /*           |              | CURSORS.                              */
 /*22-08-1997 | PTM1057      | SKIP DELETE OF CHIS-ENTRIES IN T035   */
 /*1999-07-06 | RC01219      | DORO                                  */
 /*1999-07-28 | RC01219      | DORO                                  */
 /*2002-06-27 | PTM1311      | TABLE LOCK AND COUNTRY PROCESS        */
 /*           |              | IMPROVEMENTS                          */
 /* 2004-08-18| RB01242      | SEQUENCE NUMBER FROM 7 TO 28 CHAR.    */
 /* 2012-02-01| RB01320      | CEDS 3.3 A17 RELEASE                  */
 /* 2012-11-13| RC01325      | T70 AND T400 BALNK MODEL DELETION IF  */
 /*           |              | NO INVENTORY FOUND FOR THAT PRODUCT   */
 /*           |              | TYPE IN TOTAL INSTALLATION            */
 /* 2012-12-24| CEDS00000620 | CONSIDERING THE COUNTRY NUMBER TO     */
 /*           |              | REMOVE THE ENTRIES IN T70 AND T400    */
 /* 2014-07-11| RB01341      | CEDS 3.3 A22 RELEASE - ISRAEL COUNTRY */
 /*           |              | CONVERSION                            */
 /* 2014-09-16| CEDS00000699 | REMOVED ALL DISPLAY STATEMENTS WHICH  */
 /*           |              | IS FILLING UP THE SPOOL SPACE         */
 /* 2014-12-12| CEDS00000716 | T10-2058 PERFORMANCE ISSUE            */
 /* 2015-03-10| CEDS00000736 | T10-2128 T400 IS DELETED EVEN IF      */
 /*           |              | ACTIVE WARRANTY IS PRESENT            */
 /* 2015-07-21| CEDS00000762 | T081594 T125 HOUSEKEEPING WILL BE     */
 /*           |              | AFTER T050                            */
 /* 2015-12-16| RC01371      | PCR 582: IMPROVE DELETION HANDLING    */
 /*           |              | FOR UM0X FLOWS                        */
 /* 2017-08-11| S1277113     | FIXED HOUSEKEEPING RULES TO           */
 /*           |              | USE RETENTION PERIOD FOR T010         */
 /* 2017-12-14| S1235633     | NEW PARAMETER TO HANDLE CHIS LAM      */
 /* 2018-01-05| S1370532     | PERFORMANCE IMPROVEMENT               */
 /* 2018-05-25| S1540038     | CODE CHANGES TO AVOID -532 SQL CODE   */
 /*           |              | FOR RCBT0010_CUSTOMER                 */
 /********************************************************************/
1RCBHK0M: PROC    (PTR_PCB_IO)
          OPTIONS (MAIN)
          REORDER;
0DEFAULT RANGE (*)        STATIC;
1/********************************************************************/
 /*  PARAMETERS                                                      */
 /********************************************************************/
0DCL PTR_PCB_IO              PTR;
1/********************************************************************/
 /* EXTERNAL ENTRIES                                                 */
 /********************************************************************/
0DCL PLITDLI   ENTRY  EXTERNAL;
0DCL RCB0E1M   ENTRY  EXTERNAL;          /* COMMON ERROR ROUTINE     */
 DCL RCB0M1M   ENTRY  EXTERNAL;          /* COMMON MSG ROUTINE       */
 DCL RCB0T1M   ENTRY  EXTERNAL;          /* RETREIVE SYSTEM DATE     */
 DCL RCB004M   ENTRY  EXTERNAL;          /* COMMON DATE ROUTINE      */
 DCL RCB019M   ENTRY  EXTERNAL;          /* RETRIEVE COUNTRIES       */
 DCL RCB020M   ENTRY  EXTERNAL;          /* RETRIEVE RUNDATES        */
 DCL RCBF50M   ENTRY  EXTERNAL;          /* CREATE PARAMETER         */
 DCL RCBG50M   ENTRY  EXTERNAL;          /* UPDATE PARAMETER         */
 DCL RCBI50M   ENTRY  EXTERNAL;          /* RETRIEVE PARAMETER       */
 DCL QCH0BCM   ENTRY  EXTERNAL;          /* CHIS LAM         PTM1057 */
0/********************************************************************/
 /* EXTERNAL PARAMETER INTERFACES                                    */
 /********************************************************************/
0DCL PTR_INT_AREA      PTR;
 DCL PTR_RETURN_AREA   PTR;
 DCL PTR_DATE_AREA     PTR;
 DCL PTR_COUNTRY_AREA  PTR;
 DCL PTR_RUN_DATE_AREA PTR;
0DCL 1 PARM_INT_AREA,                          /* INTERFACE AREA     */
       %INCLUDE (RCBZ01S);;
0DCL 1 RETURN_AREA,                            /* RETURN AREA        */
       %INCLUDE (RCBZ02S);;
0DCL 1 DATE_AREA,                              /* DATE AREA          */
       %INCLUDE (RCBZ03S);;
                                                      /* SOC PTM1311 */
0DCL 1 COUNTRY_AREA1,                          /* COUNTRY AREA       */
       %INCLUDE (RCBZ26S);;
0DCL 1 COUNTRY_AREA,                           /* COUNTRY AREA       */
 /* RCBZ26S - COPIED, CHANGED ARRAY DIMENSION TO 128                 */
      5 CTRY_SET_ID        CHAR (02),       /* CTRY SET IDENTIFIER    */
      5 PROC_ID            CHAR (04),       /* PROCESS IDENTIFIER     */
      5 COUNT_CTRY         FIXED DEC (3,0), /* NUMBER OF COUNTRIES    */
      5 CTRY_ARRAY (128),
        7 CTRYNO           CHAR (03),       /* COUNTRY NUMBER         */
        7 PGR_TYPE         CHAR (03)        /* PROGRAM RUN TYPE       */
       ;
                                                      /* EOC PTM1311 */
0DCL 1 RUN_DATE_AREA,                          /* RUN DATE AREA      */
       %INCLUDE (RCBZ28S);;
                                                    /* START PTM1057 */
1/********************************************************************/
 /*  PROGRAM CONTROL PARAMETERS CHIS-INTERFACE                       */
 /********************************************************************/
 DCL 1 SEARCH_ARG,
       %INCLUDE QCH0BCSI;;
 DCL 1 QCH0BCSO,
       %INCLUDE (QCH0BCSO);;
 DCL  SEARCH_PTR             PTR;           /* SEARCH POINTER        */
 DCL  DATA_PTR               PTR;           /* DATA POINTER          */
 DCL  SQLCA_PTR              PTR;           /* SQLCA POINTER         */
 DCL  SELECT_QCH0BCSO_KEY    CHAR(23);      /* SORT KEY CHIS         */
                                                      /* END PTM1057 */
                                                      /* SOC PTM1311 */
0/********************************************************************/
 /* FILE DECLARATIONS                                                */
 /********************************************************************/
 DCL RCBOWNER       FILE             /* INPUT CARD FOR OWNER         */
                    RECORD
                    INPUT;
0/********************************************************************/
 /*  RECORD STRUCTURES FOR INPUT FILES                               */
 /********************************************************************/
 DCL 1 RCBOWNER_REC,
       %INCLUDE (RCBZ34S);;
                                                      /* EOC PTM1311 */
1/********************************************************************/
 /*  IMS CONSTANTS                                                   */
 /********************************************************************/
0DCL 1 IMS_CONSTANTS,
      %INCLUDE (RCBZ04S);;
0/********************************************************************/
 /*  IMS CHECKPOINT/RESTART/ROLLBACK FIELDS                          */
 /********************************************************************/
0DCL CHKP_CNT_STEPS      FIXED BIN (31);
 DCL CHKP_LEN_IO         FIXED BIN (31) INIT (12);
 DCL CHKP_LEN_AREA       FIXED BIN (31);
0DCL 1 CHKP_ID,
      %INCLUDE (RCBZ11S);;         /* SOURCE INFO FOR CHKP_ID        */
0DCL 1 CHKP_XRST,
      %INCLUDE (RCBZ12S);;         /* SOURCE INFO FOR CHKP_XRST      */
 DCL 1 CHKP_AREA,
      %INCLUDE (RCBZ14S);,         /* SOURCE INFO FOR CHKP_AREA      */
      2 KEY_VALUES,
      %INCLUDE (RCBHK0SC);;        /* CHKP_RESTART INFO              */
0/********************************************************************/
 /* IMS PCB STRUCTURES                                               */
 /********************************************************************/
0DCL 1 PCB_IO         BASED (PTR_PCB_IO),
      %INCLUDE (RCBZ16S);;                /* SOURCE INFO FOR IO PCB  */
1/********************************************************************/
 /*  DB2 TABLE STRUCTURES                                            */
 /********************************************************************/
0DCL 1 TB_RCBV500,
      %INCLUDE (RCB500S);;
 DCL 1 TB_RCBV500_I,
      %INCLUDE (RCB500SI);;
0DCL 1 TB_RCB001      BASED (ADDR(TB_RCBV500)),
      %INCLUDE (RCBP01S);;
0DCL 1 TB_RCB012_CTRY BASED (ADDR(TB_RCBV500)),       /* PTM 908     */
      %INCLUDE (RCBP12S);;
0DCL 1 TB_RCB099_CTRY BASED (ADDR(TB_RCBV500)),
      %INCLUDE (RCBP99S);;
0DCL 1 TB_RCB040_CTRY BASED (ADDR(TB_RCBV500)),
      %INCLUDE (RCBP40S);;
0DCL 1 TB_RCB161_CTRY BASED (ADDR(TB_RCBV500)),      /* SOC S1235633 */
      %INCLUDE (RCBP161S);;                          /* EOC S1235633 */
1/********************************************************************/
 /*  DB2 SELECT STRUCTURES                                           */
 /********************************************************************/
0DCL 1 SELECT_RCBVHK3R,
      3 PRODUCT_TYPE    CHAR(4),                      /* SOC PTM 908 */
      3 ORIGIN          CHAR(2),
      3 SEQUENCE_NUMBER CHAR(28),                         /* RB01242 */
      3 COUNTRY_NUMBER  CHAR(3),
      3 END_DATE        CHAR(10);                     /* EOC PTM 908 */
0DCL 1 SELECT_RCBVHK4R,
      3 PRODUCT_TYPE    CHAR(4),                      /* SOC PTM 908 */
      3 ORIGIN          CHAR(2),
      3 SEQUENCE_NUMBER CHAR(28),                         /* RB01242 */
      3 COUNTRY_NUMBER  CHAR(3);                      /* EOC PTM 908 */
0DCL 1 SELECT_RCBVHK5R,
      3 EMPLOYEE_NUMBER CHAR(7);
0DCL 1 SELECT_RCBVHK6R,
      3 PRODUCT_TYPE    CHAR(4),
      3 ORIGIN          CHAR(2),
      3 SEQUENCE_NUMBER CHAR(28),                         /* RB01242 */
      3 COUNTRY_NUMBER  CHAR(3);
0DCL 1 SELECT_RCBVHK7R,
      3 PRODUCT_TYPE    CHAR(4),
      3 MODEL_NUMBER    CHAR(3),
      3 ORIGIN          CHAR(2),
      3 SEQUENCE_NUMBER CHAR(28);                         /* RB01242 */
0DCL 1 SELECT_RCBVHK9R,
      3 MES_ORDER_NUMBER CHAR(6),
      3 NAME_CODE        CHAR(1);
0DCL 1 SELECT_RCBVHKAR,
      3 CONTRACT_NUMBER CHAR(15);
0DCL 1 SELECT_RCBVHKBR,
      3 CONTRACT_NUMBER CHAR(15);
0DCL 1 SELECT_RCBVHKCR,
      3 EMPLOYEE_NUMBER CHAR(7);
0DCL 1 SELECT_RCBVHKER,
      3 PRODUCT_TYPE    CHAR(4),
      3 MODEL_NUMBER    CHAR(3),
      3 ORIGIN          CHAR(2),
      3 SEQUENCE_NUMBER CHAR(28);                         /* RB01242 */
0DCL 1 SELECT_RCBVHKGR,
      3 MES_ORDER_NUMBER CHAR(6),
      3 NAME_CODE        CHAR(1);
0DCL 1 SELECT_RCBVHKHR,
      3 CUSTOMER_NUMBER  CHAR(8),
      3 CUSTOMER_NAME    CHAR(30),                    /* PTM 908     */
      3 END_DATE  CHAR(10);
0DCL 1 SELECT_RCBVHKIR,
      3 CUSTOMER_NUMBER  CHAR(8);
0DCL 1 SELECT_RCBVHKJR,
      3 PRODUCT_TYPE    CHAR(4),
      3 MODEL_NUMBER    CHAR(3),
      3 PRODUCT_NAME    CHAR(30),                           /*PCR0016*/
      3 END_DATE        CHAR(10);
0DCL 1 SELECT_RCBVHKKR,
      3 PRODUCT_TYPE    CHAR(4),
      3 MODEL_NUMBER    CHAR(3);
                                                    /* START PTM0541 */
0DCL 1 SELECT_RCBVHKLR,
      3 PRODUCT_TYPE    CHAR(4),
      3 MODEL_NUMBER    CHAR(3),
      3 PRODUCT_NAME    CHAR(30),                           /*PCR0016*/
      3 END_DATE        CHAR(10);

0DCL 1 SELECT_RCBVHKMR,
      3 PRODUCT_TYPE    CHAR(4),
      3 MODEL_NUMBER    CHAR(3);
                                                    /* END   PTM0541 */

0DCL 1 SELECT_RCBVHKNR,           /*** RCBT0035_CUST_CTR             */
      3 CONTRACT_NUMBER CHAR(15),
      3 CUSTOMER_NUMBER CHAR(8),
      3 AS_CONTRACT_IND CHAR(1);
 DCL   SELECT_RCBVHKNR_KEY CHAR(23) BASED (ADDR(SELECT_RCBVHKNR));

0DCL 1 SELECT_RCBVHKOR,           /*** RCBT0075_SE_PO                */
      3 SERVICE_NUMBER  CHAR(10);

0DCL 1 SELECT_RCBVHKPR,           /*** RCBT0210_ADD_SERV             */
      3 SERVICE_NUMBER CHAR(15),
      3 GROUP_ID       CHAR(8);

0DCL 1 SELECT_RCBVHKQR,           /*** RCBT0240_SERV_CTR             */
      3 CONTRACT_NUMBER CHAR(15);

0DCL 1 SELECT_RCBVHKQS,           /*** RCBT0210_ADD_SERV             */
      3 CONTRACT_NUMBER CHAR(15),
      3 CUSTOMER_NUMBER CHAR(8);
 DCL   SELECT_RCBVHKQS_KEY CHAR(23) BASED (ADDR(SELECT_RCBVHKQS));

0DCL 1 SELECT_RCBVHKQT,           /*** RCBT0240_SERV_CTR             */
      3 CONTRACT_NUMBER CHAR(15);

0DCL 1 SELECT_RCBVHKRR,           /*** RCBT0210_ADD_SERV             */
      3 SERVICE_NUMBER CHAR(15);
                                                      /* SOC PTM1311 */
0DCL 1 SELECT_RCBVHKSR,           /*** RCBT0070_HW_PO                */
      3 COUNTRY_NUMBER CHAR(03);
                                                      /* EOC PTM1311 */
                                                      /* SOC RB01320 */
0DCL 1 SELECT_RCBVHKTR,           /*** RCBT0125_DMMY_REAL            */
      3 COUNTRY_NUMBER      CHAR(03),
      3 PRODUCT_TYPE        CHAR(04),
      3 REAL_SERIAL_NUMBER  CHAR(30),
      3 DUMMY_ORIGIN        CHAR(02),
      3 DUMMY_SEQUENCE_NUM  CHAR(07);
                                                      /* EOC RB01320 */
                                                      /* SOC RC01325 */
0DCL 1 SELECT_RCBVHKUR,
      3 PRODUCT_TYPE    CHAR(4),
      3 MODEL_NUMBER    CHAR(3),
      3 END_DATE        CHAR(10);

                                                 /* SOC CEDS00000736 */
0/*DCL 1 SELECT_RCBVHKVR,
      3 PRODUCT_TYPE    CHAR(4);

0DCL 1 SELECT_RCBVHKWR,
      3 PRODUCT_TYPE    CHAR(4);*/
                                                      /* EOC RC01325 */
 DCL 1 SELECT_RECORD,
      3 SQL_CHECK       FIXED BIN (31);
                                                 /* EOC CEDS00000736 */
1/********************************************************************/
 /*  PROGRAM CONTROL PARAMETERS                                      */
 /********************************************************************/
0DCL 1 RCB001,
      %INCLUDE (RCBP01S);;
0DCL 1 RCB012,                                        /* PTM 908     */
      %INCLUDE (RCBP12S);;
0DCL 1 RCB040,
      %INCLUDE (RCBP40S);;
0DCL 1 RCB099,
      %INCLUDE (RCBP99S);;
0DCL 1 RCB161,                                       /* SOC S1235633 */
      %INCLUDE (RCBP161S);;                          /* EOC S1235633 */
0/********************************************************************/
 /*  BIT SWITCHES                                                    */
 /********************************************************************/
0DCL TRUE                             BIT (1) INIT ('1'B);
0DCL FALSE                            BIT (1) INIT ('0'B);
0DCL 1 SWITCHES,
       3 SWITCH_END_OF_CURS_RCBVHK3R  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHK4R  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHK5R  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHK6R  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHK7R  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHK9R  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKAR  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKBR  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKCR  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKER  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKGR  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKHR  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKIR  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKJR  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKKR  BIT (1) INIT ('0'B),
       3 SWITCH_END_OF_CURS_RCBVHKLR  BIT (1) INIT ('0'B),/* PTM0541 */
       3 SWITCH_END_OF_CURS_RCBVHKMR  BIT (1) INIT ('0'B),/* PTM0541 */
       3 SWITCH_END_OF_CURS_RCBVHKNR  BIT (1) INIT ('0'B),/*** T0035 */
       3 SWITCH_END_OF_CURS_RCBVHKOR  BIT (1) INIT ('0'B),/*** T0075 */
       3 SWITCH_END_OF_CURS_RCBVHKPR  BIT (1) INIT ('0'B),/*** T0210 */
       3 SWITCH_END_OF_CURS_RCBVHKQR  BIT (1) INIT ('0'B),/*** T0240 */
       3 SWITCH_END_OF_CURS_RCBVHKQS  BIT (1) INIT ('0'B),/*** T0210 */
       3 SWITCH_END_OF_CURS_RCBVHKQT  BIT (1) INIT ('0'B),/*** T0240 */
       3 SWITCH_END_OF_CURS_RCBVHKRR  BIT (1) INIT ('0'B),/*** T0210 */
       3 SWITCH_END_OF_CURS_RCBVHKSR  BIT (1) INIT ('0'B),/* PTM1311 */
       3 SWITCH_END_OF_CURS_RCBVHKTR  BIT (1) INIT ('0'B),/* RB01320 */
       3 SWITCH_END_OF_CURS_RCBVHKUR  BIT (1) INIT ('0'B),/* RC01325 */
                                                 /* SOC CEDS00000736 */
   /*3 SWITCH_END_OF_CURS_RCBVHKVR  BIT (1) INIT ('0'B),*//* RC01325 */
   /*3 SWITCH_END_OF_CURS_RCBVHKWR  BIT (1) INIT ('0'B),*//* RC01325 */
                                                 /* EOC CEDS00000736 */
       3 SWITCH_LOOP                  BIT (1) INIT ('0'B),
       3 SWITCH_RCB040_FOUND          BIT (1) INIT ('0'B),
       3 SWITCH_RCB099_FOUND          BIT (1) INIT ('0'B),
       3 SWITCH_RCB210_FOUND          BIT (1) INIT ('0'B),
                                                      /* SOC PTM1311 */
       3 SWITCH_RCB240_FOUND          BIT (1) INIT ('0'B),
       3 SWITCH_EOF_RCBOWNER          BIT (1) INIT ('0'B);
                                                      /* EOC PTM1311 */
0/********************************************************************/
 /*  POINTERS                                                        */
 /********************************************************************/
 DCL PTR_RCBV500                  PTR;
 DCL PTR_RCBV500I                 PTR;
0/********************************************************************/
 /*  ALL OTHER USED TEMPORARY FIELDS                                 */
 /********************************************************************/
0DCL 1 WORK_FIELDS,
       3 WRK_INDNULL              FIXED BIN (15),
       3 WRK_COUNT                FIXED BIN (31),
       3 WRK_CTRY_IDX             FIXED BIN (31),
       3 WRK_NR_OF_DELETIONS      FIXED BIN (31),
       3 WRK_SELECT               CHAR (04),
       3 WRK_PIC_10               PIC 'Z,ZZZ,ZZZ,ZZ9',
       3 WRK_CHKP_CNT_STEPS       PIC '(9)9',          /* PTM 908    */
       3 WRK_CHKP_LIMIT           PIC '(9)9',          /* PTM 908    */
       3 WRK_COUNTRY_NUMBER       CHAR (03),
       3 WRK_CTRY_HELP   (2)      CHAR (10),
       3 WRK_CTRY_DATES  (8)      CHAR (10),
       3 WRK_CTRY_SELECT (8)      CHAR (01),
       3 WRK_GROUP_DATE           CHAR (10),
       3 WRK_TIMESTAMP            CHAR (26),
       3 WRK_PGR_TYPE             CHAR (03),
       3 WRK_HKP_STAGE            CHAR (04),
       3 WRK_PGM_NAME             CHAR (08) INIT('RCBHK0P'),
       3 WRK_MOD_NAME             CHAR (08) INIT('RCBHK0M'),
       3 WRK_RUN_DATE             CHAR (10),
       3 WRK_SYSTEM_TYPE          CHAR (01) INIT('I'),
       3 WRK_PARMDATES            CHAR (254) VARYING,
       3 WRK_STATEMENT            CHAR (512) VARYING,     /* PTM1311 */
       3 WRK_DUMMY1               CHAR (08),
     /*3 WRK_DUMMY2               CHAR (15);*/   /* SOC CEDS00000736 */
       3 WRK_DUMMY2               CHAR (15),
                                                     /* SOC S1277113 */
 /*    3 WRK_PROD_TYPE            CHAR(04);      /* EOC CEDS00000736 */
       3 WRK_PROD_TYPE            CHAR(04),
 /*    3 WRK_MODEL_NBR            CHAR(03); */
                                                     /* EOC S1277113 */
                                                     /* SOC S1235633 */
       3 WRK_MODEL_NBR            CHAR(03),
       3 WRK_CHIS_FOUND           CHAR(01);
                                                     /* EOC S1235633 */

1/********************************************************************/
 /*  BUILTIN FUNCTIONS                                               */
 /********************************************************************/
0DCL (ADDR,
      ALL,
      HIGH,
      CSTG,
      NULL,
      STORAGE,
      STRING,
      SUBSTR)   BUILTIN;
1/********************************************************************/
 /* ON ERROR CONDITIONS                                              */
 /********************************************************************/
0%INCLUDE (RCB0E0M);
  END;
                                                      /* SOC PTM1311 */
0/********************************************************************/
 /* ON ENDFILE CONDITIONS                                            */
 /********************************************************************/
 ON ENDFILE (RCBOWNER)               /*   INPUT CARD                 */
    BEGIN;
     SWITCH_EOF_RCBOWNER = TRUE;
    END;
                                                      /* EOC PTM1311 */
1/********************************************************************/
 /* DB2/SQL SQLCA                                                    */
 /********************************************************************/
0 EXEC SQL
    INCLUDE SQLCA
    ;
0/********************************************************************/
 /* DB2/SQL CURSORS                                                  */
 /********************************************************************/
0                                        /* CURSOR RCBVHK3R          */
                                         /* PTM 908: CHANGED FIELDS  */
 EXEC SQL
   DECLARE CURS_RCBVHK3R CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT PRODUCT_TYPE,
          ORIGIN,
          SEQUENCE_NUMBER,
          COUNTRY_NUMBER,
          END_DATE
   FROM   RCBV0220_SUPPL_CTR
   WHERE  COUNTRY_NUMBER    = :WRK_COUNTRY_NUMBER
   AND    END_DATE          < :WRK_GROUP_DATE
   AND    TYPE_OF_WARRANTY  IS NOT NULL
   ;
0                                        /* CURSOR RCBVHK4R          */
                                         /* PTM 908: CHANGED FIELDS  */
 EXEC SQL
   DECLARE CURS_RCBVHK4R CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT PRODUCT_TYPE,
          ORIGIN,
          SEQUENCE_NUMBER,
          COUNTRY_NUMBER
   FROM   RCBV0240_SERV_CTR
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE  < :WRK_GROUP_DATE
   ;
0                                        /* CURSOR RCBVHK5R          */
 EXEC SQL
   DECLARE CURS_RCBVHK5R CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT EMPLOYEE_NUMBER
   FROM   RCBV0020_EMPLOYEE
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE       >= :WRK_GROUP_DATE
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */
0                                        /* PTM  856: JOINED WITH    */
                                         /* CURS_RCBVHKDR            */
                                         /* CURSOR RCBVHK6R          */
 EXEC SQL
   DECLARE CURS_RCBVHK6R CURSOR WITH HOLD FOR
    SELECT  A.PRODUCT_TYPE,
            A.ORIGIN,
            A.SEQUENCE_NUMBER,
            A.COUNTRY_NUMBER
      FROM  RCBV0050_HW_PR A
     WHERE  A.COUNTRY_NUMBER   = :WRK_COUNTRY_NUMBER
       AND (A.PRODUCT_TYPE    ¬= '9998' AND               /* RB01242 */
            A.SEQUENCE_NUMBER ¬= '0000000                     ')
       AND NOT EXISTS
           (SELECT B.PRODUCT_TYPE,
                   B.ORIGIN,
                   B.SEQUENCE_NUMBER,
                   B.COUNTRY_NUMBER
              FROM   RCBV0190_HW_CUST B
             WHERE B.COUNTRY_NUMBER     = :WRK_COUNTRY_NUMBER
               AND A.PRODUCT_TYPE       = B.PRODUCT_TYPE
               AND A.ORIGIN             = B.ORIGIN
               AND A.SEQUENCE_NUMBER    = B.SEQUENCE_NUMBER
               AND A.COUNTRY_NUMBER     = B.COUNTRY_NUMBER
           )
       AND NOT EXISTS
           (SELECT C.PRODUCT_TYPE,
                   C.ORIGIN,
                   C.SEQUENCE_NUMBER,
                   C.COUNTRY_NUMBER
              FROM   RCBV0260_HW_IN_ORD C
             WHERE C.COUNTRY_NUMBER     = :WRK_COUNTRY_NUMBER
               AND C.ORIGIN             IS NOT NULL
               AND C.SEQUENCE_NUMBER    IS NOT NULL
               AND A.PRODUCT_TYPE       = C.PRODUCT_TYPE
               AND A.ORIGIN             = C.ORIGIN
               AND A.SEQUENCE_NUMBER    = C.SEQUENCE_NUMBER
               AND A.COUNTRY_NUMBER     = C.COUNTRY_NUMBER
           )
       AND NOT EXISTS
           (SELECT D.PRODUCT_TYPE_HW,
                   D.ORIGIN_HW,
                   D.SEQUENCE_NUMBER_HW,
                   D.COUNTRY_NUMBER
              FROM   RCBV0270_SW_IN_ORD D
             WHERE D.COUNTRY_NUMBER     = :WRK_COUNTRY_NUMBER
               AND D.PRODUCT_TYPE_HW    IS NOT NULL
               AND D.ORIGIN_HW          IS NOT NULL
               AND D.SEQUENCE_NUMBER_HW IS NOT NULL
               AND A.PRODUCT_TYPE       = D.PRODUCT_TYPE_HW
               AND A.ORIGIN             = D.ORIGIN_HW
               AND A.SEQUENCE_NUMBER    = D.SEQUENCE_NUMBER_HW
               AND A.COUNTRY_NUMBER     = D.COUNTRY_NUMBER
           )
       AND NOT EXISTS
           (SELECT E.PRODUCT_TYPE_HW,
                   E.ORIGIN_HW,
                   E.SEQUENCE_NUMBER_HW,
                   E.COUNTRY_NUMBER
              FROM   RCBV0320_SW_ON_HW E
             WHERE E.COUNTRY_NUMBER     = :WRK_COUNTRY_NUMBER
               AND E.PRODUCT_TYPE_HW    IS NOT NULL
               AND E.ORIGIN_HW          IS NOT NULL
               AND E.SEQUENCE_NUMBER_HW IS NOT NULL
               AND A.PRODUCT_TYPE       = E.PRODUCT_TYPE_HW
               AND A.ORIGIN             = E.ORIGIN_HW
               AND A.SEQUENCE_NUMBER    = E.SEQUENCE_NUMBER_HW
               AND A.COUNTRY_NUMBER     = E.COUNTRY_NUMBER
           )
     ORDER BY 1, 2, 3, 4
   FOR FETCH ONLY                                         /* RC01219 */
   ;
0                                        /* CURSOR RCBVHK7R          */
 EXEC SQL
   DECLARE CURS_RCBVHK7R CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT PRODUCT_TYPE, MODEL_NUMBER, ORIGIN, SEQUENCE_NUMBER
   FROM   RCBV0060_SW_PR
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   ORDER BY 1, 2, 3, 4
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHK9R          */
 EXEC SQL
   DECLARE CURS_RCBVHK9R CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT MES_ORDER_NUMBER, NAME_CODE
   FROM   RCBV0100_MES_ORDER
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   ORDER BY 1, 2
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKAR          */
 EXEC SQL
   DECLARE CURS_RCBVHKAR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT CONTRACT_NUMBER
   FROM   RCBV0030_CONTRACT
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */
0                                        /* CURSOR RCBVHKBR          */
 EXEC SQL
   DECLARE CURS_RCBVHKBR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT CONTRACT_NUMBER
   FROM RCBV0035_CUST_CTR
   WHERE COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   UNION
   SELECT CONTRACT_NUMBER
   FROM   RCBV0240_SERV_CTR
   WHERE  COUNTRY_NUMBER   =  :WRK_COUNTRY_NUMBER
   AND    CONTRACT_NUMBER IS NOT NULL
   UNION
   SELECT SUPPL_CTR_NUMBER
   FROM   RCBV0240_SERV_CTR
   WHERE  COUNTRY_NUMBER   =  :WRK_COUNTRY_NUMBER
   AND    SUPPL_CTR_NUMBER IS NOT NULL
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */
0                                        /* CURSOR RCBVHKOR          */
 EXEC SQL
   DECLARE CURS_RCBVHKOR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT  SERVICE_NUMBER
   FROM   RCBV0075_SE_PO
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */
0                                        /* CURSOR RCBVHKCR          */
 EXEC SQL
   DECLARE CURS_RCBVHKCR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT DISTINCT EMPLOYEE_NUMBER
   FROM   RCBV0140_OU_EMP
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKDR          */
                                         /* PTM 908: CURSOR REMOVED  */
0                                        /* CURSOR RCBVHKER          */
 EXEC SQL
   DECLARE CURS_RCBVHKER CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   (SELECT DISTINCT
           PRODUCT_TYPE, MODEL_NUMBER, ORIGIN, SEQUENCE_NUMBER
    FROM   RCBV0200_SW_CUST
   WHERE   COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   ORDER BY 1, 2, 3, 4
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKGR          */
 EXEC SQL
   DECLARE CURS_RCBVHKGR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   (SELECT MES_ORDER_NUMBER, NAME_CODE
                FROM   RCBV0250_MES_PR
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT MES_ORDER_NUMBER, NAME_CODE
                FROM   RCBV0330_MES_PO
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   ORDER BY 1, 2
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKHR          */
                                         /* PTM 908: ADDED CUST_NAME */
 EXEC SQL
   DECLARE CURS_RCBVHKHR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT CUSTOMER_NUMBER, CUSTOMER_NAME, END_DATE
   FROM   RCBV0010_CUSTOMER
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
 /*AND    END_DATE        < :WRK_GROUP_DATE /*S1540038*/ /* S1277113 */
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */
0                                        /* CURSOR RCBVHKNR          */
 EXEC SQL
   DECLARE CURS_RCBVHKNR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT DISTINCT CUSTOMER_NUMBER, CONTRACT_NUMBER, AS_CONTRACT_IND
   FROM   RCBV0035_CUST_CTR
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   ORDER BY 2, 1
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKIR          */
                                         /* PTM 908: ADDED T35,      */
                                         /* T260.CUSTOMER_OWNER,     */
                                         /* REMOVED T210             */
 EXEC SQL
   DECLARE CURS_RCBVHKIR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   (SELECT CUSTOMER_NUMBER
    FROM   RCBV0035_CUST_CTR
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT CUSTOMER_NUMBER
    FROM   RCBV0190_HW_CUST
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT CUSTOMER_USER
    FROM   RCBV0200_SW_CUST
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT CUSTOMER_USER
    FROM   RCBV0260_HW_IN_ORD
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT CUSTOMER_OWNER
    FROM   RCBV0260_HW_IN_ORD
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT CUSTOMER_USER
    FROM   RCBV0270_SW_IN_ORD
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT CUSTOMER_USER
    FROM   RCBV0340_HW_ADDR
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKJR          */
 EXEC SQL
   DECLARE CURS_RCBVHKJR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT PRODUCT_TYPE, MODEL_NUMBER, PRODUCT_NAME, END_DATE
   FROM   RCBV0070_HW_PO                                  /* PTM1064 */
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER           /* PTM1064 */
                                                          /* PTM1064 */
   ORDER BY 1,2
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKKR          */
 EXEC SQL
   DECLARE CURS_RCBVHKKR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   (SELECT FUTURE_TYPE, FUTURE_MODEL
    FROM   RCBV0250_MES_PR
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
    AND    FUTURE_TYPE IS NOT NULL
    AND    FUTURE_MODEL IS NOT NULL
   )
   UNION
   (SELECT PRODUCT_TYPE, MODEL_NUMBER
    FROM   RCBV0260_HW_IN_ORD
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT PRODUCT_TYPE, MODEL_NUMBER
    FROM   RCBV0300_HW_REAL
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT FUTURE_TYPE, FUTURE_MODEL
    FROM   RCBV0330_MES_PO
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
    AND    FUTURE_TYPE IS NOT NULL
    AND    FUTURE_MODEL IS NOT NULL
   )
   UNION
   (SELECT PRODUCT_TYPE, MODEL_NUMBER                       /*PTM1064*/
    FROM   RCBV0051_PI_HW_PR                                /*PTM1064*/
    WHERE  COUNTRY_NUMBER    = :WRK_COUNTRY_NUMBER          /*PTM1064*/
   )                                                        /*PTM1064*/
   ORDER BY 1, 2
   FOR FETCH ONLY;                                        /* RC01219 */
0                                  /* START PTM0541  CURSOR RCBVHKLR */
 EXEC SQL
   DECLARE CURS_RCBVHKLR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT PRODUCT_TYPE, MODEL_NUMBER, PRODUCT_NAME, END_DATE
   FROM   RCBV0080_SW_PO
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   ORDER BY 1,2
   FOR FETCH ONLY;                                        /* RC01219 */

0                                                 /* CURSOR RCBVHKMR */
 EXEC SQL
   DECLARE CURS_RCBVHKMR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   (SELECT DISTINCT PRODUCT_TYPE, MODEL_NUMBER
    FROM   RCBV0060_SW_PR
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   UNION
   (SELECT DISTINCT PRODUCT_TYPE_SW, MODEL_NUMBER_SW
    FROM   RCBV0270_SW_IN_ORD
    WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   )
   ORDER BY 1,2                                       /* END PTM0541 */
   FOR FETCH ONLY;                                        /* RC01219 */
0                                        /* CURSOR RCBVHKPR          */
 EXEC SQL
   DECLARE CURS_RCBVHKPR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT SERVICE_NUMBER, GROUP_ID
   FROM   RCBV0210_ADD_SERV
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    CONTRACT_NUMBER = :SELECT_RCBVHKNR.CONTRACT_NUMBER
   AND    CUSTOMER_NUMBER = :SELECT_RCBVHKNR.CUSTOMER_NUMBER
   ORDER BY 1, 2
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKRR          */
 EXEC SQL
   DECLARE CURS_RCBVHKRR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT SERVICE_NUMBER
   FROM   RCBV0210_ADD_SERV
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    SERVICE_NUMBER  = :SELECT_RCBVHKOR.SERVICE_NUMBER
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */

0                                        /* CURSOR RCBVHKQR          */
 EXEC SQL
   DECLARE CURS_RCBVHKQR CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT CONTRACT_NUMBER
   FROM   RCBV0240_SERV_CTR
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */
0                                        /* CURSOR RCBVHKQS          */
 EXEC SQL
   DECLARE CURS_RCBVHKQS CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT DISTINCT CUSTOMER_NUMBER, CONTRACT_NUMBER
   FROM   RCBV0210_ADD_SERV
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   ORDER BY 2, 1
   FOR FETCH ONLY;                                        /* RC01219 */

 EXEC SQL
   DECLARE CURS_RCBVHKQT CURSOR WITH HOLD FOR   /*PTM1064: WITH HOLD */
   SELECT CONTRACT_NUMBER
   FROM   RCBV0240_SERV_CTR
   WHERE  COUNTRY_NUMBER   =  :WRK_COUNTRY_NUMBER
   AND    CONTRACT_NUMBER IS NOT NULL
   UNION
   SELECT SUPPL_CTR_NUMBER
   FROM   RCBV0240_SERV_CTR
   WHERE  COUNTRY_NUMBER   =  :WRK_COUNTRY_NUMBER
   AND    SUPPL_CTR_NUMBER IS NOT NULL
   ORDER BY 1
   FOR FETCH ONLY;                                        /* RC01219 */
                                                      /* SOC PTM1311 */
0                                        /* CURSOR RCBVHKSR          */
 EXEC SQL
   DECLARE CURS_RCBVHKSR CURSOR FOR
   SELECT DISTINCT COUNTRY_NUMBER
   FROM   RCBV0070_HW_PO
   ORDER BY 1
   FOR FETCH ONLY;

 EXEC SQL                                           /* SOC RB01320  */
   DECLARE CURS_RCBVHKTR CURSOR WITH HOLD FOR
    SELECT  A.COUNTRY_NUMBER,
            A.PRODUCT_TYPE,
            A.REAL_SERIAL_NUMBER,
            A.DUMMY_ORIGIN,
            A.DUMMY_SEQUENCE_NUM
        FROM  RCBV0125_DMMY_REAL A
       WHERE  A.COUNTRY_NUMBER   = :WRK_COUNTRY_NUMBER
         AND NOT EXISTS
             (SELECT B.PRODUCT_TYPE,
                     B.ORIGIN,
                     B.SEQUENCE_NUMBER,
                     B.COUNTRY_NUMBER
                 FROM  RCBT0050_HW_PR B
                WHERE B.COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
                  AND A.PRODUCT_TYPE    = B.PRODUCT_TYPE
                  AND SUBSTR(A.REAL_SERIAL_NUMBER,1,2)
                                        = B.ORIGIN
                  AND SUBSTR(A.REAL_SERIAL_NUMBER,3,28)
                                        = B.SEQUENCE_NUMBER
                  AND A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER
              )
         AND NOT EXISTS
             (SELECT C.PRODUCT_TYPE,
                     C.ORIGIN,
                     C.SEQUENCE_NUMBER,
                     C.COUNTRY_NUMBER
                 FROM  RCBT0051_PI_HW_PR C
                WHERE C.COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
                  AND A.PRODUCT_TYPE    = C.PRODUCT_TYPE
                  AND SUBSTR(A.REAL_SERIAL_NUMBER,1,2)
                                        = C.ORIGIN
                  AND SUBSTR(A.REAL_SERIAL_NUMBER,3,28)
                                        = C.SEQUENCE_NUMBER
                  AND A.COUNTRY_NUMBER  = C.COUNTRY_NUMBER
              )
            ORDER BY 1, 2 ,3 ,4 ,5
            FOR FETCH ONLY
            ;                                        /* EOC RB01320  */
                                                      /* EOC PTM1311 */
                                                      /* SOC RC01325 */
0                                        /* CURSOR RCBVHKUR          */
 EXEC SQL
   DECLARE CURS_RCBVHKUR CURSOR WITH HOLD FOR
   SELECT PRODUCT_TYPE, MODEL_NUMBER, END_DATE
   FROM   RCBV0400_PO_MOD1
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   ORDER BY 1,2
   FOR FETCH ONLY;
                                                 /* SOC CEDS00000736 */
0                                        /* CURSOR RCBVHKVR          */
 /*EXEC SQL
   DECLARE CURS_RCBVHKVR CURSOR WITH HOLD FOR
   (SELECT PRODUCT_TYPE
    FROM   RCBV0250_MES_PR
    WHERE  FUTURE_TYPE  = :SELECT_RCBVHKJR.PRODUCT_TYPE
   )
   UNION
   (SELECT PRODUCT_TYPE
    FROM   RCBV0260_HW_IN_ORD
    WHERE  PRODUCT_TYPE = :SELECT_RCBVHKJR.PRODUCT_TYPE
   )
   UNION
   (SELECT PRODUCT_TYPE
    FROM   RCBV0300_HW_REAL
    WHERE  PRODUCT_TYPE = :SELECT_RCBVHKJR.PRODUCT_TYPE
   )
   UNION
   (SELECT FUTURE_TYPE
    FROM   RCBV0330_MES_PO
    WHERE  FUTURE_TYPE  = :SELECT_RCBVHKJR.PRODUCT_TYPE
   )
   UNION
   (SELECT PRODUCT_TYPE
    FROM   RCBV0051_PI_HW_PR
    WHERE  PRODUCT_TYPE = :SELECT_RCBVHKJR.PRODUCT_TYPE
   )
   FOR FETCH ONLY;*/
0                                        /* CURSOR RCBVHKWR           */
 /*EXEC SQL
   DECLARE CURS_RCBVHKWR CURSOR WITH HOLD FOR
   (SELECT PRODUCT_TYPE
    FROM   RCBV0250_MES_PR
    WHERE  FUTURE_TYPE = :SELECT_RCBVHKUR.PRODUCT_TYPE
   )
   UNION
   (SELECT PRODUCT_TYPE
    FROM   RCBV0260_HW_IN_ORD
    WHERE  PRODUCT_TYPE = :SELECT_RCBVHKUR.PRODUCT_TYPE
   )
   UNION
   (SELECT PRODUCT_TYPE
    FROM   RCBV0300_HW_REAL
    WHERE  PRODUCT_TYPE = :SELECT_RCBVHKUR.PRODUCT_TYPE
   )
   UNION
   (SELECT FUTURE_TYPE
    FROM   RCBV0330_MES_PO
    WHERE  FUTURE_TYPE = :SELECT_RCBVHKUR.PRODUCT_TYPE
   )
   UNION
   (SELECT PRODUCT_TYPE
    FROM   RCBV0051_PI_HW_PR
    WHERE  PRODUCT_TYPE = :SELECT_RCBVHKUR.PRODUCT_TYPE
   )
   FOR FETCH ONLY;*/                                  /* EOC RC01325 */
                                                 /* EOC CEDS00000736 */
1/********************************************************************/
 /*                 S T A R T   P R O C E S S I N G                  */
 /********************************************************************/
0CALL RCBHK0M_INIT_COMMON;
 CALL RCBHK0M_NEXT_CTRY;
 DO WHILE (WRK_COUNTRY_NUMBER ¬= HIGH(3));
     CALL RCBHK0M_INIT_CTRY;
     CALL RCBHK0M_HKP_CTRY_DATES;
     CALL RCBHK0M_HKP_CTRY;
     CALL RCBHK0M_MAINT_RCB099 (WRK_CTRY_SELECT,
                                WRK_CTRY_DATES);
     CALL RCBHK0M_END_CTRY;
     CALL RCBHK0M_CHKP_ISSUE;
     CALL RCBHK0M_NEXT_CTRY;
 END;
0CALL RCBHK0M_END_COMMON;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_INIT_COMMON                           */
 /*                                                                  */
 /* DESCRIPTION      : INITIALIZE VARIABLES                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_INIT_COMMON: PROC;
 PTR_INT_AREA     = ADDR (PARM_INT_AREA);
 PTR_DATE_AREA    = ADDR (DATE_AREA);
 PTR_RETURN_AREA  = ADDR (RETURN_AREA);
 PTR_COUNTRY_AREA = ADDR (COUNTRY_AREA1);                 /* PTM1311 */
 PTR_RUN_DATE_AREA= ADDR (RUN_DATE_AREA);
 PTR_RCBV500      = ADDR (TB_RCBV500);
 PTR_RCBV500I     = ADDR (TB_RCBV500_I);


 PARM_INT_AREA.ID_MOD_LEVEL    = 1;
 PARM_INT_AREA.ID_MOD_PATH (1) = WRK_MOD_NAME;
 PARM_INT_AREA.MSG_AREA        = '';
 PARM_INT_AREA.ERR_AREA        = '';
 PARM_INT_AREA.MSG_REQUEST     = 'O';
 PARM_INT_AREA.MSG_TARGET      = 'F';
 PARM_INT_AREA.ID_SOURCE_APPL  = 'RCB';
 PARM_INT_AREA.ID_SOURCE_PROG  = WRK_PGM_NAME;
 PARM_INT_AREA.SYSTEM_TYPE     = WRK_SYSTEM_TYPE;
 PARM_INT_AREA.PTR_PCB_IO      = NULL;
 PARM_INT_AREA.PTR_PCB_ALT     = NULL;
 CALL RCB0M1M (PTR_INT_AREA);

 CALL RCB0T1M (PTR_INT_AREA);            /* RETRIEVE SYSTEM DATE   */

0CHKP_ID.NAME   = SUBSTR (PARM_INT_AREA.ID_SOURCE_PROG,4,3);
 CHKP_LEN_AREA  = STORAGE(CHKP_AREA);
0CALL RCBHK0M_CHKP_RESTART;

 COUNTRY_AREA = '';                                       /* PTM1311 */
 CALL RCB019M (PTR_COUNTRY_AREA,         /* RETRIEVE ALL COUNTRIES */
               PTR_INT_AREA);

                                                      /* SOC PTM1311 */
 COUNTRY_AREA.CTRY_SET_ID          = COUNTRY_AREA1.CTRY_SET_ID;
 COUNTRY_AREA.PROC_ID              = COUNTRY_AREA1.PROC_ID;
 IF COUNTRY_AREA1.COUNT_CTRY = 0
 THEN
   DO;
     CALL RCBHK0M_CTRY_T0070;
   END;
 ELSE
   DO;
      COUNTRY_AREA.COUNT_CTRY      = COUNTRY_AREA1.COUNT_CTRY;
      DO WRK_COUNT = 1 TO COUNTRY_AREA1.COUNT_CTRY;
        COUNTRY_AREA.CTRY_ARRAY.CTRYNO(WRK_COUNT)    =
            COUNTRY_AREA1.CTRY_ARRAY.CTRYNO(WRK_COUNT);
        COUNTRY_AREA.CTRY_ARRAY.PGR_TYPE(WRK_COUNT)    =
            COUNTRY_AREA1.CTRY_ARRAY.PGR_TYPE(WRK_COUNT);
        END;
   END;
                                                      /* EOC PTM1311 */
 IF COUNTRY_AREA.COUNT_CTRY = 0
 THEN
   DO;
     PARM_INT_AREA.MSG_VAR_CODES     = '';
     PARM_INT_AREA.MESSAGE_TYPE      = 'IS';
     PARM_INT_AREA.MESSAGE_NUMBER    = '0005';
     CALL RCB0M1M (PTR_INT_AREA);
     CALL RCBHK0M_ERROR (NULL, 'OTHER', '#001');
   END;
0CALL RCBHK0M_LOCK_TABLESPACES;                           /* PTM1311 */
0
 WRK_CTRY_IDX             = 0;
 WRK_CTRY_DATES           = '';
 WRK_CTRY_SELECT(*)       = '0';
0END RCBHK0M_INIT_COMMON;
1                                                     /* SOC PTM1311 */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CTRY_T0070                            */
 /*                                                                  */
 /* DESCRIPTION      : INITIALIZE COUNTRY ARRAY WITH T0070 ENTRIES   */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CTRY_T0070: PROC;
0CALL RCBHK0M_OPEN_CURS_RCBVHKSR;
0CALL RCBHK0M_FETCH_CURS_RCBVHKSR;
0DO WHILE (¬SWITCH_END_OF_CURS_RCBVHKSR);
   COUNTRY_AREA.COUNT_CTRY = COUNTRY_AREA.COUNT_CTRY + 1;
   COUNTRY_AREA.CTRY_ARRAY.CTRYNO(COUNTRY_AREA.COUNT_CTRY) =
       SELECT_RCBVHKSR.COUNTRY_NUMBER;
   COUNTRY_AREA.CTRY_ARRAY.PGR_TYPE(COUNTRY_AREA.COUNT_CTRY) = 'A01';
   CALL RCBHK0M_FETCH_CURS_RCBVHKSR;
   END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKSR;
0END RCBHK0M_CTRY_T0070;
                                                      /* EOC PTM1311 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_NEXT_CTRY                             */
 /*                                                                  */
 /* DESCRIPTION      : INITIALIZE COUNTRY DEPENDENT VARIABLES        */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_NEXT_CTRY: PROC;

 WRK_CTRY_IDX = WRK_CTRY_IDX + 1;

 IF WRK_CTRY_IDX <= COUNTRY_AREA.COUNT_CTRY
 THEN DO;
                                                      /* SOC PTM1311 */
     WRK_PGR_TYPE  = COUNTRY_AREA.CTRY_ARRAY.PGR_TYPE (WRK_CTRY_IDX);
     WRK_COUNTRY_NUMBER = COUNTRY_AREA.CTRY_ARRAY.CTRYNO (WRK_CTRY_IDX);
                                                      /* EOC PTM1311 */
                                                /* RETRIEVE RUN DATE */
     RUN_DATE_AREA.PROC_ID = COUNTRY_AREA.PROC_ID;
     RUN_DATE_AREA.CTRYNO = WRK_COUNTRY_NUMBER;
     RUN_DATE_AREA.PGR_TYPE = WRK_PGR_TYPE;

     CALL RCB020M (PTR_RUN_DATE_AREA,
                   PTR_INT_AREA);

     IF RUN_DATE_AREA.RUN_DATE = '' /* NO RUN DATE RCB001 FOUND */
     THEN
       DO;
         WRK_RUN_DATE = PARM_INT_AREA.SYSTEM_DATE;
       END;
     ELSE
       DO;
         WRK_RUN_DATE = RUN_DATE_AREA.RUN_DATE;
       END;

                              /* GIVE MESSAGE WITH RUNDATE           */
     PARM_INT_AREA.COUNTRY_NUMBER = WRK_COUNTRY_NUMBER;
     PARM_INT_AREA.MESSAGE_TYPE = 'IS';
     PARM_INT_AREA.MESSAGE_NUMBER = '0002';
     PARM_INT_AREA.MSG_VAR_CODES = '';
     PARM_INT_AREA.MSG_VAR_CODE_6 = 'DT';
     PARM_INT_AREA.MSG_VAR_VALUE_6 = WRK_RUN_DATE;
     CALL RCB0M1M (PTR_INT_AREA);
   END;
 ELSE
   DO;
       WRK_PGR_TYPE  = '';
       WRK_COUNTRY_NUMBER = HIGH (3); /* NO MORE COUNTRIES IN ARRAY */
   END;

0END RCBHK0M_NEXT_CTRY;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_INIT_CTRY                             */
 /*                                                                  */
 /* DESCRIPTION      : INITIALIZE COUNTRY DEPENDENT VARIABLES        */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_INIT_CTRY: PROC;
 SWITCH_RCB099_FOUND = '0'B;
 WRK_CTRY_DATES     = '';
 WRK_CTRY_SELECT(*) = '0';
 WRK_HKP_STAGE      = 'B990';
0PARM_INT_AREA.COUNTRY_NUMBER = WRK_COUNTRY_NUMBER;
0CALL RCBHK0M_RETRIEVE_RCB012;                        /* PTM 908     */
0END RCBHK0M_INIT_CTRY;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_CTRY_DATES                        */
 /*                                                                  */
 /* DESCRIPTION      : RETRIEVE THE COUNTRY DEPENDENT HOUSEKEEP      */
 /*                    DATE.                                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_CTRY_DATES: PROC;
0WRK_CTRY_HELP  = '';
0CALL RCBHK0M_RET_PERIOD;
0CALL RCBHK0M_RETRIEVE_RCB099;
 CALL RCBHK0M_CTRY_DATES;
0END RCBHK0M_HKP_CTRY_DATES;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CTRY_DATES                            */
 /*                                                                  */
 /* DESCRIPTION      : CALCULATE THE COUNTRY DEPENDENT HOUSEKEEP     */
 /*                    DATES                                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CTRY_DATES:  PROC;
0                                   /* INITIAL HOUSEKEEP DATES       */


 DO WRK_COUNT= 1 TO 8;
   IF RCB040.HKP_SELECT (WRK_COUNT) = '1'
   THEN
     DO;
       WRK_CTRY_SELECT (WRK_COUNT) = '1';
0      SELECT (WRK_COUNT);
       WHEN (1,2,3,5,7,8)
         DO;
           WRK_CTRY_DATES (WRK_COUNT) = WRK_CTRY_HELP (1);
         END;
       WHEN (4,6)
         DO;
           WRK_CTRY_DATES (WRK_COUNT) = WRK_CTRY_HELP (2);
         END;
       OTHERWISE;
       END;
     END;
 END;
0                                   /* FINAL HOUSEKEEP DATES         */
 IF SWITCH_RCB099_FOUND
 THEN
   DO;
     DO WRK_COUNT = 1 TO 8;
       IF WRK_CTRY_SELECT (WRK_COUNT) = '1' &
          ( WRK_CTRY_DATES (WRK_COUNT) <
            RCB099.HKP_DATES (WRK_COUNT))
       THEN
         DO;
           WRK_CTRY_SELECT (WRK_COUNT) = '0';
         END;
     END;
   END;

0END RCBHK0M_CTRY_DATES;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_RET_PERIOD                            */
 /*                                                                  */
 /* DESCRIPTION      : PROCESS RETENTION PERIOD, TO CALCULATE        */
 /*                    HOUSEKEEP DATES                               */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_RET_PERIOD:  PROC;
 CALL RCBHK0M_RETRIEVE_RCB040;
0CALL RCBHK0M_CALC_HKP_DATE (WRK_RUN_DATE,
                             WRK_CTRY_HELP (1),
                             RCB040.RET_PERIOD_ALL);
 CALL RCBHK0M_CALC_HKP_DATE (WRK_RUN_DATE,
                             WRK_CTRY_HELP (2),
                             RCB040.RET_PERIOD_PO);
0END RCBHK0M_RET_PERIOD;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_RETRIEVE_RCB012                       */
 /*                                                                  */
 /* DESCRIPTION      : RETRIEVE THE RCB012 PARAMETER                 */
 /*                                                                  */
 /* HISTORY          : NEW FOR PTM 0908                              */
 /*                                                                  */
 /********************************************************************/
 RCBHK0M_RETRIEVE_RCB012:  PROC;
0RETURN_AREA          = '';
0TB_RCBV500           = '';
 TB_RCBV500_I         = '';
0TB_RCB012_CTRY.NUMBER   = 'RCB012';
 TB_RCB012_CTRY.PGM_NAME = WRK_PGM_NAME;
 TB_RCB012_CTRY.CTRYNO   = WRK_COUNTRY_NUMBER;
 TB_RCB012_CTRY.PGR_TYPE = WRK_PGR_TYPE;
0CALL RCBI50M ('U',                                       /* RC01219 */
               ADDR(TB_RCBV500),
               ADDR(TB_RCBV500_I),
               ADDR(RETURN_AREA),
               PTR_INT_AREA);
 SELECT (RETURN_AREA.RETURN_CODE);
 WHEN (0)
     RCB012              = TB_RCB012_CTRY;
 WHEN (4)
   DO;
     RCB012.CHKP_LIMIT                      = 0;
     PARM_INT_AREA.MESSAGE_TYPE             = 'IS';
     PARM_INT_AREA.MESSAGE_NUMBER           = '0008';
     PARM_INT_AREA.MSG_VAR_CODES            = ' ';
     PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6  = 'NO';
     PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6 = RCB012.CHKP_LIMIT;
     CALL RCB0M1M (PTR_INT_AREA);
   END;
 OTHERWISE
   CALL RCBHK0M_ERROR (ADDR(RETURN_AREA.RETURN_SQL),
                      'DB2',
                      '#002');
 END;
0END RCBHK0M_RETRIEVE_RCB012;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_RETRIEVE_RCB040                       */
 /*                                                                  */
 /* DESCRIPTION      : RETRIEVE THE RCB040 PARAMETER                 */
 /*                                                                  */
 /********************************************************************/
 RCBHK0M_RETRIEVE_RCB040:  PROC;
0RETURN_AREA          = '';
0TB_RCBV500           = '';
 TB_RCBV500_I         = '';
0TB_RCB040_CTRY.NUMBER   = 'RCB040';
 TB_RCB040_CTRY.CTRYNO   = WRK_COUNTRY_NUMBER;
 TB_RCB040_CTRY.PGR_TYPE = WRK_PGR_TYPE;       /* PTM 0402           */
0CALL RCBI50M ('U',                                       /* RC01219 */
               ADDR(TB_RCBV500),
               ADDR(TB_RCBV500_I),
               ADDR(RETURN_AREA),
               PTR_INT_AREA);
0SELECT(RETURN_AREA.RETURN_CODE);
 WHEN (0)
   DO;
     RCB040              = TB_RCB040_CTRY;
     SWITCH_RCB040_FOUND = TRUE;
   END;
 WHEN (4)
   DO;
     RCB040              = '';
     SWITCH_RCB040_FOUND = FALSE;
                              /* GIVE MESSAGE PARAMETER MISSING      */
     PARM_INT_AREA.COUNTRY_NUMBER = WRK_COUNTRY_NUMBER;
     PARM_INT_AREA.MESSAGE_TYPE = 'IS';
     PARM_INT_AREA.MESSAGE_NUMBER = 'I050';
     PARM_INT_AREA.MSG_VAR_CODES = '';
     PARM_INT_AREA.MSG_VAR_CODE_6 = 'PN';
     PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCB040';
     PARM_INT_AREA.MSG_VAR_CODE_6 = 'PK';
     PARM_INT_AREA.MSG_VAR_VALUE_6 = STRING(TB_RCB040_CTRY.EXTRA_KEY);
     CALL RCB0M1M (PTR_INT_AREA);
                               /* END THE PROGRAM */
     CALL RCBHK0M_ERROR (ADDR (RETURN_AREA.RETURN_SQL),
                         'OTHER',
                         '#003');
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (RETURN_AREA.RETURN_SQL),
                         'DB2',
                         '#004');
   END;
 END;
0END RCBHK0M_RETRIEVE_RCB040;
                                                     /* SOC S1235633 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_RETRIEVE_RCB161                       */
 /*                                                                  */
 /* DESCRIPTION      : CHECK PARAMETER VALUE TO CALL CHIS LAMS       */
 /*                                                                  */
 /********************************************************************/
 RCBHK0M_RETRIEVE_RCB161:  PROC;
0RETURN_AREA          = '';
0TB_RCBV500           = '';
 TB_RCBV500_I         = '';
0TB_RCB161_CTRY.NUMBER   = 'RCB161';
 TB_RCB161_CTRY.CTRYNO   = WRK_COUNTRY_NUMBER;
 TB_RCB161_CTRY.PGR_TYPE = WRK_PGR_TYPE;
0CALL RCBI50M ('U',
               ADDR(TB_RCBV500),
               ADDR(TB_RCBV500_I),
               ADDR(RETURN_AREA),
               PTR_INT_AREA);
0SELECT(RETURN_AREA.RETURN_CODE);
 WHEN (0)
   DO;
     WRK_CHIS_FOUND   = TB_RCB161_CTRY.CHIS_PARM;
   END;
 WHEN (4)
   DO;
     RCB161              = '';
                              /* GIVE MESSAGE PARAMETER MISSING      */
     PARM_INT_AREA.COUNTRY_NUMBER   = WRK_COUNTRY_NUMBER;
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';
     PARM_INT_AREA.MESSAGE_NUMBER   = 'I050';
     PARM_INT_AREA.MSG_VAR_CODES    = '';
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'PN';
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCB161';
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'PK';
     PARM_INT_AREA.MSG_VAR_VALUE_6  = STRING(TB_RCB161_CTRY.EXTRA_KEY);
     CALL RCB0M1M (PTR_INT_AREA);
                               /* END THE PROGRAM */
     CALL RCBHK0M_ERROR (ADDR (RETURN_AREA.RETURN_SQL),
                         'OTHER',
                         '#142');
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (RETURN_AREA.RETURN_SQL),
                         'DB2',
                         '#143');
   END;
 END;
0END RCBHK0M_RETRIEVE_RCB161;
                                                     /* EOC S1235633 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_RETRIEVE_RCB099                       */
 /*                                                                  */
 /* DESCRIPTION      : RETRIEVE THE RCB099 PARAMETER                 */
 /*                                                                  */
 /********************************************************************/
 RCBHK0M_RETRIEVE_RCB099:  PROC;
0RETURN_AREA          = '';
0TB_RCBV500           = '';
 TB_RCBV500_I         = '';
0TB_RCB099_CTRY.NUMBER  = 'RCB099';
 TB_RCB099_CTRY.CTRYNO  = WRK_COUNTRY_NUMBER;
                                                       /* SOC PTM1053 */
 TB_RCB099_CTRY.PROC_ID = 'HK01';
                                                       /* EOC PTM1053 */
0CALL RCBI50M ('R',                                       /* RC01219 */
               ADDR(TB_RCBV500),
               ADDR(TB_RCBV500_I),
               ADDR(RETURN_AREA),
               PTR_INT_AREA);
0SELECT(RETURN_AREA.RETURN_CODE);
 WHEN (0)
   DO;
     RCB099              = TB_RCB099_CTRY;
     SWITCH_RCB099_FOUND = TRUE;
   END;
 WHEN (4)
   DO;
     RCB099              = '';
     SWITCH_RCB099_FOUND = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (RETURN_AREA.RETURN_SQL),
                         'DB2',
                         '#005');
   END;
 END;
0END RCBHK0M_RETRIEVE_RCB099;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_MAINT_RCB099                          */
 /*                                                                  */
 /* DESCRIPTION      : MAINTAIN RCB099 SYSTEM PARAMETER              */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_MAINT_RCB099:    PROC (SELECT,
                                DATES);
0DCL SELECT (8) CHAR (01) CONNECTED;
 DCL DATES  (8) CHAR (10) CONNECTED;


0IF ¬ SWITCH_RCB099_FOUND
 THEN
   DO;
     RCB099.NUMBER        = 'RCB099';
     RCB099.CTRYNO        = WRK_COUNTRY_NUMBER;
                                                       /* SOC PTM1053 */
     RCB099.PROC_ID       = 'HK01';
                                                       /* EOC PTM1053 */
     RCB099.DESCRIPTION   = 'SYSTEM MAINT MIN HKP DATES';
     RCB099.HKP_DATES     = DATES;
0    CALL RCBHK0M_MAX_HKP_DATES;
0    CALL RCBHK0M_CREATE_RCB099;
   END;
 ELSE
   DO;
     IF ¬ALL(SELECT(*) = '0')
     THEN
       DO;
         DO WRK_COUNT = 1 TO 8;
           IF SELECT (WRK_COUNT) = '1'
           THEN
             DO;
               IF DATES (WRK_COUNT) < RCB099.HKP_DATES (WRK_COUNT)
               THEN
                 DO;
                   SELECT (WRK_COUNT) = '0';
                 END;
               ELSE
                 DO;
                   RCB099.HKP_DATES (WRK_COUNT) = DATES (WRK_COUNT);
                 END;
             END;
         END;
       END;
     IF ¬ALL(SELECT(*) = '0')
     THEN
       DO;
         CALL RCBHK0M_MAX_HKP_DATES;
0        CALL RCBHK0M_UPDATE_RCB099;
       END;
   END;
0END RCBHK0M_MAINT_RCB099;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CREATE_RCB099                         */
 /*                                                                  */
 /* DESCRIPTION      : CREATE ROW RCBHK3R                            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CREATE_RCB099:    PROC;
0RETURN_AREA          = '';
0TB_RCBV500           = '';
 TB_RCBV500_I         = '';
0TB_RCB099_CTRY       = RCB099;
 TB_RCB099_CTRY.LENGTH_PARM = CSTG (RCB099.MAX_HKP_DATES) +
                              CSTG (RCB099.HKP_DATES) ;
0CALL RCBF50M (ADDR(TB_RCBV500),
               ADDR(TB_RCBV500_I),
               ADDR(RETURN_AREA),
               PTR_INT_AREA);
0SELECT(RETURN_AREA.RETURN_CODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (RETURN_AREA.RETURN_SQL),
                         'DB2',
                         '#006');
   END;
 END;
0END RCBHK0M_CREATE_RCB099;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_UPDATE_RCB099                         */
 /*                                                                  */
 /* DESCRIPTION      : UPDATE ROW RCB099                             */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_UPDATE_RCB099:    PROC;
0RETURN_AREA          = '';
0TB_RCBV500           = '';
 TB_RCBV500_I         = '';
0TB_RCB099_CTRY       = RCB099;
 TB_RCB099_CTRY.LENGTH_PARM = CSTG (RCB099.MAX_HKP_DATES) +
                              CSTG (RCB099.HKP_DATES) ;
0CALL RCBG50M (ADDR(TB_RCBV500),
               ADDR(TB_RCBV500_I),
               ADDR(RETURN_AREA),
               PTR_INT_AREA);
0SELECT(RETURN_AREA.RETURN_CODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (RETURN_AREA.RETURN_SQL),
                         'DB2',
                         '#007');
   END;
 END;
0END RCBHK0M_UPDATE_RCB099;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_MAX_HKP_DATES                         */
 /*                                                                  */
 /* DESCRIPTION      : CALCULATE MAXIMUM OF ALL HOUSEKEEP DATES      */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_MAX_HKP_DATES:    PROC;
0RCB099.MAX_HKP_DATES = '';
 DO WRK_COUNT = 1 TO 8;
   IF RCB099.HKP_DATES (WRK_COUNT) > RCB099.MAX_HKP_DATES
   THEN
     DO;
       RCB099.MAX_HKP_DATES = RCB099.HKP_DATES (WRK_COUNT);
     END;
 END;
0END RCBHK0M_MAX_HKP_DATES;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_MAX_DATES                             */
 /*                                                                  */
 /* DESCRIPTION      : CLACULATE THE MAXIMUM OF TWO DATES            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_MAX_DATES:  PROC (DATE_IN_1,
                           DATE_IN_2,
                           DATE_OUT);
0DCL DATE_IN_1  CHAR (10);
 DCL DATE_IN_2  CHAR (10);
 DCL DATE_OUT   CHAR (10);
0IF DATE_IN_1 > DATE_IN_2
 THEN
   DO;
     DATE_OUT = DATE_IN_1;
   END;
 ELSE
   DO;
     DATE_OUT = DATE_IN_2;
   END;
0END RCBHK0M_MAX_DATES;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CALC_HKP_DATE                         */
 /*                                                                  */
 /* DESCRIPTION      : CALCULATE THE COUNTRY HOUSEKEEP DATES FROM    */
 /*                    THE CURRENT DATE AND THE RETENTION PERIOD     */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CALC_HKP_DATE: PROC (DATE_IN,
                              DATE_OUT,
                              DATE_PERIOD);
0DCL DATE_IN     CHAR (10);
 DCL DATE_OUT    CHAR (10);
 DCL DATE_PERIOD PIC'99999';
 DCL WRK_PERIOD  FIXED DEC(5,0);
0DATE_AREA = '';
0DATE_AREA.WD_IN_FORMAT        = 'ISO';
 DATE_AREA.WD_OUT_FORMAT       = 'ISO';
 DATE_AREA.WD_FUNCTION         = 'C';
 DATE_AREA.WD_IN_DATE          = DATE_IN;
 WRK_PERIOD                    = DATE_PERIOD;
 DATE_AREA.WD_PERIOD           = -WRK_PERIOD;
 DATE_AREA.WD_PERIOD_TYPE = 'D';
0CALL RCB004M (ADDR(DATE_AREA));
 SELECT (DATE_AREA.WD_STATUS);
 WHEN ('')
   DO;
     DATE_OUT = SUBSTR (DATE_AREA.WD_OUT_DATE,1,10);
   END;
 OTHERWISE
   DO;
     PARM_INT_AREA.MESSAGE_TYPE      = 'IS';
     PARM_INT_AREA.MESSAGE_NUMBER    = '0012';
     PARM_INT_AREA.MSG_VAR_CODES     = ' ';
     PARM_INT_AREA.MSG_VAR_CODE_6    = 'DT';
     PARM_INT_AREA.MSG_VAR_VALUE_6   = DATE_IN;
     PARM_INT_AREA.MSG_VAR_CODE_7    = 'RC';
     PARM_INT_AREA.MSG_VAR_VALUE_7   = DATE_AREA.WD_STATUS;
     CALL RCB0M1M (PTR_INT_AREA);
0    CALL RCBHK0M_ERROR (NULL,
                         'OTHER',
                         '#008');
   END;
 END;
0END RCBHK0M_CALC_HKP_DATE;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_END_CTRY                              */
 /*                                                                  */
 /* DESCRIPTION      : SEND COUNT MESSAGES FOR HOUSEKEEP OF COUNTRY  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_END_CTRY: PROC;
0DO WRK_COUNT=1 TO 8;
   IF WRK_CTRY_SELECT (WRK_COUNT) = '1'
   THEN
     DO;
       PARM_INT_AREA.MESSAGE_TYPE      = 'IS';
       PARM_INT_AREA.MESSAGE_NUMBER    = '0112';
       PARM_INT_AREA.MSG_VAR_CODES     = ' ';
       PARM_INT_AREA.MSG_VAR_CODE_6    = 'GR';
       SELECT (WRK_COUNT);
       WHEN (1)
         DO;
           PARM_INT_AREA.MSG_VAR_VALUE_6   = 'EMPLOYEE GROUP';
         END;
       WHEN (2)
         DO;
           PARM_INT_AREA.MSG_VAR_VALUE_6   = 'OU GROUP';
         END;
       WHEN (3)
         DO;
           PARM_INT_AREA.MSG_VAR_VALUE_6   = 'CUSTOMER GROUP';
         END;
       WHEN (4)
         DO;
           PARM_INT_AREA.MSG_VAR_VALUE_6   = 'SW PO GROUP';
         END;
       WHEN (5)
         DO;
           PARM_INT_AREA.MSG_VAR_VALUE_6   = 'SOFTWARE GROUP';
         END;
       WHEN (6)
         DO;
           PARM_INT_AREA.MSG_VAR_VALUE_6   = 'HW PO GROUP';
         END;
       WHEN (7)
         DO;
           PARM_INT_AREA.MSG_VAR_VALUE_6   = 'HARDWARE GROUP';
         END;
       WHEN (8)
         DO;
           PARM_INT_AREA.MSG_VAR_VALUE_6   = 'MESSAGE GROUP';
         END;
       OTHERWISE;
       END;
       PARM_INT_AREA.MSG_VAR_CODE_7    = 'DT';
       PARM_INT_AREA.MSG_VAR_VALUE_7   = WRK_CTRY_DATES(WRK_COUNT);
0      CALL RCB0M1M (PTR_INT_AREA);
     END;
 END;
0END RCBHK0M_END_CTRY;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_END_COMMON                            */
 /*                                                                  */
 /* DESCRIPTION      : - SEND THE COUNT MESSAGES                     */
 /*                    - CLOSE THE MESSAGE FILE                      */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_END_COMMON: PROC;
0                                   /* WRITE COUNT COUNTRIES FOUND   */
     PARM_INT_AREA.MESSAGE_TYPE         = 'IS';
     PARM_INT_AREA.MESSAGE_NUMBER       = '0006';
     PARM_INT_AREA.MSG_VAR_CODES        = ' ';
     PARM_INT_AREA.MSG_VAR_CODE_6       = 'NO';
0    WRK_PIC_10 = COUNTRY_AREA.COUNT_CTRY;
     PARM_INT_AREA.MSG_VAR_VALUE_6      = WRK_PIC_10;
     CALL RCB0M1M (PTR_INT_AREA);
0                                   /* PROGRAM SUCC. ENDED           */
0PARM_INT_AREA.MESSAGE_TYPE         = 'IS';
 PARM_INT_AREA.MESSAGE_NUMBER       = '9999';
 PARM_INT_AREA.MSG_VAR_CODES        = ' ';
0CALL RCB0M1M (PTR_INT_AREA);
0                                   /* CLOSE MESSAGE FILE            */
 PARM_INT_AREA.MSG_REQUEST = 'C';
 CALL RCB0M1M (PTR_INT_AREA);
0END RCBHK0M_END_COMMON;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_ISSUE_CNT_DEL_MSG                     */
 /*                                                                  */
 /* DESCRIPTION      : ISSUE MESSAGE OF NR OF RECORDS DELETED        */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_ISSUE_CNT_DEL_MSG: PROC;
 PARM_INT_AREA.COUNTRY_NUMBER       = WRK_COUNTRY_NUMBER;
 PARM_INT_AREA.MESSAGE_TYPE         = 'IS';
 PARM_INT_AREA.MESSAGE_NUMBER       = '0176';
 PARM_INT_AREA.MSG_VAR_CODE_6       = 'DB';
 PARM_INT_AREA.MSG_VAR_CODE_7       = 'C7';
 WRK_PIC_10 = WRK_NR_OF_DELETIONS;
 PARM_INT_AREA.MSG_VAR_VALUE_7      = WRK_PIC_10;
 CALL RCB0M1M (PTR_INT_AREA);
0END RCBHK0M_ISSUE_CNT_DEL_MSG;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHK3R                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHK3R                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHK3R:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHK3R
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHK3R = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#009');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHK3R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHK4R                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHK4R                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHK4R:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHK4R
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHK4R = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#010');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHK4R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHK5R                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHK5R                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHK5R:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHK5R
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHK5R = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#011');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHK5R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHK6R                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHK6R                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHK6R:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHK6R
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHK6R = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#012');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHK6R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHK7R                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHK7R                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHK7R:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHK7R
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHK7R = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#013');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHK7R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHK9R                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHK9R                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHK9R:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHK9R
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHK9R = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#014');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHK9R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKAR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKAR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKAR:  PROC;
0SELECT_RCBVHKAR = '';
0EXEC SQL
  OPEN CURS_RCBVHKAR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKAR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#015');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKAR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKBR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKBR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKBR:  PROC;
0SELECT_RCBVHKBR = '';
0EXEC SQL
  OPEN CURS_RCBVHKBR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKBR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#016');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKBR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKCR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKCR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKCR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKCR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKCR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#017');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKCR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKER                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKER                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKER:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKER
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKER = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#018');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKER;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKGR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKGR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKGR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKGR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKGR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#019');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKGR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKHR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKHR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKHR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKHR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKHR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#020');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKHR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKIR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKIR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKIR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKIR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKIR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#021');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKIR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKJR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKJR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKJR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKJR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKJR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#022');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKJR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKKR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKKR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKKR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKKR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKKR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#023');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKKR;
1/**************************************************** START PTM0541 */
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKLR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKLR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKLR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKLR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKLR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#024');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKLR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKMR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKMR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKMR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKMR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKMR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#025');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKMR;                      /* END PTM0541 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKNR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKNR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKNR:  PROC;
0SELECT_RCBVHKNR_KEY = '';
0EXEC SQL
  OPEN CURS_RCBVHKNR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKNR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#026');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKNR;                      /* END T0035   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKOR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKOR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKOR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKOR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKOR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#027');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKOR;                      /* END T0075   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKPR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKPR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKPR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKPR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKPR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#028');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKPR;                      /* END T0210   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKQR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKQR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKQR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKQR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKQR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#029');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKQR;                      /* END T0240   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKRR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKRR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKRR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKRR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKRR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#030');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKRR;                      /* END T0210   */
1                                                     /* SOC PTM1311 */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKSR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKSR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKSR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKSR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKSR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#900');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKSR;
                                                      /* EOC PTM1311 */
                                                      /* SOC RB01320 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKTR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKTR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKTR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKTR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKTR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#131');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKTR;                     /* EOC RB01320  */
                                                     /* SOC RC01325  */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKUR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKUR                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKUR:  PROC;
0EXEC SQL
  OPEN CURS_RCBVHKUR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKUR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#134');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKUR;
                                                 /* SOC CEDS00000736 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKVR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKVR                          */
 /*                                                                  */
 /********************************************************************/
0/*RCBHK0M_OPEN_CURS_RCBVHKVR:  PROC;

0EXEC SQL
  OPEN CURS_RCBVHKVR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKVR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#135');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKVR;*/
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKWR                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKWR                          */
 /*                                                                  */
 /********************************************************************/
0/*RCBHK0M_OPEN_CURS_RCBVHKWR:  PROC;

0EXEC SQL
  OPEN CURS_RCBVHKWR
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKWR = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#136');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKWR;*/
                                                     /* EOC RC01325  */
                                                 /* EOC CEDS00000736 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKQS                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKQS                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKQS:  PROC;
0SELECT_RCBVHKQS_KEY = '';
0EXEC SQL
  OPEN CURS_RCBVHKQS
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_END_OF_CURS_RCBVHKQS = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#031');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKQS;                      /* END T0210   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_RCBVHKQT                    */
 /*                                                                  */
 /* DESCRIPTION      : OPEN CURSOR RCBVHKQT                          */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_OPEN_CURS_RCBVHKQT:  PROC;
0SELECT_RCBVHKQT = '';
0EXEC SQL
  OPEN CURS_RCBVHKQT
  ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_LOOP = TRUE;
     SWITCH_END_OF_CURS_RCBVHKQT = FALSE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#032');
   END;
 END;
0END RCBHK0M_OPEN_CURS_RCBVHKQT;                      /* END T0240   */
1                                                   /* START PTM1057 */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_OPEN_CURS_QCH0BCSO                    */
 /*                                                                  */
 /* DESCRIPTION      : INITIAL ACTIONS FOR CHIS-LAM QCH0BCSO FOR     */
 /*                    SPECIFIED COUNTRY                             */
 /*                                                                  */
 /********************************************************************/
 RCBHK0M_OPEN_CURS_QCH0BCSO: PROC;          /* OPEN CHIS TABLE       */
 SEARCH_PTR          = ADDR (SEARCH_ARG);
 DATA_PTR            = ADDR (QCH0BCSO);
 SQLCA_PTR           = ADDR (SQLCA);
                                                       /* SOC RB01341 */
 IF WRK_COUNTRY_NUMBER = '755' THEN
 DO;
       SEARCH_ARG.FR_CTY = '756';
       SEARCH_ARG.TO_CTY = '756';
 END;
 ELSE
 DO;
                                                       /* EOC RB01341 */
 SEARCH_ARG.FR_CTY   = WRK_COUNTRY_NUMBER;
 SEARCH_ARG.TO_CTY   = WRK_COUNTRY_NUMBER;
 END;                                                      /* RB01341 */
 SEARCH_ARG.ACCMODE  = 'OPEN';
 CALL QCH0BCM (SEARCH_PTR,DATA_PTR,SQLCA_PTR);
 SELECT (SQLCA.SQLCODE);
   WHEN (0);
   WHEN (+9999)
     DO;
       CALL RCBHK0M_ERROR (NULL, 'OTHER', '#033');
     END;
   OTHERWISE
     DO;
       CALL RCBHK0M_ERROR (ADDR(SQLCA), 'DB2','#034');
     END;
   END;
 SELECT_QCH0BCSO_KEY = '';
 END RCBHK0M_OPEN_CURS_QCH0BCSO;
                                                      /* END PTM1057 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHK3R                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHK3R                         */
 /*                                                                  */
 /* HISTORY          : PTM 908: CHANGED "INTO"-FIELDS                */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHK3R: PROC;
0SELECT_RCBVHK3R = '';
0EXEC SQL
   FETCH CURS_RCBVHK3R
   INTO :SELECT_RCBVHK3R.PRODUCT_TYPE    :WRK_INDNULL,
        :SELECT_RCBVHK3R.ORIGIN          :WRK_INDNULL,
        :SELECT_RCBVHK3R.SEQUENCE_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHK3R.COUNTRY_NUMBER  :WRK_INDNULL,
        :SELECT_RCBVHK3R.END_DATE        :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHK3R = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#035');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHK3R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHK4R                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHK4R                         */
 /*                                                                  */
 /* HISTORY          : PTM 908: CHANGED "INTO"-FIELDS                */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHK4R: PROC;
0SELECT_RCBVHK4R = '';
0EXEC SQL
   FETCH CURS_RCBVHK4R
   INTO :SELECT_RCBVHK4R.PRODUCT_TYPE    :WRK_INDNULL,
        :SELECT_RCBVHK4R.ORIGIN          :WRK_INDNULL,
        :SELECT_RCBVHK4R.SEQUENCE_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHK4R.COUNTRY_NUMBER  :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHK4R = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#036');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHK4R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHK5R                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHK5R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHK5R: PROC;
0SELECT_RCBVHK5R = '';
0EXEC SQL
   FETCH CURS_RCBVHK5R
   INTO :SELECT_RCBVHK5R.EMPLOYEE_NUMBER  :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHK5R = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#037');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHK5R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHK6R                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHK6R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHK6R: PROC;
0SELECT_RCBVHK6R = '';
0EXEC SQL
   FETCH CURS_RCBVHK6R
   INTO :SELECT_RCBVHK6R.PRODUCT_TYPE    :WRK_INDNULL,
        :SELECT_RCBVHK6R.ORIGIN          :WRK_INDNULL,
        :SELECT_RCBVHK6R.SEQUENCE_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHK6R.COUNTRY_NUMBER  :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHK6R = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#038');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHK6R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHK7R                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHK7R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHK7R: PROC;
0SELECT_RCBVHK7R = '';
0EXEC SQL
   FETCH CURS_RCBVHK7R
   INTO :SELECT_RCBVHK7R.PRODUCT_TYPE    :WRK_INDNULL,
        :SELECT_RCBVHK7R.MODEL_NUMBER    :WRK_INDNULL,
        :SELECT_RCBVHK7R.ORIGIN          :WRK_INDNULL,
        :SELECT_RCBVHK7R.SEQUENCE_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHK7R = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#039');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHK7R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHK9R                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHK9R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHK9R: PROC;
0SELECT_RCBVHK9R = '';
0EXEC SQL
   FETCH CURS_RCBVHK9R
   INTO :SELECT_RCBVHK9R.MES_ORDER_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHK9R.NAME_CODE        :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHK9R = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#040');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHK9R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKAR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKAR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKAR: PROC;
0EXEC SQL
   FETCH CURS_RCBVHKAR
   INTO :SELECT_RCBVHKAR.CONTRACT_NUMBER  :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   END;
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKAR = TRUE;
     SELECT_RCBVHKAR.CONTRACT_NUMBER = HIGH(15);
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#041');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKAR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKBR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKBR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKBR: PROC;
0EXEC SQL
   FETCH CURS_RCBVHKBR
   INTO :SELECT_RCBVHKBR.CONTRACT_NUMBER  :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   END;
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKBR = TRUE;
     SELECT_RCBVHKBR.CONTRACT_NUMBER = HIGH(15);
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#042');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKBR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKCR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKBR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKCR: PROC;
0SELECT_RCBVHKCR = '';
0EXEC SQL
   FETCH CURS_RCBVHKCR
   INTO :SELECT_RCBVHKCR.EMPLOYEE_NUMBER  :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKCR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#043');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKCR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKER                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKER                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKER: PROC;
0SELECT_RCBVHKER = '';
0EXEC SQL
   FETCH CURS_RCBVHKER
   INTO :SELECT_RCBVHKER.PRODUCT_TYPE    :WRK_INDNULL,
        :SELECT_RCBVHKER.MODEL_NUMBER    :WRK_INDNULL,
        :SELECT_RCBVHKER.ORIGIN          :WRK_INDNULL,
        :SELECT_RCBVHKER.SEQUENCE_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKER = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#044');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKER;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKGR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKGR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKGR: PROC;
0SELECT_RCBVHKGR = '';
0EXEC SQL
   FETCH CURS_RCBVHKGR
   INTO :SELECT_RCBVHKGR.MES_ORDER_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHKGR.NAME_CODE        :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKGR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#045');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKGR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKHR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKHR                         */
 /*                                                                  */
 /* HISTORY          : PTM 908: CHANGED "INTO"-FIELDS                */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKHR: PROC;
0SELECT_RCBVHKHR = '';
0EXEC SQL
   FETCH CURS_RCBVHKHR
   INTO :SELECT_RCBVHKHR.CUSTOMER_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHKHR.CUSTOMER_NAME   :WRK_INDNULL,
        :SELECT_RCBVHKHR.END_DATE        :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKHR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#046');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKHR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKIR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKIR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKIR: PROC;
0SELECT_RCBVHKIR = '';
0EXEC SQL
   FETCH CURS_RCBVHKIR
   INTO :SELECT_RCBVHKIR.CUSTOMER_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKIR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#047');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKIR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKJR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKJR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKJR: PROC;
0SELECT_RCBVHKJR = '';
0EXEC SQL
   FETCH CURS_RCBVHKJR
   INTO :SELECT_RCBVHKJR.PRODUCT_TYPE :WRK_INDNULL,
        :SELECT_RCBVHKJR.MODEL_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHKJR.PRODUCT_NAME :WRK_INDNULL,         /*PCR0016*/
        :SELECT_RCBVHKJR.END_DATE     :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKJR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#048');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKJR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKKR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKKR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKKR: PROC;
0SELECT_RCBVHKKR = '';
0EXEC SQL
   FETCH CURS_RCBVHKKR
   INTO :SELECT_RCBVHKKR.PRODUCT_TYPE :WRK_INDNULL,
        :SELECT_RCBVHKKR.MODEL_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKKR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#049');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKKR;
1/**************************************************** START PTM0541 */
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKLR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKLR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKLR: PROC;
0SELECT_RCBVHKLR = '';
0EXEC SQL
   FETCH CURS_RCBVHKLR
   INTO :SELECT_RCBVHKLR.PRODUCT_TYPE :WRK_INDNULL,
        :SELECT_RCBVHKLR.MODEL_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHKLR.PRODUCT_NAME :WRK_INDNULL,         /*PCR0016*/
        :SELECT_RCBVHKLR.END_DATE :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKLR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#050');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKLR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKMR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKMR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKMR: PROC;
0SELECT_RCBVHKMR = '';
0EXEC SQL
   FETCH CURS_RCBVHKMR
   INTO :SELECT_RCBVHKMR.PRODUCT_TYPE :WRK_INDNULL,
        :SELECT_RCBVHKMR.MODEL_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKMR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#051');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKMR;                     /* END PTM0541 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKNR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKNR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKNR: PROC;
0EXEC SQL
   FETCH CURS_RCBVHKNR
   INTO :SELECT_RCBVHKNR.CUSTOMER_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHKNR.CONTRACT_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0)
   DO WHILE(SELECT_RCBVHKNR_KEY > SELECT_QCH0BCSO_KEY);
     CALL RCBHK0M_FETCH_CURS_QCH0BCSO;      /* FETCH NEXT CHIS-ROW   */
   END;
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKNR = TRUE;
     SELECT_RCBVHKNR.CUSTOMER_NUMBER = HIGH(08);
     SELECT_RCBVHKNR.CONTRACT_NUMBER = HIGH(15);
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#052');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKNR;                     /* END T0035   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKOR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKOR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKOR: PROC;
0SELECT_RCBVHKOR = '';
0EXEC SQL
   FETCH CURS_RCBVHKOR
   INTO :SELECT_RCBVHKOR.SERVICE_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKOR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#053');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKOR;                     /* END T0075   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKPR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKPR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKPR: PROC;
0SELECT_RCBVHKPR = '';
0EXEC SQL
   FETCH CURS_RCBVHKPR
   INTO :SELECT_RCBVHKPR.SERVICE_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHKPR.GROUP_ID :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_RCB210_FOUND = TRUE;
     SWITCH_END_OF_CURS_RCBVHKPR = TRUE;
   END;
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKPR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#054');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKPR;                     /* END T0210   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKQR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKQR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKQR: PROC;
0SELECT_RCBVHKQR = '';
0EXEC SQL
   FETCH CURS_RCBVHKQR
   INTO :SELECT_RCBVHKQR.CONTRACT_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_RCB240_FOUND = TRUE;
     SWITCH_END_OF_CURS_RCBVHKQR = TRUE;
   END;
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKQR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#055');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKQR;                     /* END T0240   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKRR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKRR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKRR: PROC;
0SELECT_RCBVHKRR = '';
0EXEC SQL
   FETCH CURS_RCBVHKRR
   INTO :SELECT_RCBVHKRR.SERVICE_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0)
   DO;
     SWITCH_RCB210_FOUND = TRUE;
     SWITCH_END_OF_CURS_RCBVHKRR = TRUE;
   END;
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKRR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#056');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKRR;                     /* END T0210   */
1                                                     /* SOC PTM1311 */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKSR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKSR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKSR: PROC;
0SELECT_RCBVHKSR = '';
0EXEC SQL
   FETCH CURS_RCBVHKSR
   INTO :SELECT_RCBVHKSR.COUNTRY_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKSR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#901');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKSR;
                                                      /* EOC PTM1311 */
1                                                    /* SOC RB01320  */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKTR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKTR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKTR: PROC;
0SELECT_RCBVHKTR = '';
0EXEC SQL
   FETCH CURS_RCBVHKTR
   INTO :SELECT_RCBVHKTR.COUNTRY_NUMBER,
        :SELECT_RCBVHKTR.PRODUCT_TYPE,
        :SELECT_RCBVHKTR.REAL_SERIAL_NUMBER,
        :SELECT_RCBVHKTR.DUMMY_ORIGIN,
        :SELECT_RCBVHKTR.DUMMY_SEQUENCE_NUM
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKTR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#132');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKTR;
                                                      /* EOC RB01320 */
                                                      /* SOC RC01325 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKUR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKUR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKUR: PROC;
0SELECT_RCBVHKUR = '';
0EXEC SQL
   FETCH CURS_RCBVHKUR
   INTO :SELECT_RCBVHKUR.PRODUCT_TYPE :WRK_INDNULL,
        :SELECT_RCBVHKUR.MODEL_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHKUR.END_DATE     :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKUR = TRUE;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#133');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKUR;
                                                 /* SOC CEDS00000736 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKVR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKVR                         */
 /*                                                                  */
 /********************************************************************/
0/*RCBHK0M_FETCH_CURS_RCBVHKVR: PROC;

0SELECT_RCBVHKVR = '';
0EXEC SQL
   FETCH CURS_RCBVHKVR
   INTO :SELECT_RCBVHKVR.PRODUCT_TYPE :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
       CALL RCBHK0M_DELETE_RCBVHKJR;
       WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
       WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#134');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKVR;*/
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKWR                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKWR                         */
 /*                                                                  */
 /********************************************************************/
0/*RCBHK0M_FETCH_CURS_RCBVHKWR: PROC;
0SELECT_RCBVHKWR = '';
0EXEC SQL
   FETCH CURS_RCBVHKWR
   INTO :SELECT_RCBVHKWR.PRODUCT_TYPE :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
       CALL RCBHK0M_DELETE_RCBVHKUR;
       WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
       WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#135');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKWR;*/
                                                      /* EOC RC01325 */
                                                 /* EOC CEDS00000736 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKQS                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKQS                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKQS: PROC;
0EXEC SQL
   FETCH CURS_RCBVHKQS
   INTO :SELECT_RCBVHKQS.CUSTOMER_NUMBER :WRK_INDNULL,
        :SELECT_RCBVHKQS.CONTRACT_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100)
   DO;
     SWITCH_END_OF_CURS_RCBVHKQS = TRUE;
     SELECT_RCBVHKQS.CUSTOMER_NUMBER = HIGH(08);
     SELECT_RCBVHKQS.CONTRACT_NUMBER = HIGH(15);
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#057');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKQS;                     /* END T0210   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_RCBVHKQT                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH CURSOR RCBVHKQT                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_FETCH_CURS_RCBVHKQT: PROC;
0EXEC SQL
   FETCH CURS_RCBVHKQT
   INTO :SELECT_RCBVHKQT.CONTRACT_NUMBER :WRK_INDNULL
   ;
0SELECT (SQLCODE);
 WHEN (0);
 WHEN (+100) /* END_OF_FILE */
   DO;
     SWITCH_LOOP = FALSE;
     SWITCH_END_OF_CURS_RCBVHKQT = TRUE;
     SELECT_RCBVHKQT.CONTRACT_NUMBER = HIGH(15);
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#058');
   END;
 END;
0END RCBHK0M_FETCH_CURS_RCBVHKQT;                     /* END T0240   */
1                                                   /* START PTM1057 */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_FETCH_CURS_QCH0BCSO                   */
 /*                                                                  */
 /* DESCRIPTION      : FETCH A RECORD FROM CHIS-LAM QCH0BCSO         */
 /*                                                                  */
 /********************************************************************/
 RCBHK0M_FETCH_CURS_QCH0BCSO: PROC;         /* READ CHIS TABLE       */
 SEARCH_ARG.ACCMODE = 'FETCH';
 CALL QCH0BCM (SEARCH_PTR,DATA_PTR,SQLCA_PTR);
 SELECT (SQLCA.SQLCODE);
   WHEN (0)
     DO;
       SELECT_QCH0BCSO_KEY = QCH0BCSO.IAGRCID||'         '||
                             QCH0BCSO.ICUSUSE;
     END;
   WHEN (+100)
     DO;
       SELECT_QCH0BCSO_KEY = HIGH(23);
     END;
   WHEN (+9999)
     DO;
       CALL RCBHK0M_ERROR (NULL, 'OTHER', '#059');
     END;
   OTHERWISE
     DO;
       CALL RCBHK0M_ERROR (ADDR (SQLCA),'DB2','#060');
     END;
 END;
 END RCBHK0M_FETCH_CURS_QCH0BCSO;
                                                      /* END PTM1057 */
                                                 /* SOC CEDS00000736 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CHECK_INVENTORY                       */
 /*                                                                  */
 /* DESCRIPTION      : FETCH RECORD FROM INVENTORY TABLE             */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CHECK_INVENTORY: PROC;
 SELECT_RECORD.SQL_CHECK = 0;                            /* S1370532 */
  EXEC SQL
    SELECT 1
    INTO   :SELECT_RECORD.SQL_CHECK :WRK_INDNULL
    FROM   RCBV0300_HW_REAL
    WHERE  PRODUCT_TYPE= :WRK_PROD_TYPE
    FETCH  FIRST 1 ROW ONLY
    ;
    SELECT (SQLCODE);
    WHEN (0);
    WHEN (+100);
    OTHERWISE
     DO;
      CALL RCBHK0M_ERROR (ADDR (SQLCA),
                             'DB2',
                            '#135');
     END;
    END;

 IF SELECT_RECORD.SQL_CHECK ¬= '1' THEN
  DO;
   EXEC SQL
    SELECT 1
    INTO   :SELECT_RECORD.SQL_CHECK :WRK_INDNULL
    FROM   RCBV0051_PI_HW_PR
    WHERE  PRODUCT_TYPE= :WRK_PROD_TYPE
    FETCH  FIRST 1 ROW ONLY
    ;
    SELECT (SQLCODE);
    WHEN (0);
    WHEN (+100);
    OTHERWISE
     DO;
      CALL RCBHK0M_ERROR (ADDR (SQLCA),
                             'DB2',
                            '#136');
     END;
    END;
  END;

 IF SELECT_RECORD.SQL_CHECK ¬= '1' THEN
  DO;
    EXEC SQL
      SELECT 1
      INTO   :SELECT_RECORD.SQL_CHECK :WRK_INDNULL
      FROM   RCBV0260_HW_IN_ORD
      WHERE  PRODUCT_TYPE= :WRK_PROD_TYPE
      FETCH  FIRST 1 ROW ONLY
      ;
      SELECT (SQLCODE);
       WHEN (0);
       WHEN (+100) ;
       OTHERWISE
        DO;
         CALL RCBHK0M_ERROR (ADDR (SQLCA),
                             'DB2',
                            '#137');
        END;
      END;
   END;

 IF SELECT_RECORD.SQL_CHECK ¬= '1' THEN
  DO;
   EXEC SQL
     SELECT 1
     INTO   :SELECT_RECORD.SQL_CHECK :WRK_INDNULL
     FROM  RCBV0250_MES_PR
     WHERE  FUTURE_TYPE = :WRK_PROD_TYPE
     FETCH  FIRST 1 ROW ONLY
     ;
     SELECT (SQLCODE);
     WHEN (0);
     WHEN (+100);
     OTHERWISE
      DO;
       CALL RCBHK0M_ERROR (ADDR (SQLCA),
                                  'DB2',
                                  '#138');
      END;
     END;
  END;

 IF SELECT_RECORD.SQL_CHECK ¬= '1' THEN
  DO;
   EXEC SQL
     SELECT 1
     INTO   :SELECT_RECORD.SQL_CHECK :WRK_INDNULL
     FROM   RCBV0330_MES_PO
     WHERE  FUTURE_TYPE = :WRK_PROD_TYPE
     FETCH  FIRST 1 ROW ONLY
     ;
     SELECT (SQLCODE);
     WHEN (0);
     WHEN (+100);
     OTHERWISE
      DO;
       CALL RCBHK0M_ERROR (ADDR (SQLCA),
                                  'DB2',
                                  '#139');
      END;
     END;
  END;
 END RCBHK0M_CHECK_INVENTORY;

                                                 /* EOC CEDS00000736 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHK3R                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHK3R                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHK3R: PROC;
 WRK_COUNT = 0;
0EXEC SQL
   SELECT COUNT(*)
   INTO   :WRK_COUNT
   FROM   RCBV0220_SUPPL_CTR
   WHERE  PRODUCT_TYPE      = :SELECT_RCBVHK3R.PRODUCT_TYPE
   AND    ORIGIN            = :SELECT_RCBVHK3R.ORIGIN
   AND    SEQUENCE_NUMBER   = :SELECT_RCBVHK3R.SEQUENCE_NUMBER
   AND    COUNTRY_NUMBER    = :SELECT_RCBVHK3R.COUNTRY_NUMBER
   AND    TYPE_OF_WARRANTY  IS NOT NULL
   AND    EFFECTIVE_DATE    > :SELECT_RCBVHK3R.END_DATE
   ;
0IF (SQLCODE = 0 | SQLCODE = +100)
 THEN
   DO;
     IF WRK_COUNT > 0
     THEN
       DO;
         EXEC SQL
           DELETE
           FROM   RCBV0220_SUPPL_CTR
           WHERE  CURRENT OF CURS_RCBVHK3R
           ;
         SELECT (SQLCODE);
         WHEN (0) DO;
           WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
           WRK_CHKP_CNT_STEPS  =                      /* PTM 908     */
                  WRK_CHKP_CNT_STEPS + 1;             /* PTM 908     */
           END;
         OTHERWISE
           DO;
             CALL RCBHK0M_ERROR (ADDR (SQLCA),
                                 'DB2',
                                 '#061');
           END;
         END;
       END;
   END;
 ELSE
   DO;
   CALL RCBHK0M_ERROR (ADDR (SQLCA),
                       'DB2',
                       '#062');
   END;
0END RCBHK0M_DELETE_RCBVHK3R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHK4R                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHK4R                           */
 /*                                                                  */
 /* HISTORY          : PTM 908 THE SPECIAL CONSIDERATIONS WHEN       */
 /*                    DELETING FROM RCBV0240_SERV_CTR ARE REMOVED:  */
 /*                    WE NOW REVERT TO STANDARD HOUSEKEEPING        */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHK4R: PROC;
 EXEC SQL
   DELETE
   FROM   RCBV0240_SERV_CTR
   WHERE  CURRENT OF CURS_RCBVHK4R
   ;
 SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#063');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHK4R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHK5R                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHK5R                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHK5R: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0020_EMPLOYEE
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    EMPLOYEE_NUMBER = :SELECT_RCBVHK5R.EMPLOYEE_NUMBER
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#064');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHK5R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHK6R                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHK6R                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHK6R: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0050_HW_PR
   WHERE  PRODUCT_TYPE    = :SELECT_RCBVHK6R.PRODUCT_TYPE
   AND    ORIGIN          = :SELECT_RCBVHK6R.ORIGIN
   AND    SEQUENCE_NUMBER = :SELECT_RCBVHK6R.SEQUENCE_NUMBER
   AND    COUNTRY_NUMBER  = :SELECT_RCBVHK6R.COUNTRY_NUMBER
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#065');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHK6R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHK7R                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHK7R                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHK7R: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0060_SW_PR
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    PRODUCT_TYPE    = :SELECT_RCBVHK7R.PRODUCT_TYPE
   AND    MODEL_NUMBER    = :SELECT_RCBVHK7R.MODEL_NUMBER
   AND    ORIGIN          = :SELECT_RCBVHK7R.ORIGIN
   AND    SEQUENCE_NUMBER = :SELECT_RCBVHK7R.SEQUENCE_NUMBER
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#066');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHK7R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHK9R                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHK9R                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHK9R: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0100_MES_ORDER
   WHERE  COUNTRY_NUMBER   = :WRK_COUNTRY_NUMBER
   AND    MES_ORDER_NUMBER = :SELECT_RCBVHK9R.MES_ORDER_NUMBER
   AND    NAME_CODE        = :SELECT_RCBVHK9R.NAME_CODE
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#067');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHK9R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHKAR                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHKAR                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHKAR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0030_CONTRACT
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER AND
          CONTRACT_NUMBER = :SELECT_RCBVHKAR.CONTRACT_NUMBER
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#068');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHKAR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHKHR                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHKHR                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHKHR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0010_CUSTOMER
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER AND
          CUSTOMER_NUMBER = :SELECT_RCBVHKHR.CUSTOMER_NUMBER
       /* AND END_DATE    < :WRK_GROUP_DATE /*S1540038*/ /* S1277113 */
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#069');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHKHR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHKJR                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHKJR                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHKJR: PROC;

0EXEC SQL
   DELETE
   FROM   RCBV0070_HW_PO
 /*WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER            SOC RC01325 */
 /*AND    PRODUCT_TYPE   = :SELECT_RCBVHKJR.PRODUCT_TYPE              */
   WHERE  PRODUCT_TYPE   = :SELECT_RCBVHKJR.PRODUCT_TYPE /*EOC RC01325*/
   AND    MODEL_NUMBER   = :SELECT_RCBVHKJR.MODEL_NUMBER
   AND    COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER        /* CEDS00000620 */
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
                                                    /*SOC CEDS00000699*/
   /*PUT SKIP LIST('CAN NOT DELETE:',SELECT_RCBVHKJR.PRODUCT_TYPE,
                 SELECT_RCBVHKJR.MODEL_NUMBER);*/   /*EOC CEDS00000699*/
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#070');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHKJR;
1/**************************************************** START PTM0541 */
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHKLR                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHKLR                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHKLR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0080_SW_PO
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    PRODUCT_TYPE   = :SELECT_RCBVHKLR.PRODUCT_TYPE
   AND    MODEL_NUMBER   = :SELECT_RCBVHKLR.MODEL_NUMBER
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#071');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHKLR;                         /* END PTM0541 */
1/**************************************************** START T0035   */
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHKNR                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHKNR                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHKNR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0035_CUST_CTR
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    CONTRACT_NUMBER = :SELECT_RCBVHKNR.CONTRACT_NUMBER
   AND    CUSTOMER_NUMBER = :SELECT_RCBVHKNR.CUSTOMER_NUMBER
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#072');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHKNR;                         /* END T0035   */
1/**************************************************** START T0075   */
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHKOR                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHKOR                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHKOR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0075_SE_PO
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    SERVICE_NUMBER = :SELECT_RCBVHKOR.SERVICE_NUMBER
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#073');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHKOR;                         /* END T0075   */
                                                      /* SOC RB01320 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHKTR                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHKTR                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHKTR: PROC;
 EXEC SQL
   DELETE
   FROM   RCBV0125_DMMY_REAL
   WHERE  COUNTRY_NUMBER     = :SELECT_RCBVHKTR.COUNTRY_NUMBER
   AND    PRODUCT_TYPE       = :SELECT_RCBVHKTR.PRODUCT_TYPE
   AND    REAL_SERIAL_NUMBER = :SELECT_RCBVHKTR.REAL_SERIAL_NUMBER
   AND    DUMMY_ORIGIN       = :SELECT_RCBVHKTR.DUMMY_ORIGIN
   AND    DUMMY_SEQUENCE_NUM = :SELECT_RCBVHKTR.DUMMY_SEQUENCE_NUM
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#130');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHKTR;                         /* EOC RB01320 */
                                                      /* SOC RC01325 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_DELETE_RCBVHKUR                       */
 /*                                                                  */
 /* DESCRIPTION      : DELETE ROW RCBVHKUR                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_DELETE_RCBVHKUR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0400_PO_MOD1
   WHERE  PRODUCT_TYPE   = :SELECT_RCBVHKUR.PRODUCT_TYPE
   AND    MODEL_NUMBER   = :SELECT_RCBVHKUR.MODEL_NUMBER
   AND    COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER       /* CEDS00000620 */
   ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#125');
   END;
 END;
0END RCBHK0M_DELETE_RCBVHKUR;
                                                      /* EOC RC01325 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHK3R                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR  RCBVHK3R                        */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHK3R:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHK3R
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#074');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHK3R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHK4R                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHK4R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHK4R:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHK4R
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#075');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHK4R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHK5R                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHK5R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHK5R:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHK5R
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#076');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHK5R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHK6R                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHK6R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHK6R:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHK6R
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#077');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHK6R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHK7R                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHK7R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHK7R:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHK7R
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#078');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHK7R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHK9R                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHK9R                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHK9R:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHK9R
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#079');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHK9R;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKAR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKAR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKAR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKAR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#080');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKAR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKBR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKBR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKBR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKBR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#081');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKBR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKCR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKCR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKCR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKCR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#082');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKCR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKER                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKER                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKER:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKER
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#083');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKER;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKGR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKGR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKGR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKGR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#084');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKGR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKHR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKHR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKHR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKHR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#085');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKHR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKIR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKIR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKIR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKIR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#086');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKIR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKJR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKJR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKJR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKJR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#087');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKJR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKKR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKKR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKKR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKKR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#088');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKKR;
1/**************************************************** START PTM0541 */
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKLR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKLR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKLR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKLR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#089');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKLR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKMR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKMR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKMR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKMR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#090');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKMR;                     /* END PTM0541 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKNR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKNR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKNR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKNR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#091');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKNR;                     /* END T0035   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKOR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKOR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKOR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKOR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#092');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKOR;                     /* END T0075   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKPR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKPR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKPR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKPR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#093');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKPR;                     /* END T0210   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKQR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKQR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKQR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKQR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#094');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKQR;                     /* END T0240   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKRR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKRR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKRR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKRR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#095');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKRR;                     /* END T0210   */
1                                                     /* SOC PTM1311 */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKSR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKSR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKSR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKSR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#902');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKSR;
                                                      /* EOC PTM1311 */
1                                                     /* SOC RB01320 */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKTR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKTR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKTR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKTR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#902');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKTR;
                                                      /* EOC RB01320 */
                                                      /* SOC RC01325 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKUR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKUR                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKUR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKUR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#139');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKUR;
                                                 /* SOC CEDS00000736 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKVR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKVR                         */
 /*                                                                  */
 /********************************************************************/
0/*RCBHK0M_CLOSE_CURS_RCBVHKVR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKVR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#140');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKVR;*/
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKWR                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKWR                         */
 /*                                                                  */
 /********************************************************************/
0/*RCBHK0M_CLOSE_CURS_RCBVHKWR:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKWR
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#141');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKWR;*/
                                                      /* EOC RC01325 */
                                                 /* EOC CEDS00000736 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKQS                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKQS                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKQS:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKQS
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#096');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKQS;                     /* END T0210   */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_RCBVHKQT                   */
 /*                                                                  */
 /* DESCRIPTION      : CLOSE CURSOR RCBVHKQT                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CLOSE_CURS_RCBVHKQT:  PROC;
0EXEC SQL
  CLOSE CURS_RCBVHKQT
  ;
0SELECT (SQLCODE);
 WHEN (0);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#097');
   END;
 END;
0END RCBHK0M_CLOSE_CURS_RCBVHKQT;                     /* END T0240   */
1                                                   /* START PTM1057 */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CLOSE_CURS_QCH0BCSO                   */
 /*                                                                  */
 /* DESCRIPTION      : ENDING ACTIONS FOR CHIS-LAM QCH0BCSO FOR      */
 /*                    SPECIFIED COUNTRY                             */
 /*                                                                  */
 /********************************************************************/
 RCBHK0M_CLOSE_CURS_QCH0BCSO: PROC;         /* CLOSE CHIS TABLE      */
 SEARCH_ARG.ACCMODE = 'CLOSE';
 CALL QCH0BCM (SEARCH_PTR, DATA_PTR, SQLCA_PTR);
 SELECT (SQLCA.SQLCODE);
   WHEN (0);
   WHEN (+9999)
     DO;
       CALL RCBHK0M_ERROR (NULL, 'OTHER', '#098');
     END;
   OTHERWISE
     DO;
       CALL RCBHK0M_ERROR (ADDR(SQLCA), 'DB2', '#099');
     END;
   END;
 END RCBHK0M_CLOSE_CURS_QCH0BCSO;
                                                      /* END PTM1057 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_CTRY                              */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP THE COUNTRY TABLES                  */
 /*                    USING THE HOUSEKEEP MINIMAL DATE              */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_CTRY:  PROC;
0                             /* HOUSEKEEP TABLE RCBT0560_XACTION    */
 IF WRK_HKP_STAGE       > 'B560' &
    WRK_CTRY_SELECT (8) = '1'
 THEN
   DO;
     WRK_TIMESTAMP = WRK_CTRY_DATES (8)||'-00.00.00.000000';
     /*PUT SKIP LIST('WRK_TIMESTAMP',WRK_TIMESTAMP);*//*CEDS00000699*/
     CALL RCBHK0M_HKP_RCBV0560_XACTION;
     WRK_HKP_STAGE  = 'B560';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0400_PO_MOD1    */
0                             /* HOUSEKEEP TABLE RCBT0420_PO_MOD2    */
 IF WRK_HKP_STAGE      > 'B420' &
    WRK_CTRY_SELECT (6) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (6);
     CALL RCBHK0M_HKP_RCBV0420_PO_MOD2;
     WRK_HKP_STAGE  = 'B420';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
 IF WRK_HKP_STAGE       > 'B400' &
    WRK_CTRY_SELECT (6) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (6);
     CALL RCBHK0M_HKP_RCBV0400_PO_MOD1;
     WRK_HKP_STAGE  = 'B400';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0370_OU_MOD     */
0                             /* HOUSEKEEP TABLE RCBT0380_HW_PR_MOD  */
 IF WRK_HKP_STAGE      > 'B380' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0380_HW_PR_MOD;
     WRK_HKP_STAGE  = 'B380';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
 IF WRK_HKP_STAGE       > 'B370' &
    WRK_CTRY_SELECT (2) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (2);
     CALL RCBHK0M_HKP_RCBV0370_OU_MOD;
     WRK_HKP_STAGE  = 'B370';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0360_EMPL_MOD   */
 IF WRK_HKP_STAGE       > 'B360' &
    WRK_CTRY_SELECT (1) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (1);
     CALL RCBHK0M_HKP_RCBV0360_EMPL_MOD;
     WRK_HKP_STAGE  = 'B360';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0350_CUST_MOD   */
 IF WRK_HKP_STAGE       > 'B350' &
    WRK_CTRY_SELECT (3) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (3);
     CALL RCBHK0M_HKP_RCBV0350_CUST_MOD;
     WRK_HKP_STAGE  = 'B350';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0340_HW_ADDR    */
 IF WRK_HKP_STAGE       > 'B340' &
    (WRK_CTRY_SELECT (3) = '1'  |
     WRK_CTRY_SELECT (7) = '1'  )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (3),
                             WRK_CTRY_DATES (7),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0340_HW_ADDR;
     WRK_HKP_STAGE  = 'B340';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0330_MES_PO     */
 IF WRK_HKP_STAGE      > 'B330' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0330_MES_PO;
     WRK_HKP_STAGE  = 'B330';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0320_SW_ON_HW   */
 IF WRK_HKP_STAGE      > 'B320' &
    (WRK_CTRY_SELECT (5) = '1' |
     WRK_CTRY_SELECT (7) = '1' )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (5),
                             WRK_CTRY_DATES (7),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0320_SW_ON_HW;
     WRK_HKP_STAGE  = 'B320';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0310_FEATURES   */
 IF WRK_HKP_STAGE      > 'B310' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0310_FEATURES;
     WRK_HKP_STAGE  = 'B310';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0300_HW_REAL    */
 IF WRK_HKP_STAGE      > 'B300' &
    (WRK_CTRY_SELECT (6) = '1' |
     WRK_CTRY_SELECT (7) = '1' )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (6),
                             WRK_CTRY_DATES (7),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0300_HW_REAL;
     WRK_HKP_STAGE  = 'B300';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0270_SW_IN_ORD  */
 IF WRK_HKP_STAGE       > 'B270' &
    (WRK_CTRY_SELECT (2) = '1'  |
     WRK_CTRY_SELECT (5) = '1'  )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (2),
                             WRK_CTRY_DATES (5),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0270_SW_IN_ORD;
     WRK_HKP_STAGE  = 'B270';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0260_HW_IN_ORD  */
 IF WRK_HKP_STAGE       > 'B260' &
    (WRK_CTRY_SELECT (2) = '1'  |
     WRK_CTRY_SELECT (7) = '1'  )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (2),
                             WRK_CTRY_DATES (7),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0260_HW_IN_ORD;
     WRK_HKP_STAGE  = 'B260';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0250_MES_PR     */
 IF WRK_HKP_STAGE      > 'B250' &
    (WRK_CTRY_SELECT (6) = '1' |
     WRK_CTRY_SELECT (7) = '1' )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (6),
                             WRK_CTRY_DATES (7),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0250_MES_PR;
     WRK_HKP_STAGE  = 'B250';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0240_SERV_CTR   */
 IF WRK_HKP_STAGE      > 'B240' &
    (WRK_CTRY_SELECT (3) = '1' |
     WRK_CTRY_SELECT (7) = '1' )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (3),
                             WRK_CTRY_DATES (7),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0240_SERV_CTR;
     WRK_HKP_STAGE  = 'B240';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0220_SUPPL_CTR  */
 IF WRK_HKP_STAGE      > 'B220' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0220_SUPPL_CTR;
     WRK_HKP_STAGE  = 'B220';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0210_ADD_SERV   */
 IF WRK_HKP_STAGE       > 'B210' &
    WRK_CTRY_SELECT (3) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (3);
     CALL RCBHK0M_HKP_RCBV0210_ADD_SERV;
     WRK_HKP_STAGE  = 'B210';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0200_SW_CUST    */
 IF WRK_HKP_STAGE       > 'B200' &
    (WRK_CTRY_SELECT (3) = '1'  |
     WRK_CTRY_SELECT (5) = '1'  )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (3),
                             WRK_CTRY_DATES (5),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0200_SW_CUST;
     WRK_HKP_STAGE  = 'B200';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0190_HW_CUST    */
 IF WRK_HKP_STAGE       > 'B190' &
    (WRK_CTRY_SELECT (3) = '1'  |
     WRK_CTRY_SELECT (7) = '1'  )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (3),
                             WRK_CTRY_DATES (7),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0190_HW_CUST;
     WRK_HKP_STAGE  = 'B190';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0180_OU_SW      */
 IF WRK_HKP_STAGE       > 'B180' &
    (WRK_CTRY_SELECT (2) = '1'  |
     WRK_CTRY_SELECT (5) = '1'  )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (2),
                             WRK_CTRY_DATES (5),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0180_OU_SW;
     WRK_HKP_STAGE  = 'B180';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0170_OU_HW      */
 IF WRK_HKP_STAGE       > 'B170' &
    (WRK_CTRY_SELECT (2) = '1'  |
     WRK_CTRY_SELECT (7) = '1'  )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (2),
                             WRK_CTRY_DATES (7),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0170_OU_HW;
     WRK_HKP_STAGE  = 'B170';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0160_EMPL_ADDR  */
 IF WRK_HKP_STAGE       > 'B160' &
    WRK_CTRY_SELECT (1) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (1);
     CALL RCBHK0M_HKP_RCBV0160_EMPL_ADDR;
     WRK_HKP_STAGE  = 'B160';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0150_CUST_ADDR  */
 IF WRK_HKP_STAGE       > 'B150' &
    WRK_CTRY_SELECT (3) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (3);
     CALL RCBHK0M_HKP_RCBV0150_CUST_ADDR;
     WRK_HKP_STAGE  = 'B150';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0140_OU_EMP     */
 IF WRK_HKP_STAGE       > 'B140' &
    (WRK_CTRY_SELECT (1) = '1'  |
     WRK_CTRY_SELECT (2) = '1'  )
 THEN
   DO;
     CALL RCBHK0M_MAX_DATES (WRK_CTRY_DATES (1),
                             WRK_CTRY_DATES (2),
                             WRK_GROUP_DATE);
     CALL RCBHK0M_HKP_RCBV0140_OU_EMP;
     WRK_HKP_STAGE  = 'B140';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0130_OU_STRUCT  */
 IF WRK_HKP_STAGE       > 'B130' &
    WRK_CTRY_SELECT (2) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (2);
     CALL RCBHK0M_HKP_RCBV0130_OU_STRUCT;
     WRK_HKP_STAGE  = 'B130';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
                                                          /* SOC A17 */
0                     /* HOUSEKEEP TABLE  RCBV0125_DMMY_REAL */
 /* IF WRK_HKP_STAGE      > 'B125' &             /* SOC CEDS00000762 */
 /* WRK_CTRY_SELECT (7) = '1'
 /* THEN
 /*   DO;
 /*    WRK_GROUP_DATE = WRK_CTRY_DATES (7);
 /*    CALL RCBHK0M_HKP_RCBV0125_DMMY_REAL;
 /*    WRK_HKP_STAGE  = 'B125';
 /*    CALL RCBHK0M_CHKP_ISSUE;
 /*   END;                                     *//* EOC CEDS00000762 */
                                                          /* EOC A17 */
0                             /* HOUSEKEEP TABLE RCBT0110_HW_STATUS  */
 IF WRK_HKP_STAGE      > 'B110' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0110_HW_STATUS;
     WRK_HKP_STAGE  = 'B110';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0100_MES_ORDER  */
 IF WRK_HKP_STAGE      > 'B100' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0100_MES_ORDER;
     WRK_HKP_STAGE  = 'B100';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0060_SW_PR      */
 IF WRK_HKP_STAGE      > 'B080' &
    WRK_CTRY_SELECT (5) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (5);
     CALL RCBHK0M_HKP_RCBV0060_SW_PR;
     WRK_HKP_STAGE  = 'B080';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0075_SE_PO      */
 IF WRK_HKP_STAGE      > 'B075' &
    WRK_CTRY_SELECT (3) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (3);
     CALL RCBHK0M_HKP_RCBV0075_SE_PO;
     WRK_HKP_STAGE  = 'B075';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0070_HW_PO      */
 IF WRK_HKP_STAGE      > 'B070' &
    WRK_CTRY_SELECT (6) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (6);
     CALL RCBHK0M_HKP_RCBV0070_HW_PO;
     WRK_HKP_STAGE  = 'B070';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0080_SW_PO      */
 IF WRK_HKP_STAGE      > 'B060' &
    WRK_CTRY_SELECT (4) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (4);
     CALL RCBHK0M_HKP_RCBV0080_SW_PO;
     WRK_HKP_STAGE  = 'B060';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0050_HW_PR      */
 IF WRK_HKP_STAGE      > 'B050' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0050_HW_PR;
     WRK_HKP_STAGE  = 'B050';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
                                                 /* SOC CEDS00000762 */
                              /* HOUSEKEEP TABLE  RCBV0125_DMMY_REAL */
 IF WRK_HKP_STAGE      > 'B045' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0125_DMMY_REAL;
     WRK_HKP_STAGE  = 'B045';
     CALL RCBHK0M_CHKP_ISSUE;
   END;                                          /* EOC CEDS00000762 */
0                             /* HOUSEKEEP TABLE RCBT0040_OU         */
 IF WRK_HKP_STAGE       > 'B040' &
    WRK_CTRY_SELECT (2) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (2);
     CALL RCBHK0M_HKP_RCBV0040_OU;
     WRK_HKP_STAGE  = 'B040';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0035_CUST_CTR   */
 IF WRK_HKP_STAGE       > 'B035' &
    WRK_CTRY_SELECT (3) = '1'
 THEN
   DO;
     CALL RCBHK0M_RETRIEVE_RCB161;                   /* SOC S1235633 */
     IF WRK_CHIS_FOUND = 'Y' THEN
     DO;                                             /* EOC S1235633 */
     WRK_GROUP_DATE = WRK_CTRY_DATES (3);
     CALL RCBHK0M_HKP_RCBV0035_CUST_CTR;
     WRK_HKP_STAGE  = 'B035';
     CALL RCBHK0M_CHKP_ISSUE;
     END;                                                /* S1235633 */
   END;
0                             /* HOUSEKEEP TABLE RCBT0030_CONTRACT   */
 IF WRK_HKP_STAGE       > 'B030' &
    WRK_CTRY_SELECT (7) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (7);
     CALL RCBHK0M_HKP_RCBV0030_CONTRACT;
     WRK_HKP_STAGE  = 'B030';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0020_EMPLOYEE   */
 IF WRK_HKP_STAGE       > 'B020' &
    WRK_CTRY_SELECT (1) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (1);
     CALL RCBHK0M_HKP_RCBV0020_EMPLOYEE;
     WRK_HKP_STAGE  = 'B020';
     CALL RCBHK0M_CHKP_ISSUE;
   END;
0                             /* HOUSEKEEP TABLE RCBT0010_CUSTOMER   */
 IF WRK_HKP_STAGE       > 'B010' &
    WRK_CTRY_SELECT (3) = '1'
 THEN
   DO;
     WRK_GROUP_DATE = WRK_CTRY_DATES (3);
     CALL RCBHK0M_HKP_RCBV0010_CUSTOMER;
     WRK_HKP_STAGE  = 'B010';
     CALL RCBHK0M_CHKP_ISSUE;
   END;

0END RCBHK0M_HKP_CTRY;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0010_CUSTOMER                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0010_CUSTOMER             */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                             ALSO HOUSEKEEP THE ROWS 'CREATED     */
 /*                             BY CEDS', WITHOUT DEPENDENTS         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0010_CUSTOMER: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHKHR;
0CALL RCBHK0M_OPEN_CURS_RCBVHKIR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKHR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKIR;

0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKHR);
   IF  SELECT_RCBVHKHR.CUSTOMER_NUMBER ¬=
                                 SELECT_RCBVHKIR.CUSTOMER_NUMBER
   THEN DO;
                                     /* SOC S1540038*//* SOC PTM 908 */
   /*IF ((SELECT_RCBVHKHR.END_DATE ¬= '9999-12-31') |
   /*    (SELECT_RCBVHKHR.CUSTOMER_NAME = 'CREATED BY CEDS'))
                                                      /* EOC PTM 908 */
     IF (((SELECT_RCBVHKHR.END_DATE ¬= '9999-12-31') &
         (SELECT_RCBVHKHR.END_DATE < WRK_GROUP_DATE)) |
         (SELECT_RCBVHKHR.CUSTOMER_NAME = 'CREATED BY CEDS'))
                                                      /* EOC S1540038*/
     THEN DO;
       CALL RCBHK0M_DELETE_RCBVHKHR;
       WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
       WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;  /* PTM 908     */
     END;
   END;
   ELSE
     IF ¬ SWITCH_END_OF_CURS_RCBVHKIR
     THEN
       CALL RCBHK0M_FETCH_CURS_RCBVHKIR;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHKHR;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKHR;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKIR;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0010_CUSTOMER';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0010_CUSTOMER;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0020_EMPLOYEE                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0020_EMPLOYEE             */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0020_EMPLOYEE: PROC;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */
0EXEC SQL
   DELETE
   FROM   RCBV0020_EMPLOYEE
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#100');
   END;
 END;


0CALL RCBHK0M_OPEN_CURS_RCBVHK5R;
0CALL RCBHK0M_OPEN_CURS_RCBVHKCR;
 CALL RCBHK0M_FETCH_CURS_RCBVHK5R;
 CALL RCBHK0M_FETCH_CURS_RCBVHKCR;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHK5R);
   IF SELECT_RCBVHK5R.EMPLOYEE_NUMBER ¬=
                                      SELECT_RCBVHKCR.EMPLOYEE_NUMBER
   THEN DO;
     CALL RCBHK0M_DELETE_RCBVHK5R;
     WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
     WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;    /* PTM 908     */
   END;
   ELSE
     IF ¬ SWITCH_END_OF_CURS_RCBVHKCR
     THEN
       CALL RCBHK0M_FETCH_CURS_RCBVHKCR;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHK5R;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHK5R;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKCR;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0020_EMPLOYEE';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0020_EMPLOYEE;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0030_CONTRACT                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0030_CONTRACT             */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0030_CONTRACT: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHKAR;
0CALL RCBHK0M_OPEN_CURS_RCBVHKBR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKAR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKBR;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKAR);
   IF SELECT_RCBVHKAR.CONTRACT_NUMBER <
                                      SELECT_RCBVHKBR.CONTRACT_NUMBER
   THEN DO;
     CALL RCBHK0M_DELETE_RCBVHKAR;
     WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
     WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;    /* PTM 908     */
     CALL RCBHK0M_FETCH_CURS_RCBVHKAR;
   END;
   ELSE
     DO;
       IF SELECT_RCBVHKAR.CONTRACT_NUMBER >
                           SELECT_RCBVHKBR.CONTRACT_NUMBER THEN
         CALL RCBHK0M_FETCH_CURS_RCBVHKBR;
       ELSE
         DO;
           CALL RCBHK0M_FETCH_CURS_RCBVHKAR;
           CALL RCBHK0M_FETCH_CURS_RCBVHKBR;
         END;
     END;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKAR;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKBR;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0030_CONTRACT';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0030_CONTRACT;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0035_CUST_CTR                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0035_CUST_CTR             */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0035_CUST_CTR: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHKNR;
 CALL RCBHK0M_OPEN_CURS_RCBVHKQS;
 CALL RCBHK0M_OPEN_CURS_RCBVHKQT;
 CALL RCBHK0M_OPEN_CURS_QCH0BCSO;           /* OPEN CHIS TABLE       */
 CALL RCBHK0M_FETCH_CURS_RCBVHKNR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKQS;
 CALL RCBHK0M_FETCH_CURS_RCBVHKQT;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKNR);
   IF SELECT_RCBVHKNR_KEY < SELECT_RCBVHKQS_KEY THEN
       DO;
          IF SELECT_RCBVHKQT.CONTRACT_NUMBER = HIGH(15) THEN
            DO;
                                                    /* START PTM1057 */
              IF SELECT_RCBVHKNR_KEY ¬= SELECT_QCH0BCSO_KEY THEN
                DO;
                  CALL RCBHK0M_DELETE_RCBVHKNR;
                  WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
                  WRK_CHKP_CNT_STEPS =                /* PTM 908     */
                     WRK_CHKP_CNT_STEPS + 1;          /* PTM 908     */
                END;
              ELSE DO;
                END;
                                                      /* END PTM1057 */
              CALL RCBHK0M_FETCH_CURS_RCBVHKNR;
            END;
          ELSE
            DO;
            DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKQT);
              IF SELECT_RCBVHKNR.CONTRACT_NUMBER <
                 SELECT_RCBVHKQT.CONTRACT_NUMBER THEN
                DO;
                                                    /* START PTM1057 */
                  IF SELECT_RCBVHKNR_KEY ¬= SELECT_QCH0BCSO_KEY THEN
                    DO;
                      CALL RCBHK0M_DELETE_RCBVHKNR;
                      WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
                      WRK_CHKP_CNT_STEPS =            /* PTM 908     */
                             WRK_CHKP_CNT_STEPS + 1;  /* PTM 908     */
                    END;
                    ELSE DO;
                    END;
                                                      /* END PTM1057 */
                  CALL RCBHK0M_FETCH_CURS_RCBVHKNR;
                  SWITCH_END_OF_CURS_RCBVHKQT = TRUE;
                END;
              ELSE
                DO;
                  IF SELECT_RCBVHKNR.CONTRACT_NUMBER >
                     SELECT_RCBVHKQT.CONTRACT_NUMBER THEN
                    DO;
                      CALL RCBHK0M_FETCH_CURS_RCBVHKQT;
                    END;
                  ELSE
                    DO;
                      CALL RCBHK0M_FETCH_CURS_RCBVHKNR;
                      SWITCH_END_OF_CURS_RCBVHKQT = TRUE;
                    END;
                END;
              IF ((RCB012.CHKP_LIMIT ¬= 0) &          /* SOC PTM 908 */
                  (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
              THEN
                DO;
                  CALL RCBHK0M_CHKP_ISSUE;
                  WRK_CHKP_CNT_STEPS = 0;
                END;                                  /* EOC PTM 908 */
            END; /* END LOOP */
            IF SWITCH_LOOP THEN
              SWITCH_END_OF_CURS_RCBVHKQT = FALSE;
          END;
       END;
       ELSE
         DO;
           IF SELECT_RCBVHKNR_KEY > SELECT_RCBVHKQS_KEY THEN
             CALL RCBHK0M_FETCH_CURS_RCBVHKQS;
           ELSE
             DO;
               CALL RCBHK0M_FETCH_CURS_RCBVHKNR;
               CALL RCBHK0M_FETCH_CURS_RCBVHKQS;
             END;
         END;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
 END; /* END DO WHILE */
0CALL RCBHK0M_CLOSE_CURS_RCBVHKNR;
 CALL RCBHK0M_CLOSE_CURS_RCBVHKQS;
 CALL RCBHK0M_CLOSE_CURS_RCBVHKQT;
 CALL RCBHK0M_CLOSE_CURS_QCH0BCSO;          /* CLOSE CHIS TABLE      */

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0035_CUST_CTR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0035_CUST_CTR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0040_OU                       */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0040_OU                   */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0040_OU: PROC;
 WRK_NR_OF_DELETIONS = 0;
0EXEC SQL
   DELETE
   FROM   RCBV0040_OU A
   WHERE  A.COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    A.OU_CODE        ¬= ' '
   AND    A.END_DATE        < :WRK_GROUP_DATE
                                                     /* RC01158 :    */
   AND    NOT EXISTS                                 /* DELETE ONLY  */
         (SELECT   *                                 /* WHEN NO EFF. */
            FROM   RCBV0051_PI_HW_PR B               /* ROW WITH THE */
           WHERE B.COUNTRY_NUMBER = A.COUNTRY_NUMBER /* SAME OU-CODE */
             AND B.OU_CODE        = A.OU_CODE)       /* IN RCBV0051. */
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100);
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#101');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0040_OU';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0040_OU;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0050_HW_PR                    */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0050_HW_PR                */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                             SIMPLIFIED THE DESIGN. CURSOR        */
 /*                             RCBVHKDR HAS BEEN REMOVED, AND THE   */
 /*                             BALANCE LINE PROCESSING REPLACED BY  */
 /*                             THE PROCESSING OF 1 CURSOR,          */
 /*                             RCBVHK6R, THAT COMBINES THE LOGIC OF */
 /*                             THE OLD CURSORS RCBVHK6R AND         */
 /*                             RCBVHKDR.                            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0050_HW_PR: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHK6R;
 CALL RCBHK0M_FETCH_CURS_RCBVHK6R;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHK6R);
   CALL RCBHK0M_DELETE_RCBVHK6R;
   WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
   WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;      /* PTM 908     */
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHK6R;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHK6R;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0050_HW_PR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0050_HW_PR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0060_SW_PR                    */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0060_SW_PR                */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0060_SW_PR: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHK7R;
0CALL RCBHK0M_OPEN_CURS_RCBVHKER;
 CALL RCBHK0M_FETCH_CURS_RCBVHK7R;
 CALL RCBHK0M_FETCH_CURS_RCBVHKER;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHK7R);
   IF (SELECT_RCBVHK7R.PRODUCT_TYPE ¬= SELECT_RCBVHKER.PRODUCT_TYPE |
       SELECT_RCBVHK7R.ORIGIN       ¬= SELECT_RCBVHKER.ORIGIN       |
       SELECT_RCBVHK7R.MODEL_NUMBER ¬= SELECT_RCBVHKER.MODEL_NUMBER |
       SELECT_RCBVHK7R.SEQUENCE_NUMBER ¬=
                                    SELECT_RCBVHKER.SEQUENCE_NUMBER )
   THEN DO;
     CALL RCBHK0M_DELETE_RCBVHK7R;
     WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
     WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;    /* PTM 908     */
   END;
   ELSE
     IF ¬ SWITCH_END_OF_CURS_RCBVHKER
     THEN
       CALL RCBHK0M_FETCH_CURS_RCBVHKER;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHK7R;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHK7R;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKER;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0060_SW_PR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0060_SW_PR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0070_HW_PO                    */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0070_HW_PO                */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0070_HW_PO: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHKJR;
0CALL RCBHK0M_OPEN_CURS_RCBVHKKR;
                                                 /* SOC CEDS00000736 */
 /*CALL RCBHK0M_OPEN_CURS_RCBVHKVR;*/                /* CEDS00000716 */
                                                 /* EOC CEDS00000736 */
 CALL RCBHK0M_FETCH_CURS_RCBVHKJR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKKR;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKJR);
   IF (SELECT_RCBVHKJR.PRODUCT_TYPE ¬= SELECT_RCBVHKKR.PRODUCT_TYPE |
       SELECT_RCBVHKJR.MODEL_NUMBER ¬= SELECT_RCBVHKKR.MODEL_NUMBER )
   THEN DO;
     IF ((SELECT_RCBVHKJR.PRODUCT_TYPE ¬= '9998' &
          SELECT_RCBVHKJR.MODEL_NUMBER ¬= '000'  &
          SELECT_RCBVHKJR.END_DATE      < WRK_GROUP_DATE) |
                                                       /* SOC PCR0016*/
         (SELECT_RCBVHKJR.PRODUCT_NAME  = 'CREATED BY CEDS') |
                                                      /* SOC RC01371 */
      /* (SELECT_RCBVHKJR.PRODUCT_NAME  = 'CREATED BY PRIME INPUT')) */
         (SELECT_RCBVHKJR.PRODUCT_NAME  = 'CREATED BY PRIME INPUT') |
         (SELECT_RCBVHKJR.PRODUCT_NAME  = 'DELETED BY CEMT'))
                                                      /* EOC RC01371 */
                                                       /* EOC PCR0016*/
     THEN DO;
                                                    /*SOC CEDS00000699*/
     /*PUT SKIP LIST('70:',SELECT_RCBVHKJR.PRODUCT_TYPE,
                       SELECT_RCBVHKJR.MODEL_NUMBER);
       PUT SKIP LIST('51:',SELECT_RCBVHKJR.PRODUCT_TYPE,
                       SELECT_RCBVHKJR.MODEL_NUMBER);*/
                                                    /*EOC CEDS00000699*/
      IF (SELECT_RCBVHKJR.MODEL_NUMBER = '') THEN     /* SOC RC01325 */
      DO;
       /* CALL RCBHK0M_OPEN_CURS_RCBVHKVR;         *//* CEDS00000716 */
       /* CALL RCBHK0M_FETCH_CURS_RCBVHKVR;*/        /* CEDS00000736 */
       /* CALL RCBHK0M_CLOSE_CURS_RCBVHKVR;        *//* CEDS00000716 */
                                                 /* SOC CEDS00000736 */
       WRK_PROD_TYPE = SELECT_RCBVHKJR.PRODUCT_TYPE;
       WRK_MODEL_NBR = SELECT_RCBVHKJR.MODEL_NUMBER;
       CALL RCBHK0M_CHECK_INVENTORY ;
       IF SELECT_RECORD.SQL_CHECK ¬= '1' THEN
        DO;
         CALL RCBHK0M_DELETE_RCBVHKJR;
         WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
         WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;
        END;                                     /* EOC CEDS00000736 */
      END;
      ELSE
      DO;                                             /* EOC RC01325 */
       CALL RCBHK0M_DELETE_RCBVHKJR;
       WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
       WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;  /* PTM 908     */
      END;                                            /* RC01325     */
     END;
   END;
   ELSE
     IF ¬ SWITCH_END_OF_CURS_RCBVHKKR
     THEN DO;
                                                    /*SOC CEDS00000699*/
     /*PUT SKIP LIST('NOERROR:',SELECT_RCBVHKJR.PRODUCT_TYPE,
                       SELECT_RCBVHKJR.MODEL_NUMBER,
                       SELECT_RCBVHKKR.PRODUCT_TYPE,
                       SELECT_RCBVHKKR.MODEL_NUMBER);*/
                                                    /*EOC CEDS00000699*/
       CALL RCBHK0M_FETCH_CURS_RCBVHKKR;
                                                    /*SOC CEDS00000699*/
       /*PUT SKIP LIST('NEXT:',SELECT_RCBVHKKR.PRODUCT_TYPE,
                   SELECT_RCBVHKKR.MODEL_NUMBER);*/ /*EOC CEDS00000699*/
       END;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHKJR;
                                                    /*SOC CEDS00000699*/
       /*PUT SKIP LIST('NEXT 70:',SELECT_RCBVHKJR.PRODUCT_TYPE,
                   SELECT_RCBVHKJR.MODEL_NUMBER);*/ /*EOC CEDS00000699*/
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKJR;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKKR;
                                                 /* SOC CEDS00000736 */
 /*CALL RCBHK0M_CLOSE_CURS_RCBVHKVR;*/               /* CEDS00000716 */
                                                 /* EOC CEDS00000736 */
 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0070_HW_PO';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0070_HW_PO;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0075_SE_PO                    */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0075_SE_PO                */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0075_SE_PO: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHKOR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKOR;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKOR);
   SWITCH_RCB210_FOUND = FALSE;
   CALL RCBHK0M_OPEN_CURS_RCBVHKRR;
   DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKRR);
     CALL RCBHK0M_FETCH_CURS_RCBVHKRR;
   END;
   CALL RCBHK0M_CLOSE_CURS_RCBVHKRR;
   IF SWITCH_RCB210_FOUND = FALSE THEN
     DO;
       CALL RCBHK0M_DELETE_RCBVHKOR;
       WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
       WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;  /* PTM 908     */
     END;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHKOR;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKOR;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0075_SE_PO';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0075_SE_PO;
1/**************************************************** START PTM0541 */
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0080_SW_PO                    */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0080_SW_PO                */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0080_SW_PO: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHKLR;
0CALL RCBHK0M_OPEN_CURS_RCBVHKMR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKLR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKMR;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKLR);
   IF (SELECT_RCBVHKLR.PRODUCT_TYPE || SELECT_RCBVHKLR.MODEL_NUMBER ¬=
       SELECT_RCBVHKMR.PRODUCT_TYPE || SELECT_RCBVHKMR.MODEL_NUMBER)
   THEN DO;
     IF ((SELECT_RCBVHKLR.END_DATE < WRK_GROUP_DATE) |
                                                       /* SOC PCR0016*/
         (SELECT_RCBVHKLR.PRODUCT_NAME  = 'CREATED BY CEDS') |
                                                      /* SOC RC01371 */
      /* (SELECT_RCBVHKLR.PRODUCT_NAME  = 'CREATED BY PRIME INPUT')) */
         (SELECT_RCBVHKLR.PRODUCT_NAME  = 'CREATED BY PRIME INPUT') |
         (SELECT_RCBVHKLR.PRODUCT_NAME  = 'DELETED BY CEMT'))
                                                      /* EOC RC01371 */
                                                       /* EOC PCR0016*/
     THEN DO;
       CALL RCBHK0M_DELETE_RCBVHKLR;
       WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
       WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;  /* PTM 908     */
     END;
   END;
   ELSE
     IF ¬ SWITCH_END_OF_CURS_RCBVHKMR
     THEN
       CALL RCBHK0M_FETCH_CURS_RCBVHKMR;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHKLR;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKLR;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKMR;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0080_SW_PO';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0080_SW_PO;                      /* END PTM0541 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0100_MES_ORDER                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0100_MES_ORDER            */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0100_MES_ORDER: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHK9R;
0CALL RCBHK0M_OPEN_CURS_RCBVHKGR;
 CALL RCBHK0M_FETCH_CURS_RCBVHK9R;
 CALL RCBHK0M_FETCH_CURS_RCBVHKGR;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHK9R);
   IF (SELECT_RCBVHK9R.NAME_CODE        ¬= SELECT_RCBVHKGR.NAME_CODE |
       SELECT_RCBVHK9R.MES_ORDER_NUMBER ¬=
                                    SELECT_RCBVHKGR.MES_ORDER_NUMBER )
   THEN DO;
     CALL RCBHK0M_DELETE_RCBVHK9R;
     WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
     WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;    /* PTM 908     */
   END;
   ELSE
     IF ¬ SWITCH_END_OF_CURS_RCBVHKGR
     THEN
       CALL RCBHK0M_FETCH_CURS_RCBVHKGR;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHK9R;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHK9R;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKGR;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0100_MES_ORDER';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0100_MES_ORDER;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0110_HW_STATUS                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0110_HW_STATUS            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0110_HW_STATUS: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0110_HW_STATUS
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#102');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0110_HW_STATUS';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0110_HW_STATUS;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0130_OU_STRUCT                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0130_OU_STRUCT            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0130_OU_STRUCT: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0130_OU_STRUCT
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#103');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0130_OU_STRUCT';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0130_OU_STRUCT;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0140_OU_EMP                   */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0140_OU_EMP               */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0140_OU_EMP: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0140_OU_EMP
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#104');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0140_OU_EMP';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0140_OU_EMP;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0150_CUST_ADDR                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0150_CUST_ADDR            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0150_CUST_ADDR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0150_CUST_ADDR
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#105');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0150_CUST_ADDR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0150_CUST_ADDR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0160_EMPL_ADDR                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0160_EMPL_ADDR            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0160_EMPL_ADDR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0160_EMPL_ADDR
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#106');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0160_EMPL_ADDR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0160_EMPL_ADDR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0170_OU_HW                    */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0170_OU_HW                */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0170_OU_HW: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0170_OU_HW
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#107');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0170_OU_HW';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0170_OU_HW;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0180_OU_SW                    */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0180_OU_SW                */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0180_OU_SW: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0180_OU_SW
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#108');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0180_OU_SW';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0180_OU_SW;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0190_HW_CUST                  */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0190_HW_CUST              */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0190_HW_CUST: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0190_HW_CUST
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#109');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0190_HW_CUST';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0190_HW_CUST;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0200_SW_CUST                  */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0200_SW_CUST              */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0200_SW_CUST: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0200_SW_CUST
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#110');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0200_SW_CUST';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0200_SW_CUST;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0210_ADD_SERV                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0210_ADD_SERV             */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0210_ADD_SERV: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0210_ADD_SERV
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#111');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0210_ADD_SERV';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0210_ADD_SERV;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0220_SUPPL_CTR                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0220_SUPPL_CTR            */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0220_SUPPL_CTR: PROC;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */
0                               /* HOUSEKEEP NON-WARRANTY RECORDS    */
 EXEC SQL
   DELETE
   FROM   RCBV0220_SUPPL_CTR
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   AND    TYPE_OF_WARRANTY IS NULL
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#112');
   END;
 END;
0                               /* HOUSEKEEP WARRANTY RECORDS        */
0CALL RCBHK0M_OPEN_CURS_RCBVHK3R;
 CALL RCBHK0M_FETCH_CURS_RCBVHK3R;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHK3R);
   CALL RCBHK0M_DELETE_RCBVHK3R;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHK3R;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHK3R;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0220_SUPPL_CTR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0220_SUPPL_CTR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0240_SERV_CTR                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0240_SERV_CTR             */
 /*                                                                  */
 /* HISTORY          : PTM 908: ADDED CHECKPOINTING                  */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0240_SERV_CTR: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;                              /* PTM 908     */

0CALL RCBHK0M_OPEN_CURS_RCBVHK4R;
 CALL RCBHK0M_FETCH_CURS_RCBVHK4R;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHK4R);
   CALL RCBHK0M_DELETE_RCBVHK4R;
   WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;     /* PTM 908     */
   WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;      /* PTM 908     */
   IF ((RCB012.CHKP_LIMIT ¬= 0) &                     /* SOC PTM 908 */
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;                                             /* EOC PTM 908 */
0  CALL RCBHK0M_FETCH_CURS_RCBVHK4R;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHK4R;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0240_SERV_CTR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0240_SERV_CTR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0250_MES_PR                   */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0250_MES_PR               */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0250_MES_PR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0250_MES_PR
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#113');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0250_MES_PR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0250_MES_PR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0260_HW_IN_ORD                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0260_HW_IN_ORD            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0260_HW_IN_ORD: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0260_HW_IN_ORD
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#114');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0260_HW_IN_ORD';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0260_HW_IN_ORD;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0270_SW_IN_ORD                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0270_SW_IN_ORD            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0270_SW_IN_ORD: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0270_SW_IN_ORD
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#115');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0270_SW_IN_ORD';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0270_SW_IN_ORD;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0300_HW_REAL                  */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0300_HW_REAL              */
 /*                                                                  */
 /* HISTORY          : PTM 923, REMOVED AN ERROR IN DELETE STATEMENT */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0300_HW_REAL: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0300_HW_REAL
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND   (PRODUCT_TYPE    ¬= '9998'
       OR MODEL_NUMBER    ¬= '000')
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#116');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0300_HW_REAL';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0300_HW_REAL;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0310_FEATURES                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0310_FEATURES             */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0310_FEATURES: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0310_FEATURES
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#117');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0310_FEATURES';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0310_FEATURES;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0320_SW_ON_HW                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0320_SW_ON_HW             */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0320_SW_ON_HW: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0320_SW_ON_HW
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#118');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0320_SW_ON_HW';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0320_SW_ON_HW;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0330_MES_PO                   */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0330_MES_PO               */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0330_MES_PO: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0330_MES_PO
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#119');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0330_MES_PO';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0330_MES_PO;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0340_HW_ADDR                  */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0340_HW_ADDR              */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0340_HW_ADDR: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0340_HW_ADDR
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#120');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0340_HW_ADDR';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0340_HW_ADDR;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0350_CUST_MOD                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0350_CUST_MOD             */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0350_CUST_MOD: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0350_CUST_MOD
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#121');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0350_CUST_MOD';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0350_CUST_MOD;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0360_EMPL_MOD                 */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0360_EMPL_MOD             */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0360_EMPL_MOD: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0360_EMPL_MOD
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#122');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0360_EMPL_MOD';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0360_EMPL_MOD;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0370_OU_MOD                   */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0370_OU_MOD               */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0370_OU_MOD: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0370_OU_MOD
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#123');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0370_OU_MOD';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0370_OU_MOD;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0380_HW_PR_MOD                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0380_HW_PR_MOD            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0380_HW_PR_MOD: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0380_HW_PR_MOD
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#124');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0380_HW_PR_MOD';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0380_HW_PR_MOD;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0400_PO_MOD1                  */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0400_PO_MOD1              */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0400_PO_MOD1: PROC;
 /*
0EXEC SQL
   DELETE
   FROM   RCBV0400_PO_MOD1
   WHERE  COUNTRY_NUMBER = :WRK_COUNTRY_NUMBER
   AND    END_DATE       < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#125');
   END;
 END; */

 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS  = 0;

0CALL RCBHK0M_OPEN_CURS_RCBVHKUR;
0CALL RCBHK0M_OPEN_CURS_RCBVHKKR;
                                                 /* SOC CEDS00000736 */
 /*CALL RCBHK0M_OPEN_CURS_RCBVHKWR;*/                /* CEDS00000716 */
                                                 /* EOC CEDS00000736 */
 CALL RCBHK0M_FETCH_CURS_RCBVHKUR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKKR;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKUR);
   IF (SELECT_RCBVHKUR.PRODUCT_TYPE ¬= SELECT_RCBVHKKR.PRODUCT_TYPE |
       SELECT_RCBVHKUR.MODEL_NUMBER ¬= SELECT_RCBVHKKR.MODEL_NUMBER )
   THEN DO;
     IF (SELECT_RCBVHKUR.PRODUCT_TYPE ¬= '9998' &
         SELECT_RCBVHKUR.MODEL_NUMBER ¬= '000'  &
         SELECT_RCBVHKUR.END_DATE      < WRK_GROUP_DATE)
     THEN DO;
      IF (SELECT_RCBVHKUR.MODEL_NUMBER = '') THEN
      DO;
       /* CALL RCBHK0M_OPEN_CURS_RCBVHKWR;         *//* CEDS00000716 */
       /* CALL RCBHK0M_FETCH_CURS_RCBVHKWR;*/        /* CEDS00000736 */
       /* CALL RCBHK0M_CLOSE_CURS_RCBVHKWR;        *//* CEDS00000716 */
                                                 /* SOC CEDS00000736 */
       WRK_PROD_TYPE = SELECT_RCBVHKUR.PRODUCT_TYPE;
       WRK_MODEL_NBR = SELECT_RCBVHKUR.MODEL_NUMBER;
       CALL RCBHK0M_CHECK_INVENTORY;
       IF SELECT_RECORD.SQL_CHECK ¬= '1' THEN
        DO;
         CALL RCBHK0M_DELETE_RCBVHKUR;
         WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
         WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;
        END;                                     /* EOC CEDS00000736 */
      END;
      ELSE
      DO;
       CALL RCBHK0M_DELETE_RCBVHKUR;
       WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
       WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;
      END;
     END;
   END;
   ELSE
     IF ¬ SWITCH_END_OF_CURS_RCBVHKKR
     THEN DO;
       CALL RCBHK0M_FETCH_CURS_RCBVHKKR;
       END;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;
0  CALL RCBHK0M_FETCH_CURS_RCBVHKUR;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKUR;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKKR;
                                                 /* SOC CEDS00000736 */
 /*CALL RCBHK0M_CLOSE_CURS_RCBVHKWR;*/               /* CEDS00000716 */
                                                      /* EOC RC01325 */
                                                 /* EOC CEDS00000736 */
 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0400_PO_MOD1';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0400_PO_MOD1;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0420_PO_MOD2                  */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0420_PO_MOD2              */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0420_PO_MOD2: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0420_PO_MOD2
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    END_DATE        < :WRK_GROUP_DATE
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#126');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0420_PO_MOD2';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0420_PO_MOD2;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0560_XACTION                  */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0560_XACTION              */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0560_XACTION: PROC;
0EXEC SQL
   DELETE
   FROM   RCBV0560_XACTION
   WHERE  COUNTRY_NUMBER  = :WRK_COUNTRY_NUMBER
   AND    TIMESTAMP       < :WRK_TIMESTAMP
   ;
0SELECT (SQLCODE);
 WHEN (0) DO;
   /*PUT SKIP LIST('WHEN 0'); */                      /*CEDS00000699*/
   WRK_NR_OF_DELETIONS = SQLCA.SQLERRD(3);
   END;
 WHEN (+100) DO;
   /*PUT SKIP LIST('WHEN 100');*/                     /*CEDS00000699*/
   WRK_NR_OF_DELETIONS = 0;
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                         'DB2',
                         '#127');
   END;
 END;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0560_XACTION';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0560_XACTION;
                                                      /* SOC RB01320 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_HKP_RCBV0125_DMMY_REAL                */
 /*                                                                  */
 /* DESCRIPTION      : HOUSEKEEP TABLE RCBV0125_DMMY_REAL            */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_HKP_RCBV0125_DMMY_REAL: PROC;
 WRK_NR_OF_DELETIONS = 0;
 WRK_CHKP_CNT_STEPS = 0;

0CALL RCBHK0M_OPEN_CURS_RCBVHKTR;
 CALL RCBHK0M_FETCH_CURS_RCBVHKTR;
0DO WHILE (¬ SWITCH_END_OF_CURS_RCBVHKTR);
   CALL RCBHK0M_DELETE_RCBVHKTR;
   WRK_NR_OF_DELETIONS = WRK_NR_OF_DELETIONS + 1;
   WRK_CHKP_CNT_STEPS  = WRK_CHKP_CNT_STEPS + 1;
   IF ((RCB012.CHKP_LIMIT ¬= 0) &
       (WRK_CHKP_CNT_STEPS > RCB012.CHKP_LIMIT))
   THEN
     DO;
       CALL RCBHK0M_CHKP_ISSUE;
       WRK_CHKP_CNT_STEPS = 0;
     END;
0  CALL RCBHK0M_FETCH_CURS_RCBVHKTR;
 END;
0CALL RCBHK0M_CLOSE_CURS_RCBVHKTR;

 PARM_INT_AREA.MSG_VAR_CODES   = ' ';
 PARM_INT_AREA.MSG_VAR_VALUE_6 = 'RCBV0125_DMMY_REAL';
 CALL RCBHK0M_ISSUE_CNT_DEL_MSG;
0END RCBHK0M_HKP_RCBV0125_DMMY_REAL;                 /* EOC RB01320  */
1/*                                                       SOC PTM1311*/
 /********************************************************************/
 /* MODULE NAME      : RCBHK0M_LOCK_TABLESPACES                      */
 /*                                                                  */
 /* DESCRIPTION      : LOCK ALL INVOLVED TABLESPACES IN EXCL. MODE   */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_LOCK_TABLESPACES: PROC;
0/********************************************************************/
 /* DETERMINE OWNER                                                  */
 /********************************************************************/
 OPEN FILE (RCBOWNER);
 READ FILE (RCBOWNER) INTO (RCBOWNER_REC); /* READ RCBOWNER CARD */
0IF SWITCH_EOF_RCBOWNER
 THEN
   CALL RCBHK0M_ERROR (NULL, 'OTHER', '#128');
0CLOSE FILE (RCBOWNER);
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0560_XACTION        IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0450_CU_STRUCT      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0420_PO_MOD2        IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0400_PO_MOD1        IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0380_HW_PR_MOD      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0370_OU_MOD         IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0360_EMPL_MOD       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0350_CUST_MOD       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0340_HW_ADDR        IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0330_MES_PO         IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0320_SW_ON_HW       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0310_FEATURES       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0300_HW_REAL        IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0290_ADDR_LINE      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0280_ADDR_LINE      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0270_SW_IN_ORD      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0260_HW_IN_ORD      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0250_MES_PR         IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0240_SERV_CTR       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0220_SUPPL_CTR      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0210_ADD_SERV       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0200_SW_CUST        IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0190_HW_CUST        IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0180_OU_SW          IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0170_OU_HW          IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0160_EMPL_ADDR      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0150_CUST_ADDR      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0140_OU_EMP         IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0130_OU_STRUCT      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER || /*SOC RB01320*/
            '.RCBT0125_DMMY_REAL      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;                                /*EOC RB01320*/
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0110_HW_STATUS      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0100_MES_ORDER      IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0080_SW_PO          IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0075_SE_PO          IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0070_HW_PO          IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0060_SW_PR          IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0050_HW_PR          IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0040_OU             IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0035_CUST_CTR       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0030_CONTRACT       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0020_EMPLOYEE       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0WRK_STATEMENT = 'LOCK TABLE ' || RCBOWNER_REC.OWNER ||
            '.RCBT0010_CUSTOMER       IN EXCLUSIVE MODE';
 CALL RCBHK0M_EXEC_STMT;
0END RCBHK0M_LOCK_TABLESPACES;
                                                      /* EOC PTM1311 */
1/*                                                       SOC PTM1311*/
 /********************************************************************/;
 /* EXECUTE IMMEDIATE                                                */
 /********************************************************************/
 RCBHK0M_EXEC_STMT: PROC;
0EXEC SQL
  EXECUTE IMMEDIATE :WRK_STATEMENT
  ;
0SELECT (SQLCA.SQLCODE);
   WHEN (0);
   OTHERWISE DO;
     CALL RCBHK0M_ERROR (ADDR (SQLCA),
                                 'DB2',
                                 '#129');
     END;
   END;
 END RCBHK0M_EXEC_STMT;
                                                      /* EOC PTM1311 */
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CHKP_RESTART                          */
 /*                                                                  */
 /* DESCRIPTION      : CHECK RESTART PROGRAM                         */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CHKP_RESTART: PROC;
0CHKP_CNT_STEPS = 0;
0/********************************************************************/
 /* DETERMINE CHECKPOINT TO RESTART PROGRAM                          */
 /********************************************************************/
0CHKP_AREA = '';
 CHKP_XRST = '';
0CALL PLITDLI (SIX,
               XRST,
               PTR_PCB_IO,
               ADDR(CHKP_LEN_IO),
               ADDR(CHKP_XRST),
               ADDR(CHKP_LEN_AREA),
               ADDR(CHKP_AREA));
 SELECT (PCB_IO.ST_CODE);
 WHEN ('');
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (PTR_PCB_IO,
                         'IMS_IO',
                         '#208');
   END;
 END;
0IF CHKP_XRST.NAME = ' '
 THEN
   /******************************************************************/
   /*        N O R M A L    S T A R T                                */
   /******************************************************************/
   DO;
0    CHKP_AREA.CNT_NUM          = 1;
     CHKP_AREA.COUNTS           = '';
     CHKP_ID.NUMBER             = CHKP_AREA.CNT_NUM;
0    CALL PLITDLI (SIX,
                   CHKP,
                   PTR_PCB_IO,
                   ADDR(CHKP_LEN_IO),
                   ADDR(CHKP_ID),
                   ADDR(CHKP_LEN_AREA),
                   ADDR(CHKP_AREA));
     SELECT (PCB_IO.ST_CODE);
     WHEN ('');
     WHEN ('XD')
       DO;
         PARM_INT_AREA.MESSAGE_TYPE      = 'IS';
         PARM_INT_AREA.MESSAGE_NUMBER    = '9998';
         PARM_INT_AREA.MSG_VAR_CODES     = ' ';
         CALL RCB0M1M (PTR_INT_AREA);
         CALL RCBHK0M_ERROR (PTR_PCB_IO,
                             'IMS_IO',
                             '#209');
       END;
     OTHERWISE
       DO;
         CALL RCBHK0M_ERROR (PTR_PCB_IO,
                             'IMS_IO',
                             '#210');
       END;
     END;
   END;
 ELSE
   /******************************************************************/
   /*                   R E S T A R T                                */
   /******************************************************************/
   DO;
0    CHKP_AREA.CNT_NUM  = CHKP_XRST.NUMBER;
     IF CHKP_AREA.CNT_NUM > 1
     THEN
       DO;
         /************************************************************/
         /* RE-ASTABLISH POSITION ON DATA BASES                      */
         /************************************************************/
         WRK_COUNTRY_NUMBER           = CHKP_AREA.COUNTRY_NUMBER;
         WRK_CTRY_DATES               = CHKP_AREA.HKP_CTRY_DATES;
         WRK_CTRY_SELECT              = CHKP_AREA.HKP_CTRY_SELECT;
         WRK_HKP_STAGE                = CHKP_AREA.HKP_STAGE;
         PARM_INT_AREA.COUNTRY_NUMBER = CHKP_AREA.COUNTRY_NUMBER;
       END;
   END;
0END RCBHK0M_CHKP_RESTART;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_CHKP_ISSUE                            */
 /*                                                                  */
 /* DESCRIPTION      : ISSUE CHECKPOINT, COMMITTING ALL CHANGES      */
 /*                    TO THE DATABASES (SYMBOLIC)                   */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_CHKP_ISSUE: PROC;
0CHKP_AREA.COUNTRY_NUMBER  = WRK_COUNTRY_NUMBER;
 CHKP_AREA.HKP_CTRY_DATES  = WRK_CTRY_DATES;
 CHKP_AREA.HKP_CTRY_SELECT = WRK_CTRY_SELECT;
 CHKP_AREA.HKP_STAGE       = WRK_HKP_STAGE;
0/********************************************************************/
 /* SET CHECKPOINT                                                   */
 /********************************************************************/
0CHKP_AREA.CNT_NUM = CHKP_AREA.CNT_NUM + 1;
 CHKP_ID.NUMBER    = CHKP_AREA.CNT_NUM;
0CALL PLITDLI (SIX,
               CHKP,
               PTR_PCB_IO,
               ADDR(CHKP_LEN_IO),
               ADDR(CHKP_ID),
               ADDR(CHKP_LEN_AREA),
               ADDR(CHKP_AREA));
 SELECT (PCB_IO.ST_CODE);
 WHEN ('')
   DO;
     CHKP_CNT_STEPS = 0;
   END;
 WHEN ('XD')
   DO;
     PARM_INT_AREA.MESSAGE_TYPE   = 'IS';
     PARM_INT_AREA.MESSAGE_NUMBER = '9998';
     PARM_INT_AREA.MSG_VAR_CODES  = ' ';
     CALL RCB0M1M (PTR_INT_AREA);
     CALL RCBHK0M_ERROR (PTR_PCB_IO,
                         'IMS_IO',
                         '#211');
   END;
 OTHERWISE
   DO;
     CALL RCBHK0M_ERROR (PTR_PCB_IO,
                         'IMS_IO',
                         '#212');
   END;
 END;
 END RCBHK0M_CHKP_ISSUE;
1/********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBHK0M_ERROR                                 */
 /*                                                                  */
 /* DESCRIPTION      : CALLS THE COMMON ERROR ROUTINE AFTER FILLING  */
 /*                    THE INPUT VARIABLES                           */
 /*                                                                  */
 /********************************************************************/
0RCBHK0M_ERROR: PROC   (PTR_ERROR,
                        ERR_TYPE,
                        CALL_ID);
0DCL PTR_ERROR    PTR;
 DCL ERR_TYPE     CHAR(8);
 DCL CALL_ID      CHAR(4);
0PARM_INT_AREA.PTR_ERROR      = PTR_ERROR;
 PARM_INT_AREA.ERR_TYPE       = ERR_TYPE;
 PARM_INT_AREA.CALL_ID        = CALL_ID;
0CALL RCB0E1M (PTR_INT_AREA);
0END RCBHK0M_ERROR;
1/*******************************************************************/
 /*DO NOT CHANGE THIS PART, IT IS MEANT FOR ABR                     */
 /*******************************************************************/
0 %INCLUDE DAIFPLH ;                     /* COMPILE DATE/TIME STAMP */
 $DAIMOD (RCBHK0M);                      /* MODULE TO BE COMPILED   */
0/*******************************************************************/
 /* END OF ABR BLOCK                                                */
 /*******************************************************************/
0END RCBHK0M;