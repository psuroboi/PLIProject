 /* RCBBIFM - SHRINK WRAP REGISTRATION: CONVERT                      */ 00010000
 /*         - DSW REGISTRATION        : CONVERT              RB01327 */ 00020099
 /*                                                                  */ 00021000
 /********************************************************************/ 00030000
 /* 5695-153 (C) COPYRIGHT IBM EMEA WORLD TRADE CORPORATION 1991     */ 00040000
 /* LICENSED MATERIAL - PROGRAM PROPERTY OF IBM                      */ 00050000
 /* REFER TO COPYRIGHT INSTRUCTIONS: FORM G120-2083                  */ 00060000
 /********************************************************************/ 00070000
 /*                                                                  */ 00080000
 /* MODULE NAME      : RCBBIFM                                       */ 00090000
 /*                                                                  */ 00100000
 /* PROGRAM NAME     : RCBBIFP                                       */ 00110000
 /*                                                                  */ 00120000
 /* LANGUAGE         : PLISQL                                        */ 00130000
 /*                                                                  */ 00140000
 /* TYPE             : BATCH                                         */ 00150000
 /*                                                                  */ 00160000
 /* DESCRIPTION      : CONVERT SHRINK WRAP FILE TO A PRIME           */ 00170000
 /*                    INPUT STANDARD INTERFACE FILE TO MAINTAIN     */ 00180000
 /*                    CEDS-TABLES 0011, 0051 AND 0241               */ 00190000
 /*                                                                  */ 00200000
 /*                  : CONVERT  DSW FILE TO A PRIME      SOC RB01327 */ 00201099
 /*                    INPUT STANDARD INTERFACE FILE TO MAINTAIN     */ 00202000
 /*                    CEDS-TABLES 0051 AND 0241         EOC RB01327 */ 00203099
 /*                                                                  */ 00204000
 /* INPUT            : RCBBIF0 - SHRINK WRAP/DSW FILE        RB01327 */ 00210000
 /*                    RCBBIFN - PART/CONTRACT NUMBER FILE   RB01236 */ 00220000
 /*                    RCBBIFB - SORTED OUTPUT FILE OF T690  RB01298 */ 00230000
 /*                    DB2 - RCBT0051_PI_HW_PR                       */ 00240000
 /*                    DB2 - RCBT0241_PI_CTR                 RB01236 */ 00250000
 /*                    DB2 - RCBT0400_PO_MOD1                RB01278 */ 00260000
 /*                    DB2 - RCBT0470_SERV_COND              PTM1173 */ 00270000
 /*                    DB2 - RCBT0475_CTRY_COND              RA01233 */ 00280000
 /*                    DB2 - RCBT0630_TRANS_HVC              RC01191 */ 00290000
 /*                    DB2 - RCBT0635_CTRY_HVC               RB01250 */ 00300000
 /*                    DB2 - RCBT0640_TRANS_SVT              RC01234 */ 00310000
 /*                    DB2 - RCBT0645_CTRY_SVT               RC01234 */ 00320000
 /*                    DB2 - RCBT0500_PARM                           */ 00330000
 /*                    DB2 - RCBT0690_FLEX_WARR              RB01281 */ 00340000
 /*                                                                  */ 00350000
 /* OUTPUT           : RCBBIA0 - RCB CUSTOMER FILE                   */ 00360000
 /*                  : RCBBIB0 - RCB INVENTORY FILE                  */ 00370000
 /*                  : RCBBIC0 - RCB CONTRACT FILE                   */ 00380000
 /*                  : RCBBIF1 - REJECTED SHRINK WRAP RECORDS        */ 00390000
 /*                            - REJECTED DSW RECORDS        RB01327 */ 00391099
 /*                  : RCB0M10 - MESSAGE FILE                        */ 00400000
 /*                  : DB2 - RCBT0500_PARM                           */ 00410000
 /*                                                                  */ 00420000
 /* EXTERNAL MODULES : RCB004M - DATA CALCULATION AND CONVERSION     */ 00430000
 /*                  : RCB013M - READ PARAMETER FILE                 */ 00440000
 /*                  : RCB019M - RETRIEVE COUNTRY-NUMBERS            */ 00450000
 /*                  : RCB020M - RETRIEVE RUN-DATE                   */ 00460000
 /*                  : RCB023M - RETRIEVE APPLICABLE SLC     *RC01191*/ 00470000
 /*                    RCBISRM - RETRIEVE ROW FROM           *RA01233*/ 00480000
 /*                                RCBT0470_SERV_COND                */ 00490000
 /*                                RCBT0475_CTRY_COND                */ 00500000
 /*                  : RCBIBOM - RETRIEVE SERVICE TYPE FROM  *RC01234*/ 00510000
 /*                                RCBT0640_TRANS_SVT                */ 00520000
 /*                                RCBT0645_CTRY_SVT                 */ 00530000
 /*                  : RCBF50M - INSERT FILE SEQUENCE NUMBER *RC01191*/ 00540000
 /*                  : RCBI50M - RETRIEVE FILE SEQUENCE NO   *RC01191*/ 00550000
 /*                  : RCBISPM - RETRIEVE SERVICE LEVEL CODE *RC01191*/ 00560000
 /*                  : RCBG50M - UPDATE FILE SEQUENCE NUMBER *RC01191*/ 00570000
 /*                  : RCBBIFU - USER EXIT FOR SHRINK WRAP           */ 00580000
 /*                  : RCB0E1M - COMMON ERROR MODULE                 */ 00590000
 /*                  : RCB0M1M - COMMON MESSAGE MODULE               */ 00600000
 /*                  : RCB0T1M - RECEIVE SYSTEM DATE                 */ 00610000
 /*                                                                  */ 00620000
 /* MESSAGES         : 0003 - RECORDS READ, BLOCKED, REJECTED        */ 00630000
 /*                    0004 - NUMBER OF RECORDS WRITTEN              */ 00640000
 /*                    0005 - NO COUNTRY FOUND FOR PROGRAM           */ 00650000
 /*                    0007 - NUMBER OF RECORDS INCONSISTENT         */ 00660000
 /*                    0012 - DATE INCORRECT                         */ 00670000
 /*                    0013 - EMPTY FILE OR DATABASE                 */ 00680000
 /*                    0014 - INVALID HEADER FOUND                   */ 00690000
 /*                    0015 - RECORDS FOUND AFTER TRAILER            */ 00700000
 /*                    0016 - NO HEADER FOUND                        */ 00710000
 /*                    0017 - NO TRAILER FOUND                       */ 00720000
 /*                    0024 - TIME INCORRECT                         */ 00730000
 /*                    0027 - INCORRECT DATE SEQUENCE                */ 00740000
 /*                    0028 - WARRANTY TYPE NOT FILLED DURING WARRANT*/ 00750000
 /*                    0031 - BOTH T.O.M. AND T.O.W. BLANK           */ 00760000
 /*                    0033 - INPUT RECORD WAS REJECTED              */ 00770000
 /*                    0035 - IMPORTANT CUSTOMER DATA MISSING        */ 00780000
 /*                    0036 - NO CUSTOMER RECORD FOR CUSTOMER        */ 00790000
 /*                    0037 - NO INVENTORY RECORD FOR CUSTOMER       */ 00800000
 /*                    0038 - INCORRECT DATE SEQUENCE                */ 00810000
 /*                    0039 - INVALID RECORD TYPE                    */ 00820000
 /*                    0040 - TOS NOT FOUND IN INVENTORY TABLE       */ 00830000
 /*                    0052 - INTERNAL TABLE OVERFLOW        RB01236 */ 00840000
 /*                    I050 - RECORD NOT FOUND               *RC01191*/ 00850000
 /*                    0180 - RUNS ARE OUT OF SEQUENCE       *RC01191*/ 00860000
 /*                    0181 - COUNTRY NUMBER SKIPPED                 */ 00870000
 /*                    0184 - COUNTRY REQUESTED, BUT NOT PRESENT     */ 00880000
 /*                    0198 - CUSTOMER NUMBER INVALID                */ 00890000
 /*                    0199 - MACHINE SERIAL NUMBER INVALID          */ 00900000
 /*                    0216 - RUNDATE RETRIEVED                      */ 00910000
 /*                    0231 - SERV.DELIV.METHOD NOT FOUND    RC01234 */ 00920000
 /*                    0233 - CONTRACT PERIODS OVERLAP       RB01236 */ 00930000
 /*                    0234 - CONTRACT ALREADY EXISTS        RB01236 */ 00940000
 /*                    9999 - PROGRAM SUCCESSFULLY ENDED             */ 00950000
 /*                                                                  */ 00960000
 /* DEPENDENCIES     : NONE                                          */ 00970000
 /*                                                                  */ 00980000
 /* FREQUENCY        : USER DEPENDENT (ON REQUEST)                   */ 00990000
 /*                                                                  */ 01000000
 /* MAINTENANCE LOG :                                                */ 01010000
 /* ---------------                                                  */ 01020000
 /*                                                                  */ 01030000
 /* DATE       | WORK-ITEMNO. | DESCRIPTION                          */ 01040000
 /* ---------------------------------------------------------------  */ 01050000
 /* 1996-11-06 | RA01170      | ALIGN CEDS TO HVP                    */ 01060000
 /* 1997-01-05 | PTM1014      | MOVE FILL_INVENTORY & FILL_CONTRACT  */ 01070000
 /*            |              | PROCEDURES TO BEFORE HANDLE_USEREXIT */ 01080000
 /* 1997-04-11 | PTM1036      | CORRECTED PROLOG                     */ 01090000
 /* 1997-09-15 | RC01191      | CEDS ENHANCEMENTS FOR HVP DATA       */ 01100000
 /* 1997-11-11 | PTM1127      | CORRECT CALCULATION OF WED           */ 01110000
 /* 1998-03-04 | PTM1158      | CHANGE SERIAL_NUMBER AND ORIGIN FOR  */ 01120000
 /*            |              |   DSI AND SERVICE PAC                */ 01130000
 /* 1998-02-12 | PTM1179      | NO CHECK ON CUST.NO FOR HONG KONG 738*/ 01140000
 /* 1998-08-14 | PTM1201      | NO CHECK ON CUST.NO FOR HONG KONG 736*/ 01150000
 /*            |              | PRC 672 TAIWAN 858                   */ 01160000
 /* 1998-08-17 | PTM1173      | FILL ZERO COVERAGE HOURS USING SLC   */ 01170000
 /* 1998-10-13 | PTM1210      | MULTICOUNTRY FILE SEQUENCE NUMBER    */ 01180000
 /* 1998-12-08 | PTM1233      | COUNTS FOR MSG 0003                  */ 01190000
 /* 1999-07-28 | RC01219      | DORO                                 */ 01200000
 /* 2000-10-10 | RC01227      | FRENCH SERVICE PAC CUSTOMER NUMBERS  */ 01210000
 /* 2001-11-20 | RA01229      | SERVICEREFERENCE INTERIM SOLUTION    */ 01220000
 /* 2002-07-20 | RA01233      | TACTICAL SERVICE REFERENCE           */ 01230000
 /* 2002-08-13 | RC01234      | CEDS ENHANCEMENTS                    */ 01240000
 /* 2002-02-12 | RA01236      | NEW CISCO SERVICEPAC FILE            */ 01250000
 /* 2003-03-13 | RB01236      | MULTIPLE SERVICE PAC'S               */ 01260000
 /* 2003-11-28 | PTM1405      | RESET SW_COVERAGE_HOURS_FOUND        */ 01270000
 /* 2003-11-28 | PTM1411      | CORRECT T0640 NOT FOUND HANDLING     */ 01280000
 /* 2004-03-16 | PTM1415      | DISABLE MULTIPLE SERV.PAC CHECKS,    */ 01290000
 /*            |              | IT CAUSES TOO MANY CONTRACT REJECTS  */ 01300000
 /* 2004-06-14 | RB01250      | DEFAULT SERVICE PAC PART.NO XLATION  */ 01310000
 /* 2004-06-30 | RB01242      | INCREASE LENGTH OF SERIAL NUMBER     */ 01320000
 /* 2006-08-08 | RB01272      | WARR_END_DATE PASSED BY DSP SHOULD   */ 01330000
 /*            |              | BE IGNORED.                          */ 01340000
 /*            |              | WHEN PURCHASE DATE IS '00010101' CEDS*/ 01350000
 /*            |              | SHOULD NOT OVERWRITE INSTALL_DATE;   */ 01360000
 /*            |              | THIS IS DEVELOPED FOR CEDS 3.3       */ 01370000
 /* 2006-11-02 | RB01278      | CEDS 3.3 (LENOVO) VENDOR COST        */ 01380000
 /*            |              | ASSIGNMENT                           */ 01390000
 /*            |              | - ASSIGNING VALUE 'G' TO TYPE OF     */ 01400000
 /*            |              |   MAINTENACE FOR LENOVO PRODUCTS.    */ 01410000
 /* 2007-01-19 | CEDS00000321 | IBM & LENOVO CONTRACT TO BE TREATED  */ 01420000
 /*            |              | DIFFERENTLY                          */ 01430000
 /* 2007-01-22 | CEDS00000323 | TO PREVENT THE REJECTION OF PI       */ 01440000
 /*            |              | INVENTORY WHEN THERE IS A DUMMY      */ 01450000
 /*            |              | PURCHASE DATE                        */ 01460000
 /* 2007-03-27 | RB01281      | CHANGES FOR FLEXIBLE WARRANTY        */ 01470000
 /*            |              | MACHINES                             */ 01480000
 /* 2007-09-07 | CEDS00000344 | REJECTION-RCBBIFF1 LENGTH HAS        */ 01490000
 /*            |              | DECREASED FROM 163 TO 142            */ 01500000
 /* 2007-12-03 | CEDS00000363 | ASSIGING TOW = 'C' TO LENOVO MACHINES*/ 01510000
 /*            |              | ASSIGING TOM = 'G' TO LENOVO CONTRACT*/ 01520000
 /* 2007-11-13 | RB01283      | LENOVO FLAG                          */ 01530000
 /* 2007-12-21 | CEDS00000357 | CHANGE FOR WARRANTY_SPLT_DATE IN T051*/ 01540000
 /* 2008-03-05 | CEDS00000336 | CHANGES TO HANDLE FLEXIBLE WARRANTY  */ 01550000
 /*            |              | MACHINES WHEN THERE IS NO VALID      */ 01560000
 /*            |              | INSTALL DATE                         */ 01570000
 /* 2008-04-08 | CEDS00000382 | INVALID INPUT RECORDS ARE NOT WRITTEN*/ 01580000
 /*            |              | TO REJECT FILE                       */ 01590000
 /* 2008-04-09 | RB01289      | PRIME INPUT CUSTOMER NUMBER          */ 01600000
 /* 2008-05-15 | CEDS00000394 | PROCESS JAPAN(760) SHRINKWRAP RECORDS*/ 01610000
 /* 2008-10-07 | CEDS00000436 | HANDLING OF NULL FOR WARRANTY        */ 01620000
 /*            |              | LIABILITY FIELD                      */ 01630000
 /* 2008-12-22 | RB01298      | HANDLING HARDBUNDLE MACHINES AND     */ 01640000
 /*            |              | PERFORMANCE IMPROVEMENT FIX ON       */ 01650000
 /*            |              | FLEXIBLE WARRANTY CHANGES,PCR-0013   */ 01660000
 /* 2009-06-12 | CEDS00000473 | CUSTOMER NUMBER UPDATE IS RESTRICTED */ 01661000
 /*            |              | WHEN SOURCE INDICATOR IN T51 IS "O"  */ 01662000
 /* 2011-02-04 | RB01312      | T10-1083: USE T690 SLC1 IRRESPECTIVE */ 01662100
 /*            |              | OF BRAND WARRANTY DURATION           */ 01662200
 /*            |              | PCEDSP-0051:HANDLING WED BASED ON    */ 01663000
 /*            |              | WARRANTY LIABILITY (IBM/LEN)         */ 01664000
 /* 2013-03-15 | RB01327      | SWG REQUIREMENT -                    */ 01664100
 /*            |              | CEDS 3.3 A18 RELEASE                 */ 01664200
 /* 2015-08-04 | RC01362      | PCR 0472 - TO REMOVE ASSIGNING OF    */ 01664399
 /*            |              | TOM TO G WHEN RCB103 PARAMETER IS SET*/ 01664499
 /*            |              | TO Y FOR LENOVO MACHINES             */ 01664599
 /* 2016-01-04 | CEDS00000779 | T081613 - TO HANDLE THE CONDITION    */ 01664699
 /*            |              | WHEN RCB023M RETURNS 'HIGH(3)' VALUES*/ 01664799
 /*            |              | FOR ALL SLC FIELDS (OTHERWISE        */ 01664899
 /*            |              | CONDITION ADDED IN SELECT CLAUSE)    */ 01664999
 /* 2016-03-21 | RC01375      | PCR 0627 - TO ADD PROC ID UI43 TO    */ 01665099
 /*            |              | ACCOMMODATE LENOVO INTERIM SOLUTION  */ 01666099
 /* 2016-05-09 | RC01379      | PCR 0628 - TO ADD NEW FIELD          */ 01667099
 /*            |              | CUSTOMER_NUMBER_ORG TO PASS ORIGINAL */ 01668099
 /*            |              | CUSTOMER NUMBER FROM INPUT FILE      */ 01669099
 /*            |              | RCBBIF0 TO USER EXIT                 */ 01669199
 /********************************************************************/ 01670000
1/********************************************************************/ 01680000
 /* DEBUGGING                                                        */ 01690000
 /*                                                                  */ 01700000
 /* PROGRAMFLOW TRACING : PUT 'RCBBIFM_CHECK' ON 'Y'                 */ 01710000
 /* INFO PROGRAMMER     : PUT 'RCBBIFM_DEBUG' ON 'Y'                 */ 01720000
 /* (DON'T FORGET: DCL SYSPRINT FILE EXTERNAL PRINT)                 */ 01730000
 /*                                                                  */ 01740000
 /* >>> FOR RELEASE BOTH VALUES MUST BE 'N' <<<                      */ 01750000
 /*                                                                  */ 01760000
 /********************************************************************/ 01770000
0%DCL RCBBIFM_DEBUG CHAR;                                               01780000
 %DCL RCBBIFM_CHECK CHAR;                                               01790000
 %RCBBIFM_DEBUG = 'N';                                                  01800000
 %RCBBIFM_CHECK = 'N';                                                  01810000
0%IF ( RCBBIFM_CHECK = 'Y' ) %THEN                                      01820000
 %DO;                                                                   01830000
   (CHECK(                                                              01840000
   RCBBIFM                      ,                                       01850000
   RCBBIFM_INIT_PROGRAM         ,                                       01860000
   RCBBIFM_INIT_COUNTRY         ,                                       01870000
   RCBBIFM_GET_ES_MAXNUMBER     ,                          /*RB01289 */ 01880000
   RCBBIFM_GET_CC_MAXNUMBER     ,                          /*RB01289 */ 01890000
   RCBBIFM_READ_RECORD          ,                                       01900000
   RCBBIFM_READ_RCBBIFN         ,                          /*RB01236 */ 01910000
   RCBBIFM_PROCESS_HEADER       ,                                       01920000
   RCBBIFM_INIT_WRK_FIELDS      ,                                       01930000
   RCBBIFM_PROCESS_CUSTOMER     ,                                       01940000
   RCBBIFM_CHECK_CUSTREC        ,                                       01950000
   RCBBIFM_WARN4BLANC           ,                                       01960000
   RCBBIFM_CHECK_MACHREC        ,                                       01970000
   RCBBIFM_CHECK_MACHREC_1      ,                     /* CEDS00000382*/ 01980000
   RCBBIFM_XVALID_DATE          ,                                       01990000
   RCBBIFM_CHECK_MULT_SERVPAC   ,                          /*RB01236 */ 02000000
   RCBBIFM_SELECT_TOS           ,                                       02010000
   RCBBIFM_HANDLE_USEREXIT      ,                                       02020000
   RCBBIFM_FILL_CUSTOMER        ,                                       02030000
   RCBBIFM_FILL_INVENTORY       ,                                       02040000
   RCBBIFM_FILL_T690_ARRAY      ,                          /* RB01298 */02050000
   RCBBIFM_RETRIEVE_FLEXIBLE    ,                                       02060000
   RCBBIFM_HANDLE_RCB023M       ,                                       02070000
   RCBBIFM_CALC_DATE            ,                                       02080000
   RCBBIFM_FILL_CONTRACT        ,                                       02090000
   RCBBIFM_XVALID_TIME          ,                                       02100000
   RCBBIFM_HHMM2ISOTIME         ,                                       02110000
   RCBBIFM_WRITE_CUSTOMER       ,                                       02120000
   RCBBIFM_WRITE_INVENTORY      ,                                       02130000
   RCBBIFM_WRITE_CONTRACT       ,                                       02140000
   RCBBIFM_SKIP_RECORD          ,                                       02150000
   RCBBIFM_REJECT_CUST          ,                                       02160000
   RCBBIFM_REJECT_RECORD        ,                                       02170000
   RCBBIFM_RETRIEVE_RCBV0470    ,                                       02180000
   RCBBIFM_RETRIEVE_RCBV0640    ,                         /* RC01234 */ 02190000
   RCBBIFM_TERM_PROGRAM         ,                                       02200000
   RCBBIFM_MSG                  ,                                       02210000
   RCBBIFM_ERROR                                                        02220000
   )):                                                                  02230000
 %END;                                                                  02240000
1RCBBIFM: PROC                                                          02250000
          OPTIONS (MAIN)                                                02260000
          REORDER;                                                      02270000
0/********************************************************************/ 02280000
 /* FILE DECLARATIONS                                                */ 02290000
 /********************************************************************/ 02300000
 DCL SYSPRINT FILE EXTERNAL PRINT;  /*                               */ 02310000
 DCL RCBBIF0  FILE RECORD INPUT;    /* SHRINK WRAP FILE              */ 02320000
                                    /* OR DSW FILE           RB01327 */ 02321099
                                                      /* SOC RB01236 */ 02330000
 DCL RCBBIFN  FILE RECORD INPUT;    /* PART/CONTRACT NUMBER FILE     */ 02340000
                                                      /* EOC RB01236 */ 02350000
 DCL RCBBIFB  FILE RECORD INPUT;    /* TABLE 690 RECORDS - RB01298   */ 02360000
 DCL RCBBIA0  FILE RECORD OUTPUT;   /* RCB CUSTOMER FILE             */ 02370000
 DCL RCBBIB0  FILE RECORD OUTPUT;   /* RCB INVENTORY FILE            */ 02380000
 DCL RCBBIC0  FILE RECORD OUTPUT;   /* RCB CONTRACT FILE             */ 02390000
 DCL RCBBIF1  FILE RECORD OUTPUT;   /* REJECTED SHRINK WRAP RECORDS  */ 02400000
 DCL RCB0M10  FILE RECORD OUTPUT;   /* MESSAGE FILE                  */ 02410000
0/********************************************************************/ 02420000
 /* EXTERNAL ENTRIES                                                 */ 02430000
 /********************************************************************/ 02440000
0DCL RCB0E1M    ENTRY EXTERNAL;        /* COMMON ERROR ROUTINE       */ 02450000
 DCL RCB0M1M    ENTRY EXTERNAL;        /* COMMON MESSAGE ROUTINE     */ 02460000
 DCL RCB0T1M    ENTRY EXTERNAL;        /* RECEIVE SYSTEM DATE        */ 02470000
 DCL RCB004M    ENTRY EXTERNAL;        /* DATE CALC ROUTINE          */ 02480000
 DCL RCB013M    ENTRY EXTERNAL;        /* READ PARAMETER FILE        */ 02490000
 DCL RCB019M    ENTRY EXTERNAL;        /* RETRIEVE COUNTRY-NUMBERS   */ 02500000
 DCL RCB020M    ENTRY EXTERNAL;        /* RETRIEVE RUN-DATE          */ 02510000
                                                        /*SOC *RC01191*/02520000
 DCL RCB023M    ENTRY EXTERNAL;        /* GET WED, SLC'S + W_SPLT_DT */ 02530000
 DCL RCBISRM    ENTRY EXTERNAL;                           /* RA01234 */ 02540000
                             /* RETRIEVE ROW FROM RCBT0470_SERV_COND */ 02550000
                             /* RETRIEVE ROW FROM RCBT0475_CTRY_COND */ 02560000
 DCL RCBF50M    ENTRY EXTERNAL;        /* INSERT FILE SEQUENCE NO    */ 02570000
 DCL RCBI50M    ENTRY EXTERNAL;        /* RETRIEVE FILE SEQUENCE NO  */ 02580000
 DCL RCBG50M    ENTRY EXTERNAL;        /* UPDATE FILE SEQUENCE NO    */ 02590000
 DCL RCBISPM    ENTRY EXTERNAL;    /* RETRIEVE CONTRACT SLC - RB01250 */02600000
                                                        /*EOC *RC01191*/02610000
 DCL RCBIBOM    ENTRY EXTERNAL;        /* RETRIEVE SERVICE TYPE      */ 02620000
                                                          /* RC01234 */ 02630000
 DCL RCBBIFU    ENTRY EXTERNAL;        /* USER EXIT FOR RCBBIFM      */ 02640000
0/********************************************************************/ 02650000
 /* EXTERNAL PARAMETER INTERFACES                                    */ 02660000
 /********************************************************************/ 02670000
 DCL PTR_DATE_AREA        PTR;         /* RCB004M DATE CHECK         */ 02680000
 DCL PTR_INT_AREA         PTR;                                          02690000
 DCL PTR_RETURN_AREA      PTR;                                          02700000
 DCL PTR_COUNTRY_AREA     PTR;                                          02710000
 DCL PTR_RUN_DATE_AREA    PTR;                                          02720000
 DCL RETCODE              FIXED BIN(31);                                02730000
                                                                        02740000
 DCL 1 DATE_AREA,                      /* DATE AREA                  */ 02750000
       %INCLUDE (RCBZ03S);;                                             02760000
 DCL 1 PARM_INT_AREA,                  /* INTERFACE AREA             */ 02770000
       %INCLUDE (RCBZ01S);;                                             02780000
 DCL 1 PARM,                           /* PARAMETER STRUCTURE        */ 02790000
       %INCLUDE (RCBZ13S);;                                             02800000
 DCL 1 TPWAR,                          /* WARRANTY DEFINE'S          */ 02810000
       %INCLUDE (RCBZ99S);;                                             02820000
 DCL 1 RETURN_AREA,                    /* RETURN AREA                */ 02830000
       %INCLUDE (RCBZ02S);;                                             02840000
 DCL 1 COUNTRY_AREA,                   /* COUNTRY ARRAY AREA         */ 02850000
       %INCLUDE (RCBZ26S);;                                             02860000
 DCL 1 RUN_DATE_AREA,                  /* RUNDATE AREA               */ 02870000
       %INCLUDE (RCBZ28S);;                                             02880000
                                                       /* SOC *RC01191*/02890000
 DCL 1 PARM_RCBZ32S,                   /* INTERFACE AREA TO RCB023M  */ 02900000
       %INCLUDE (RCBZ32S);;                                             02910000
                                                       /* EOC *RC01191*/02920000
0/********************************************************************/ 02930000
 /* DB2 SQLCA                                                        */ 02940000
 /********************************************************************/ 02950000
0EXEC SQL                                                               02960000
   INCLUDE SQLCA;                                                       02970000
0/********************************************************************/ 02980000
 /* DB2 TABLE STRUCTURES                                             */ 02990000
 /********************************************************************/ 03000000
 DCL PTR_RCBV011    PTR;               /* PTR CUSTOMER ROW    RA01236*/ 03010000
 DCL PTR_RCBV011I   PTR;               /* PTR NULL-IND. CUSTOMER     */ 03020000
 DCL 1 RCB011S,                        /* CUSTOMER ROW               */ 03030000
       %INCLUDE (RCB011S);;                                             03040000
 DCL 1 RCB011SI,                       /* NULL-INDICATORS            */ 03050000
       %INCLUDE (RCB011SI);;                                            03060000
                                                       /* EOC RA01236*/ 03070000
 DCL PTR_RCBV051    PTR;               /* PTR INVENTORY ROW          */ 03080000
 DCL PTR_RCBV051I   PTR;               /* PTR NULL-IND. INVENTORY    */ 03090000
 DCL 1 RCB051S,                        /* INVENTORY ROW              */ 03100000
       %INCLUDE (RCB051S);;                                             03110000
 DCL 1 RCB051SI,                       /* NULL-INDICATORS            */ 03120000
       %INCLUDE (RCB051SI);;                                            03130000
                                                       /* SOC *RC01191*/03140000
 DCL PTR_RCBV630    PTR;               /* PTR PARAMETER ROW          */ 03150000
 DCL PTR_RCBV630I   PTR;               /* PTR NULL-IND. PARAMETER    */ 03160000
 DCL 1 TB_RCBV630,                     /* PARAMETER ROW              */ 03170000
       %INCLUDE (RCB630S);;                                             03180000
 DCL 1 TB_RCBV630_I,                   /* NULL-IND. PARAMETER        */ 03190000
       %INCLUDE (RCB630SI);;                                            03200000
 DCL PTR_RCBV500    PTR;               /* PTR PARAMETER ROW          */ 03210000
 DCL PTR_RCBV500I   PTR;               /* PTR NULL-IND. PARAMETER    */ 03220000
 DCL 1 TB_RCBV500,                     /* PARAMETER ROW              */ 03230000
       %INCLUDE (RCB500S);;                                             03240000
 DCL 1 TB_RCBV500_I,                   /* NULL-IND. PARAMETER        */ 03250000
       %INCLUDE (RCB500SI);;                                            03260000
                                                      /* EOC *RC01191*/ 03270000
 DCL 1 TB_RCBV470,                                    /* SOC PTM1173 */ 03280000
      %INCLUDE (RCB470S);;                                              03290000
 DCL 1 TB_RCBV470_I,                                                    03300000
      %INCLUDE (RCB470SI);;                           /* EOC PTM1173 */ 03310000
                                                                        03320000
 DCL 1 TB_RCBV640,                                    /* SOC RC01234 */ 03330000
      %INCLUDE (RCB640S);;                                              03340000
 DCL 1 TB_RCBV640_I,                                                    03350000
      %INCLUDE (RCB640SI);;                           /* EOC RC01234 */ 03360000
                                                                        03370000
 DCL 1 TB_RCBV400,                                    /* SOC RB01278 */ 03380000
      %INCLUDE (RCB400S);;                                              03390000
0DCL 1 TB_RCBV400_I,                                                    03400000
      %INCLUDE (RCB400SI);;                           /* EOC RB01278 */ 03410000
                                                      /* SOC RB01298 */ 03420000
 /* DCL 1 TB_RCBV690,                                 /* SOC RB01281 */ 03430000
 /*       %INCLUDE (RCB690S);;                                          03440000
 /* 0DCL 1 TB_RCBV690_I,                                                03450000
 /*        %INCLUDE (RCB690SI);;                      /* EOC RB01281 */ 03460000
 DCL 1 FILE_RCBBIFB,                           /* SORTED UNLOAD FILE */ 03470000
      %INCLUDE (RCBBCAS);;                                              03480000
                                                      /* EOC RB01298 */ 03490000
1/********************************************************************/ 03500000
 /*  PROGRAM CONTROL PARAMETERS                                      */ 03510000
 /********************************************************************/ 03520000
                                                       /* SOC *RC01191*/03530000
0DCL 1 TB_RCB035        BASED(PTR_RCBV500),           /*FILE SEQUENCE*/ 03540000
       %INCLUDE (RCBP35S);;                                             03550000
0DCL 1 RCB035,                                                          03560000
       %INCLUDE (RCBP35S);;                                             03570000
                                                       /* EOC *RC01191*/03580000
                                                       /* EOC RC01191*/ 03590000
0DCL 1 TB_RCB103        BASED (PTR_RCBV500),           /* SOC RB01278*/ 03600000
       %INCLUDE (RCBP103S);;                                            03610000
0DCL 1 RCB103,                                                          03620000
       %INCLUDE (RCBP103S);;                           /* EOC RB01278*/ 03630000
                                                                        03640000
0DCL 1 TB_RCB063        BASED(PTR_RCBV500),          /* SOC RB01281 */  03650000
       %INCLUDE (RCBP63S);;                                             03660000
0DCL 1 RCB063,                                                          03670000
       %INCLUDE (RCBP63S);;                         /* EOC RB01281 */   03680000
                                                                        03690000
0DCL 1 TB_RCB064        BASED(PTR_RCBV500),          /* SOC RB01298 */  03700000
       %INCLUDE (RCBP64S);;                                             03710000
0DCL 1 RCB064,                                                          03720000
       %INCLUDE (RCBP64S);;                          /* EOC RB01298 */  03730000
                                                                        03740000
1/********************************************************************/ 03750000
 /* RECORD STRUCTURES FOR INPUT AND OUTPUT FILES                     */ 03760000
 /********************************************************************/ 03770000
 DCL FILE_RCBBIF0   CHAR(142);/* IOAREA SHRINK WRAP FILE/CEDS00000344*/ 03780000
 DCL 1 RCBBIF0_HEADER BASED(ADDR(FILE_RCBBIF0)),                        03790000
      %INCLUDE RCBBIFSH;;        /* IOAREA HEADER RECORD             */ 03800000
 DCL 1 RCBBIF0_TRAIL  BASED(ADDR(FILE_RCBBIF0)),                        03810000
      %INCLUDE RCBBIFST;;        /* IOAREA TRAILOR RECORD            */ 03820000
 DCL 1 RCBBIF0_CISCO_HEADER BASED(ADDR(FILE_RCBBIF0)),                  03830000
      %INCLUDE RCBBIFCH;;        /* IOAREA HEADER RECORD             */ 03840000
 DCL 1 RCBBIF0_CISCO_TRAIL  BASED(ADDR(FILE_RCBBIF0)),                  03850000
      %INCLUDE RCBBIFCT;;        /* IOAREA TRAILOR RECORD            */ 03860000
 DCL 1 RCBBIF0_CUST   BASED(ADDR(FILE_RCBBIF0)),                        03870000
      %INCLUDE RCBBIFS1;;        /* IOAREA CUSTOMER RECORD           */ 03880000
 DCL 1 RCBBIF0_MACH   BASED(ADDR(FILE_RCBBIF0)),                        03890000
      %INCLUDE RCBBIFS2;;        /* IOAREA MACHINE RECORD            */ 03900000
                                                      /* SOC RB01236 */ 03910000
 DCL FILE_RCBBIFN     CHAR(80);  /* IOAREA PART/CONTRACT NUMBER FILE */ 03920000
 DCL 1 RCBBIFN_DATA   BASED(ADDR(FILE_RCBBIFN)),                        03930000
      %INCLUDE RCBBIFN;;         /* IOAREA PART/CONTRACT NUMBER REC. */ 03940000
                                                      /* EOC RB01236 */ 03950000
                                                 /*SOC CEDS00000344 */  03960000
 DCL FILE_RCBBIF1     CHAR(142); /* IOAREA REJECTED SHRINK WRAP RECS.*/ 03970000
                                                 /* EOC CEDS00000344*/  03980000
                                                                        03990000
 DCL 1 FILE_RCBBIA0,             /* IOAREA RCB CUSTOMER FILE         */ 04000000
      %INCLUDE RCBBIAS;;                                                04010000
                                                                        04020000
 DCL 1 FILE_RCBBIB0,             /* IOAREA RCB INVENTORY FILE        */ 04030000
      %INCLUDE RCBBIBS;;                                                04040000
                                                                        04050000
 DCL 1 FILE_RCBBIC0,             /* IOAREA RCB CONTRACT FILE         */ 04060000
      %INCLUDE RCBBICS;;                                                04070000
                                                 /*SOC CEDS00000344 */  04080000
 DCL G_SAVE_CUST_REC CHAR(142);  /* SAVE-IOAREA SHRINK WRAP FILE     */ 04090000
                                                 /* EOC CEDS00000344 */ 04100000
 DCL 1 USER_FILE,                /* INTERFACE FOR USER EXIT RCBBIFU  */ 04110000
       2 DATA,                                                          04120000
      %INCLUDE RCBBIFSU;;                                               04130000
0/********************************************************************/ 04140000
 /* BIT SWITCHES                                                     */ 04150000
 /********************************************************************/ 04160000
0DCL TRUE                  BIT(1) INIT('1'B);                           04170000
 DCL FALSE                 BIT(1) INIT('0'B);                           04180000
 DCL EOF_RCBBIF0           BIT(1) INIT('0'B);/* END-OF-FILE SWITCH   */ 04190000
 DCL RECORD_CORRECT        BIT(1);                                      04200000
 DCL FOUND                 BIT(1);                          /*RC01191*/ 04210000
 DCL SW_640_FOUND          BIT(1);                          /*PTM1411*/ 04220000
 DCL SW_COVERAGE_HOURS_FOUND   BIT (1)   INIT ('0'B);       /*PTM1173*/ 04230000
 DCL SKIP_COUNTRY          BIT(1) INIT('0'B);                           04240000
 DCL SWITCH_END_CTY        BIT(1) INIT('0'B);                           04250000
 DCL WRONG_MACH_FOR_CUST   BIT(1) INIT('0'B);/* (IN)CORRECT MACHINE  */ 04260000
 DCL RIGHT_MACH_FOR_CUST   BIT(1) INIT('0'B);/* EXISTS FOR CUSTOMER  */ 04270000
 DCL SWITCH_USER_EXIT      BIT(1) INIT('1'B);                           04280000
 DCL EOF_RCBBIFN           BIT(1) INIT('0'B);/* END-OF-FILE -RB01236 */ 04290000
 DCL SWITCH_VENDOR_SERVICE BIT(1) INIT('0'B);             /* RB01278 */ 04300000
 DCL MULT_SPAC             BIT(1);                        /* RB01236 */ 04310000
 DCL CONTR_OVERLAP         BIT(1);                        /* RB01236 */ 04320000
 DCL CONTR_EXIST           BIT(1);                        /* RB01236 */ 04330000
 DCL T051_FND              BIT(1);                        /* RB01236 */ 04340000
 DCL SWITCH_FLEXIBLE_WARRANTY BIT(1) INIT('0'B);          /* RB01281 */ 04350000
 DCL SWITCH_EPDUMMY_FLAG   BIT(1) INIT('0'B);             /* RB01289 */ 04360000
 DCL SWITCH_CIDUMMY_FLAG   BIT(1) INIT('0'B);             /* RB01289 */ 04370000
                                                      /* SOC RB01298 */ 04380000
 DCL SWITCH_EMPTY_T690     BIT(1) INIT ('0'B);                          04390000
 DCL EOF_RCBBIFB           BIT(1) INIT ('0'B);                          04400000
                                                      /* EOC RB01298 */ 04410000
0/********************************************************************/ 04420000
 /* MISCELLANEOUS FIELDS                                             */ 04430000
 /********************************************************************/ 04440000
0DCL G_WRK_MOD_NAME       CHAR(08) INIT ('RCBBIFM ');                   04450000
 DCL G_WRK_PGM_NAME       CHAR(08) INIT ('RCBBIFP ');                   04460000
 DCL G_WRK_SYSTEM_TYPE    CHAR(01) INIT ('B');                          04470000
 DCL G_WRK_INSTALL_DATE   CHAR(10);                                     04480000
 /*DCL G_WRK_WARR_EXP_DATE  CHAR(10); */                   /* RB01272 */04490000
 DCL G_WRK_SERV_START_DATE CHAR(10);                                    04500000
 DCL G_WRK_SERV_END_DATE  CHAR(10);                                     04510000
 DCL G_WRK_FILE_NAME      CHAR(25);                                     04520000
 DCL G_CURR_KEY           CHAR(11);                                     04530000
 DCL G_SAVE_KEY           CHAR(11);                                     04540000
 DCL WRK_CTRYNO           CHAR(03) INIT('');                            04550000
 DCL WRK_RUN_DATE         CHAR(10);                                     04560000
 DCL WRK_CTRY_FILE_PREV   CHAR(03);                                     04570000
 DCL WRK_PGR_RUN_TYPE     CHAR(03);                                     04580000
 DCL WRK_DIST             CHAR(20);                        /* RC01191 */04590000
 DCL WRK_FILE_SEQ         PIC '99999';                     /* RC01191 */04600000
 DCL WRK_ORIGIN           CHAR(02);                        /* PTM1158 */04610000
 DCL WRK_SEQUENCE_NUMBER  CHAR(28);                        /* RB01242 */04620000
 DCL WRK_COD_8            CHAR(02);                        /* PTM1411 */04630000
 DCL WRK_VAL_8            CHAR(25);                        /* PTM1411 */04640000
 DCL WRK_CUST_NO          CHAR(06) INIT('000000');         /* RA01236 */04650000
 DCL WRK_CUST_CNT         PIC '999999'                     /* RA01236 */04660000
                          BASED(ADDR(WRK_CUST_NO));        /* RA01236 */04670000
 DCL WRK_INDNULL          FIXED BIN (15);                  /* RA01236 */04680000
 DCL WRK_COUNT            FIXED BIN (31);                  /* RB01236 */04690000
 DCL L_CNT_PIC10          PIC 'Z,ZZZ,ZZZ,ZZ9';                          04700000
 DCL L_CNT_PIC9           PIC '999999999';                 /* PTM1233 */04710000
 DCL WRK_PRODUCT_TYPE     CHAR(04);                    /* SOC RB01278 */04720000
 DCL WRK_MODEL            CHAR(03);                                     04730000
 /* DCL WRK_LENOVO_DATE      CHAR(10) INIT('2005-05-01');             */04740000
                                         /* RB01283 */ /* EOC RB01278 */04750000
 DCL WRK_T051_LIABILITY   CHAR(3);                         /* RB01283 */04760000
 DCL WRK_RULE          CHAR(2);                        /* SOC RB01298 */04761000
 DCL WRK_F_TOW         CHAR(1);                                         04762000
 DCL WRK_HB_TOM       CHAR(1);                         /* EOC RB01298 */04763000
                                                       /* SOC PTM1411 */04770000
 DCL   UPPERCASE   CHAR(26)   INIT('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),       04780000
       LOWERCASE   CHAR(26)   INIT('abcdefghijklmnopqrstuvwxyz');       04790000
                                                       /* EOC PTM1411 */04800000
 DCL 1 G_CNTS,                                                          04810000
      3 CNT,                                                            04820000
       5 RCBBIF0_READ     FIXED BIN (31),                               04830000
       5 RCBBIF0_SKIP     FIXED BIN (31),                               04840000
       5 RCBBIF0_REJECT   FIXED BIN (31),                               04850000
       5 RCBBIF0_ACCEPT   FIXED BIN (31),                               04860000
       5 RCBBIF0_BLOCK    FIXED BIN (31),                               04870000
       5 RCBBIA0_WRITE    FIXED BIN (31),                               04880000
       5 RCBBIB0_WRITE    FIXED BIN (31),                               04890000
       5 RCBBIC0_WRITE    FIXED BIN (31),                               04900000
       5 DOUBLE_CUST      FIXED BIN (31),                               04910000
      3 TOT,                                                            04920000
       5 RCBBIF0_READ     FIXED BIN (31),                               04930000
       5 RCBBIF0_SKIP     FIXED BIN (31),                               04940000
       5 RCBBIF0_REJECT   FIXED BIN (31),                               04950000
       5 RCBBIF0_ACCEPT   FIXED BIN (31),                               04960000
       5 RCBBIF0_BLOCK    FIXED BIN (31),                               04970000
       5 RCBBIA0_WRITE    FIXED BIN (31),                               04980000
       5 RCBBIB0_WRITE    FIXED BIN (31),                               04990000
       5 RCBBIC0_WRITE    FIXED BIN (31),                               05000000
       5 DOUBLE_CUST      FIXED BIN (31),                               05010000
      3 HEAD_SEQ          FIXED BIN (31),                               05020000
      3 TRAILER_SEQ       FIXED BIN (31),                               05030000
      3 COMPARE_TOTAL     FIXED BIN (31);                               05040000
                                                                        05050000
 DCL CTY_IDX              FIXED DEC (3,0) INIT(0);                      05060000
                                                     /* SOC RB01236 */  05070000
 %DCL TABMAX FIXED                     /* NUMBER OF TABLE ENTRIES   */; 05080000
 %TABMAX = 999                         /* SETTING IT TO 999         */; 05090000
 DCL 1 MAX_CONTRACTS          FIXED BIN(31)  INIT(TABMAX);              05100000
 DCL 1 MSP_CONTRACTS(TABMAX)  CHAR(7); /*MULTIPLE SERV.PAC CONTRACTS*/  05110000
                                                                        05120000
 DCL 1 CONTRACTS_COUNT        FIXED BIN(31);                            05130000
                                                     /* EOC RB01236 */  05140000
                                                       /* SOC RB01298 */05150000
 DCL REC_COUNT           FIXED BIN(31)   INIT(0);                       05160000
 DCL I,J,K               FIXED BIN(31)   INIT(0);                       05170000
 DCL 1 T690_ARRAY(REC_COUNT) CTL,                                       05180000
        2 A_COUNTRY    CHAR(3),                                         05190000
        2 A_TYPE       CHAR(4),                                         05200000
        2 A_MODEL      CHAR(3),                                         05210000
        2 A_B_W_MNTHS  DEC FIXED(3,0),                                  05220000
        2 A_SLC_NULLIND CHAR(1),                                        05230000
        2 A_SLC        CHAR(3),                                         05240000
        2 A_EFF_DATE   CHAR(10),                                        05250000
        2 A_END_DATE   CHAR(10),                                        05260000
        2 A_SLC2       CHAR(3),                                         05270000
        2 A_SLC2_NULLIND CHAR(1),                                       05280000
        2 RULE         CHAR(2);                                         05290000
                                                       /* EOC RB01298 */05350000
0/********************************************************************/ 05360000
 /*  USED TEMPORARY FIELDS FOR MESSAGE HANDLING                      */ 05370000
 /********************************************************************/ 05380000
0DCL 1 G_WRKMSG,                                                        05390000
       3 TXTFIELD_1     CHAR (25),                                      05400000
       3 TXTFIELD_2     CHAR (25),                                      05410000
       3 TXTFIELD_3     CHAR (25),                                      05420000
       3 NUMFIELD_1     FIXED BIN(31),                                  05430000
       3 NUMFIELD_2     FIXED BIN(31),                                  05440000
       3 NUMFIELD_3     FIXED BIN(31),                                  05450000
       3 NUMFIELD_4     FIXED BIN(31),                                  05460000
       3 NUMFIELD_5     FIXED BIN(31),                                  05470000
       3 NUMFIELD_6     FIXED BIN(31);                                  05480000
0/********************************************************************/ 05490000
 /*  BUILTIN FUNCTIONS                                               */ 05500000
 /********************************************************************/ 05510000
0DCL (ADDR,                                                             05520000
     DATE,                                                              05530000
     NULL,                                                              05540000
     HIGH,                                                              05550000
     LENGTH,                                                            05551000
     INDEX,                                                             05560000
     LOW,                                                               05570000
     SUBSTR,                                                            05580000
     TRANSLATE,                                                         05590000
     VERIFY,                                                            05600000
     TIME)                   BUILTIN;                                   05610000
0/********************************************************************/ 05620000
 /* ON ERROR CONDITIONS                                              */ 05630000
 /********************************************************************/ 05640000
 %INCLUDE (RCB0E0M);                                                    05650000
  END;                                                                  05660000
0/********************************************************************/ 05670000
 /* ON ENDFILE                                                       */ 05680000
 /********************************************************************/ 05690000
0ON ENDFILE (RCBBIF0)                                                   05700000
   BEGIN;                                                               05710000
     EOF_RCBBIF0 = '1'B;                                                05720000
   END;                                                                 05730000
0                                                     /* SOC RB01236 */ 05740000
 ON ENDFILE (RCBBIFN)                                                   05750000
   BEGIN;                                                               05760000
     EOF_RCBBIFN = '1'B;                                                05770000
   END;                                                                 05780000
0                                                     /* EOC RB01236 */ 05790000
                                                       /* SOC RB01298 */05800000
 ON ENDFILE (RCBBIFB)                                                   05810000
   BEGIN;                                                               05820000
     EOF_RCBBIFB = TRUE;                                                05830000
   END;                                                                 05840000
                                                       /* EOC RB01298 */05850000
1/********************************************************************/ 05860000
 /*MAIN:            S T A R T   P R O C C E S S I N G                */ 05870000
 /********************************************************************/ 05880000
 CALL RCBBIFM_INIT_PROGRAM;                  /* INIT PROGRAM         */ 05890000
 CALL RCBBIFM_INIT_COUNTRY;                                             05900000
 WRK_CTRY_FILE_PREV = RCBBIF0_CUST.COUNTRY_NUMBER;                      05910000
                                             /* WHILE NOT EOF AND    */ 05920000
                                             /* NOT EOF CTY-ARRAY    */ 05930000
 DO WHILE (¬ (SWITCH_END_CTY & EOF_RCBBIF0));                           05940000
   IF (RCBBIF0_HEADER.SORTKEY = LOW(15))     /* SECOND HEADERRECORD  */ 05950000
   THEN DO;                                                             05960000
     CALL RCBBIFM_MSG('0014');               /* INVALID HEADER FOUND */ 05970000
     CALL RCBBIFM_ERROR (NULL, 'OTHER', '#001');            /* ABORT */ 05980000
   END;                                                                 05990000
                                             /* TRAILERRECORD FOUND  */ 06000000
   IF (RCBBIF0_TRAIL.SORTKEY = HIGH(15)                                 06010000
    |  RCBBIF0_TRAIL.SORTKEY = '999999999999999')         /* RA01236 */ 06020000
    &  ¬EOF_RCBBIF0                                                     06030000
   THEN                                                                 06040000
     CALL RCBBIFM_PROCES_TRAILER;                                       06050000
   ELSE DO;                                                             06060000
                                   /* MORE RECORDS FOR THIS COUNTRY? */ 06070000
     DO WHILE (((RCBBIF0_CUST.COUNTRY_NUMBER = WRK_CTRY_FILE_PREV)      06080000
         &      ¬EOF_RCBBIF0)                                           06090000
         &    ((RCBBIF0_CUST.COUNTRY_NUMBER <= WRK_CTRYNO)              06100000
         |      SWITCH_END_CTY));                                       06110000
       IF (SKIP_COUNTRY)                      /* CTY NOT IN PARAMETER*/ 06120000
       THEN DO;                                                         06130000
         G_CNTS.CNT.RCBBIF0_READ = G_CNTS.CNT.RCBBIF0_READ + 1;         06140000
         CALL RCBBIFM_SKIP_RECORD;     /* SKIP RECORD         */        06150000
         CALL RCBBIFM_READ_RECORD;     /* READ NEXT RECORD    */        06160000
       END;                                                             06170000
       ELSE DO;                                                         06180000
                                                      /* SOC *RC01191*/ 06190000
         IF WRK_DIST             = 'SHRINK WRAP         '               06200000
          | COUNTRY_AREA.PROC_ID = 'UI13'                 /* RA01236 */ 06210000
          | COUNTRY_AREA.PROC_ID = 'UI43'                 /* RC01375 */ 06211099
         THEN                                                           06220000
           CALL RCBBIFM_PROCESS_CUSTOMER;       /* ALL CUSTOMER RECS */ 06230000
                                                      /* SOC *RC01191*/ 06240000
         ELSE DO;                                                       06250000
           G_CNTS.CNT.RCBBIF0_READ = G_CNTS.CNT.RCBBIF0_READ + 1;       06260000
           CALL RCBBIFM_CHECK_MACHREC;          /* ALL MACHINE RECS  */ 06270000
           IF (RECORD_CORRECT)                                          06280000
            THEN                               /*SOC CEDS00000382   */  06290000
              CALL RCBBIFM_CHECK_MACHREC_1;                             06300000
           IF (RECORD_CORRECT)                 /*EOC CEDS00000382   */  06310000
           THEN DO;                                                     06320000
             CALL RCBBIFM_FILL_INVENTORY;                               06330000
             CALL RCBBIFM_FILL_CONTRACT;                                06340000
             IF (RECORD_CORRECT)                      /* PTM1411     */ 06350000
             THEN DO;                                                   06360000
               CALL RCBBIFM_HANDLE_USEREXIT;                            06370000
                                                      /* SOC RB01236 */ 06380000
               IF T051_FND = '1'B &              /* NO T051 UPDATE - */ 06390000
                  MULT_SPAC = '1'B THEN;         /* FOR MULT.SERV.PAC*/ 06400000
               ELSE                                                     06410000
                 CALL RCBBIFM_WRITE_INVENTORY;                          06420000
                                                      /* EOC RB01236 */ 06430000
               CALL RCBBIFM_WRITE_CONTRACT;                             06440000
             END;                                                       06450000
           END;                                                         06460000
           IF (¬RECORD_CORRECT) THEN                  /* PTM1411     */ 06470000
             CALL RCBBIFM_REJECT_RECORD;                                06480000
           CALL RCBBIFM_READ_RECORD;                                    06490000
         END;                                         /* EOC *RC01191*/ 06500000
       END;                                                             06510000
     END;                                                               06520000
     CALL RCBBIFM_TERM_COUNTRY;               /* TERMINATE COUNTRY   */ 06530000
     CALL RCBBIFM_INIT_COUNTRY;                                         06540000
     WRK_CTRY_FILE_PREV = RCBBIF0_CUST.COUNTRY_NUMBER;                  06550000
   END;                                                                 06560000
 END;                                                                   06570000
                                                                        06580000
 CALL RCBBIFM_CONTROL_COUNTERS;              /* VERIFY PROCES COUNTS */ 06590000
 CALL RCBBIFM_TERM_PROGRAM;                  /* TERMINATE PROGRAM    */ 06600000
1/********************************************************************/ 06610000
 /*                                                                  */ 06620000
 /* MODULE NAME      : RCBBIFM_INIT_PROGRAM                          */ 06630000
 /*                                                                  */ 06640000
 /* DESCRIPTION      : INITIAL ACTIONS                               */ 06650000
 /*                                                                  */ 06660000
 /********************************************************************/ 06670000
 RCBBIFM_INIT_PROGRAM: PROC;                                            06680000
                                                                        06690000
 PTR_INT_AREA       = ADDR(PARM_INT_AREA);                              06700000
 PTR_DATE_AREA      = ADDR(DATE_AREA);                                  06710000
 PTR_RETURN_AREA    = ADDR(RETURN_AREA);                                06720000
 PTR_RUN_DATE_AREA  = ADDR(RUN_DATE_AREA);                              06730000
 PTR_COUNTRY_AREA   = ADDR(COUNTRY_AREA);                               06740000
                                 /* INITIAL GLOBALS */                  06750000
 G_CNTS   = '';                                                         06760000
 G_WRKMSG = '';                                                         06770000
                                 /* INITIALISE SAVE FIELDS           */ 06780000
 G_SAVE_KEY = '';                                                       06790000
                                 /* OPEN ALL FILES                   */ 06800000
 OPEN FILE (RCBBIF0);                                                   06810000
 OPEN FILE (RCBBIFN);                                     /* RB01236 */ 06820000
 OPEN FILE (RCBBIFB);                                     /* RB01298 */ 06830000
 OPEN FILE (RCBBIF1);                                                   06840000
 OPEN FILE (RCBBIA0);                                                   06850000
 OPEN FILE (RCBBIB0);                                                   06860000
 OPEN FILE (RCBBIC0);                                                   06870000
                  /* INITIALISE INTERFACE AREA AND OPEN MESSAGE FILE */ 06880000
 PARM_INT_AREA.MSG_AREA       = '';                                     06890000
 PARM_INT_AREA.ERR_AREA       = ' ';                                    06900000
 PARM_INT_AREA.MSG_REQUEST    = 'O';                                    06910000
 PARM_INT_AREA.MSG_TARGET     = 'F';                                    06920000
 PARM_INT_AREA.ID_SOURCE_APPL = 'RCB';                                  06930000
 PARM_INT_AREA.ID_SOURCE_PROG = G_WRK_PGM_NAME;                         06940000
 PARM_INT_AREA.ID_MOD_PATH(1) = G_WRK_MOD_NAME;                         06950000
 PARM_INT_AREA.ID_MOD_LEVEL   = 1;                                      06960000
 PARM_INT_AREA.SYSTEM_TYPE    = G_WRK_SYSTEM_TYPE;                      06970000
 PARM_INT_AREA.PTR_PCB_IO     = NULL;                                   06980000
 PARM_INT_AREA.PTR_PCB_ALT    = NULL;                                   06990000
 PARM_INT_AREA.TXN_CODE       = '';                                     07000000
 PARM_INT_AREA.VERSION        = '';                                     07010000
                                                                        07020000
 CALL RCB0M1M(PTR_INT_AREA);                                            07030000
 PARM_INT_AREA.MSG_REQUEST    = 'P';                                    07040000
                                                                        07050000
 CALL RCB0T1M(PTR_INT_AREA);     /* RECEIVE SYSTEM DATE              */ 07060000
                                                                        07070000
 CALL RCB019M (PTR_COUNTRY_AREA,           /* RETRIEVE ALL COUNTRIES */ 07080000
               PTR_INT_AREA);              /* THEY COME SORTED       */ 07090000
                                                                        07100000
 IF COUNTRY_AREA.COUNT_CTRY = 0                                         07110000
 THEN                                                                   07120000
   DO;                                                                  07130000
     CALL RCBBIFM_MSG('0005');                                          07140000
     CALL RCBBIFM_ERROR (NULL, 'OTHER', '#002');                        07150000
   END;                                                                 07160000
                                                                        07170000
 SWITCH_END_CTY     = FALSE;                                            07180000
 WRK_CTRY_FILE_PREV = RCBBIF0_CUST.COUNTRY_NUMBER;                      07190000
                                                                        07200000
                                 /* GET PARAMETER                    */ 07210000
 CALL RCB013M(ADDR(PARM), RETCODE, PTR_INT_AREA);                       07220000
                                                                        07230000
 CALL RCBBIFM_READ_RCBBIFN;                  /*LOAD CONTRACTNR.ARRAY */ 07240000
                                                                        07250000
 CALL RCBBIFM_READ_RECORD;                   /* INITIAL READ         */ 07260000
                                                                        07270000
 IF (EOF_RCBBIF0)                            /* EMPTY FILE           */ 07280000
 THEN                                                                   07290000
   DO;                                                                  07300000
     CALL RCBBIFM_MSG('0013');                                          07310000
     CALL RCBBIFM_ERROR (NULL, 'OTHER', '#003');             /*ABORT*/  07320000
   END;                                                                 07330000
                                                                        07340000
 G_CNTS.TOT.RCBBIF0_READ = G_CNTS.TOT.RCBBIF0_READ + 1;                 07350000
 CALL RCBBIFM_PROCESS_HEADER;                                           07360000
 CALL RCBBIFM_READ_RECORD;                                              07370000
 CALL RCBBIFM_FILL_T690_ARRAY;                             /* RB01298 */07380000
                                                                        07390000
                                                      /* SOC RB01298 */ 07400000
 /* MOVED THE CODE FOR RETRIVAL OF PARAMETER 63 FROM INIT_COUNTRY PROC  07410000
 /* TO THIS PROC AS RETRIVAL OF THE PARAMETER IS NOT COUNTRY SPECIFIC */07420000
 /* GET TOW/TOM FROM RCB063 AT GEO LEVEL THAT WILL BE APPLIED FOR    */ 07430000
 /* FLEXIBLE WARR AND HARDBUNDLE MACHINES                            */ 07440000
 /* RCB063 IS A MANDATORY PARAMETER, IF NOT ABEND THE PROGRAM        */ 07450000
                                                      /* SOC RB01281 */ 07460000
 TB_RCBV500              = '';                                          07470000
 TB_RCBV500_I            = '';                                          07480000
 TB_RCB063.NUMBER        = 'RCB063';                                    07490000
 CALL RCBI50M ('R',                                 /* PASS PARAMETER*/ 07500000
               PTR_RCBV500,                                             07510000
               PTR_RCBV500I,                                            07520000
               PTR_RETURN_AREA,                                         07530000
               PTR_INT_AREA);                                           07540000
                                                                        07550000
 SELECT(RETURN_AREA.RETURN_CODE);                                       07560000
   WHEN(0)                                                              07570000
     DO;                                                                07580000
       RCB063  =  TB_RCB063;                                            07590000
     END;                                                               07780000
   WHEN(4)                                                              07790000
     DO;                                                                07800000
       PARM_INT_AREA.MESSAGE_TYPE             = 'IS';                   07810000
       PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER  = 'I050';                 07820000
       PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES   = ' ';                    07830000
       PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6  = 'PN';                   07840000
       PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6 =                         07850000
                                     TB_RCBV500.PARAMETER_NUMBER;       07860000
       PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_7  = 'PK';                   07870000
       PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_7 =                         07880000
                                     TB_RCBV500.PARAMETER_KEY;          07890000
       CALL RCB0M1M (PTR_INT_AREA);                                     07900000
       CALL RCBBIFM_ERROR (ADDR (RETURN_AREA.RETURN_SQL),               07910000
                          'DB2','#027');                                07920000
     END;                                                               07930000
    OTHERWISE                                                           07940000
     DO;                                                                07950000
       CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#028');                    07960000
     END;                                                               07970000
   END;                                                                 07980000
                                                     /* EOC RB01281 */  07990000
                                                     /* EOC RB01298 */  08000000
 END RCBBIFM_INIT_PROGRAM;                                              08010000
1/********************************************************************/ 08020000
 /*                                                                  */ 08030000
 /* MODULE NAME      : RCBBIFM_INIT_COUNTRY                          */ 08040000
 /*                                                                  */ 08050000
 /* DESCRIPTION      : CHECK COUNTRY_NUMBER AND INITIALISE COUNTRY   */ 08060000
 /*                                                                  */ 08070000
 /********************************************************************/ 08080000
 RCBBIFM_INIT_COUNTRY: PROC;                                            08090000
                                                                        08100000
 IF (((RCBBIF0_CUST.COUNTRY_NUMBER > WRK_CTRYNO) |                      08110000
      (EOF_RCBBIF0 | RCBBIF0_TRAIL.SORTKEY = HIGH(15))) &               08120000
                                       /* INPUT FILE AHEAD            */08130000
     ¬SWITCH_END_CTY )                 /* NOT END OF PARAMETER LIST   */08140000
 THEN DO;                                                               08150000
   IF (¬ SKIP_COUNTRY)                                                  08160000
   THEN                                                                 08170000
     DO;                                                                08180000
       CTY_IDX = CTY_IDX + 1;                                           08190000
     END;                                                               08200000
   IF CTY_IDX > COUNTRY_AREA.COUNT_CTRY                                 08210000
   THEN                                                                 08220000
     DO;                                                                08230000
       SWITCH_END_CTY = TRUE;                                           08240000
     END;                                                               08250000
   ELSE                                                                 08260000
     DO;                                                                08270000
       WRK_CTRYNO =                                                     08280000
         COUNTRY_AREA.CTRY_ARRAY.CTRYNO(CTY_IDX);                       08290000
       PARM_INT_AREA.COUNTRY_NUMBER = WRK_CTRYNO;                       08300000
       WRK_PGR_RUN_TYPE =                                               08310000
         COUNTRY_AREA.CTRY_ARRAY.PGR_TYPE(CTY_IDX);                     08320000
     END;                                                               08330000
 END;                                                                   08340000
 SKIP_COUNTRY = '0'B;                                                   08350000
                                      /* MORE INPUT COUNTRIES IN FILE */08360000
                                      /* THEN IN PARAMETER            */08370000
 IF (((RCBBIF0_CUST.COUNTRY_NUMBER <WRK_CTRYNO) | SWITCH_END_CTY)       08380000
      & ¬EOF_RCBBIF0 & RCBBIF0_TRAIL.SORTKEY ¬= HIGH(15))               08390000
 THEN DO;                                                               08400000
   SKIP_COUNTRY = '1'B;                                                 08410000
                                /* GIVE MESSAGE ABOUT COUNTRY IGNORED */08420000
   CALL RCBBIFM_MSG('0181');                                            08430000
 END;                                                                   08440000
 IF ¬SWITCH_END_CTY &                  /* NEW COUNTRY FOUND           */08450000
                                       /* DATE RETRIEVE NOT POSTPONED */08460000
    ((WRK_CTRYNO <= RCBBIF0_CUST.COUNTRY_NUMBER ) |                     08470000
      EOF_RCBBIF0 | RCBBIF0_TRAIL.SORTKEY = HIGH(15))                   08480000
 THEN                                                                   08490000
   DO;                                                                  08500000
    PARM_INT_AREA.COUNTRY_NUMBER  = WRK_CTRYNO;                         08510000
                                       /* RETRIEVE RUN DATE           */08520000
    RUN_DATE_AREA.PROC_ID   =  COUNTRY_AREA.PROC_ID;                    08530000
    RUN_DATE_AREA.CTRYNO    =  COUNTRY_AREA.CTRYNO(CTY_IDX);            08540000
    RUN_DATE_AREA.PGR_TYPE  =  COUNTRY_AREA.PGR_TYPE(CTY_IDX);          08550000
                                                                        08560000
    CALL RCB020M (PTR_RUN_DATE_AREA,                                    08570000
                  PTR_INT_AREA);                                        08580000
                                                                        08590000
    IF RUN_DATE_AREA.RUN_DATE = ''       /* NO RUN DATE RCB001 FOUND */ 08600000
    THEN                                                                08610000
      DO;                                                               08620000
        WRK_RUN_DATE = PARM_INT_AREA.SYSTEM_DATE;                       08630000
      END;                                                              08640000
    ELSE                                                                08650000
      DO;                                                               08660000
        WRK_RUN_DATE = RUN_DATE_AREA.RUN_DATE;                          08670000
      END;                                                              08680000
                                                                        08690000
    PARM_INT_AREA.RUN_DATE         = WRK_RUN_DATE;                      08700000
    CALL RCBBIFM_MSG('0216');                                           08710000
    IF COUNTRY_AREA.PROC_ID = 'UI13'                   /* SOC RA01236 */08720000
     | COUNTRY_AREA.PROC_ID = 'UI43'                       /* RC01375 */08721099
    THEN                                                                08730000
      DO;                                                               08740000
        SWITCH_EPDUMMY_FLAG = '1'B;                        /* RB01289 */08750000
        EXEC SQL                                                        08760000
        SELECT MAX(CUSTOMER_NUMBER)                                     08770000
          INTO :RCB011S.CUSTOMER_NUMBER :WRK_INDNULL                    08780000
          FROM RCBV0011_PI_CUST                                         08790000
         WHERE COUNTRY_NUMBER = :RCBBIF0_CUST.COUNTRY_NUMBER            08800000
           AND CUSTOMER_NUMBER LIKE 'EP%';                              08810000
                                                                        08820000
        SELECT (SQLCA.SQLCODE);                                         08830000
          WHEN (0)                                                      08840000
            DO;                                                         08850000
              IF WRK_INDNULL = 0                                        08860000
              THEN                                                      08870000
                DO;                                                     08880000
                  WRK_CUST_NO = SUBSTR(RCB011S.CUSTOMER_NUMBER,3,6);    08890000
                  IF WRK_CUST_CNT = 999999                              08900000
                  THEN                                                  08910000
                    DO;                                    /* RB01289 */08920000
                       WRK_CUST_CNT = 0;                                08930000
                       SWITCH_EPDUMMY_FLAG = FALSE;    /* SOC RB01289 */08940000
                       CALL RCBBIFM_GET_ES_MAXNUMBER;                   08950000
                    END;                               /* EOC RB01289 */08960000
                  ELSE                                                  08970000
                    WRK_CUST_CNT = WRK_CUST_CNT + 1;                    08980000
                END;                                                    08990000
              ELSE                                                      09000000
                WRK_CUST_CNT = 0;                                       09010000
            END;                                                        09020000
          WHEN (+100)                                                   09030000
            DO;                                                         09040000
              WRK_CUST_CNT = 0;                                         09050000
            END;                                                        09060000
          OTHERWISE                                                     09070000
            DO;                                                         09080000
              CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#004');             09090000
            END;                                                        09100000
        END;                                                            09110000
      END;                                             /* EOC RA01236 */09120000
    IF COUNTRY_AREA.PROC_ID = 'UI23'                   /* SOC RA01236 */09130000
    THEN                                                                09140000
      DO;                                                               09150000
        SWITCH_CIDUMMY_FLAG = '1'B;                        /* RB01289 */09160000
        EXEC SQL                                                        09170000
        SELECT MAX(CUSTOMER_NUMBER)                                     09180000
          INTO :RCB011S.CUSTOMER_NUMBER :WRK_INDNULL                    09190000
          FROM RCBV0011_PI_CUST                                         09200000
         WHERE COUNTRY_NUMBER = :RCBBIF0_CUST.COUNTRY_NUMBER            09210000
           AND CUSTOMER_NUMBER LIKE 'CI%';                              09220000
                                                                        09230000
        SELECT (SQLCA.SQLCODE);                                         09240000
          WHEN (0)                                                      09250000
            DO;                                                         09260000
              IF WRK_INDNULL = 0                                        09270000
              THEN                                                      09280000
                DO;                                                     09290000
                  WRK_CUST_NO = SUBSTR(RCB011S.CUSTOMER_NUMBER,3,6);    09300000
                  IF WRK_CUST_CNT = 999999                              09310000
                  THEN                                                  09320000
                    DO;                                    /* RB01289 */09330000
                      WRK_CUST_CNT = 0;                                 09340000
                      SWITCH_CIDUMMY_FLAG = FALSE;     /* SOC RB01289 */09350000
                      CALL RCBBIFM_GET_CC_MAXNUMBER;                    09360000
                    END;                               /* EOC RB01289 */09370000
                  ELSE                                                  09380000
                    WRK_CUST_CNT = WRK_CUST_CNT + 1;                    09390000
                END;                                                    09400000
              ELSE                                                      09410000
                WRK_CUST_CNT = 0;                                       09420000
            END;                                                        09430000
          WHEN (+100)                                                   09440000
            DO;                                                         09450000
              WRK_CUST_CNT = 0;                                         09460000
            END;                                                        09470000
          OTHERWISE                                                     09480000
            DO;                                                         09490000
              CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#005');             09500000
            END;                                                        09510000
        END;                                                            09520000
      END;                                             /* EOC RA01236 */09530000
 END;                                                                   09540000
                                                                        09550000
                                                       /* SOC RB01278 */09560000
 TB_RCBV500           = '';                                             09570000
 TB_RCBV500_I         = '';                                             09580000
 TB_RCB103.NUMBER     = 'RCB103';                                       09590000
 TB_RCB103.CTRYNO     = WRK_CTRYNO;                                     09600000
 TB_RCB103.PGR_TYPE   = WRK_PGR_RUN_TYPE;                               09610000
                                                                        09620000
0CALL RCBI50M ('R',                                 /* PASS PARAMETER */09630000
               PTR_RCBV500,                                             09640000
               PTR_RCBV500I,                                            09650000
               PTR_RETURN_AREA,                                         09660000
               PTR_INT_AREA);                                           09670000
 SELECT(RETURN_AREA.RETURN_CODE);                                       09680000
   WHEN(0)                                                              09690000
     DO;                                                                09700000
       RCB103  =  TB_RCB103;                                            09710000
       IF RCB103.SRV_ON_BEHF_OF_VENDOR = 'Y' THEN                       09720000
          SWITCH_VENDOR_SERVICE = TRUE;                                 09730000
       ELSE                                                             09740000
          SWITCH_VENDOR_SERVICE = FALSE;                                09750000
     END;                                                               09760000
   WHEN(4)                                                              09770000
     DO;                                                                09780000
       SWITCH_VENDOR_SERVICE = FALSE;                                   09790000
     END;                                                               09800000
   OTHERWISE                                                            09810000
     DO;                                                                09820000
       CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#006');                    09830000
     END;                                                               09840000
 END;                                                 /* EOC RB01278 */ 09850000
                                                     /* SOC RB01298 */  09850100
 /* MOVED THE CODE FOR RETRIVAL OF PARAMETER 63 TO INIT_PROGRAM PROC    09850300
 /* FROM THIS PROC AS RETRIVAL OF THE PARAMETER IS NOT COUNTRY SPECIFIC 09850400
 /*                                                  /* SOC RB01281 */  09851000
 /*TB_RCBV500              = '';                                        09852000
 /*TB_RCBV500_I            = '';                                        09853000
 /*TB_RCB063.NUMBER        = 'RCB063';                                  09854000
 /*CALL RCBI50M ('R',                                /* PASS PARAMETER*/09855000
 /*              PTR_RCBV500,                                           09856000
 /*              PTR_RCBV500I,                                          09857000
 /*              PTR_RETURN_AREA,                                       09858000
 /*              PTR_INT_AREA);                                         09859000
                                                                        09859100
 /*SELECT(RETURN_AREA.RETURN_CODE);                                     09859200
 /*  WHEN(0)                                                            09859300
 /*    DO;                                                              09859400
 /*      RCB063  =  TB_RCB063;                                          09859500
 /*    END;                                                             09859600
 /*WHEN(4)                                                              09859700
 /*  DO;                                                                09859800
 /*    PARM_INT_AREA.MESSAGE_TYPE             = 'IS';                   09859900
 /*    PARM_INT_AREA.MSG_AREA.MESSAGE_NUMBER  = 'I050';                 09860000
 /*    PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES   = ' ';                    09860100
 /*    PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_6  = 'PN';                   09860200
 /*    PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_6 =                         09860300
 /*                                  TB_RCBV500.PARAMETER_NUMBER;       09860400
 /*    PARM_INT_AREA.MSG_AREA.MSG_VAR_CODE_7  = 'PK';                   09860500
 /*    PARM_INT_AREA.MSG_AREA.MSG_VAR_VALUE_7 =                         09860600
 /*                                  TB_RCBV500.PARAMETER_KEY;          09860700
 /*    CALL RCB0M1M (PTR_INT_AREA);                                     09860800
 /*    CALL RCBBIFM_ERROR (ADDR (RETURN_AREA.RETURN_SQL),               09860900
 /*                       'DB2','#027');                                09861000
 /*  END;                                                               09861100
 /* OTHERWISE                                                           09861200
 /*  DO;                                                                09861300
 /*    CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#028');                    09861400
 /*  END;                                                               09861500
 /*END;                                                                 09861600
                                                     /* EOC RB01281 */  09861700
                                                                        09862000
                                       /* RETRIEVE PARAMETER RCB064 */  09870000
 /* GET TOW/TOM FROM RCB064 AT COUNTRY LEVEL THAT WILL BE APPLIED   */  09880000
 /* FOR FLEXIBLE WARRANTY AND HARDBUNDLE MACHINES OF THAT COUNTRY   */  09890000
 /* IF RCB064 IS NOT AVAILABLE CONSIDER THE GEO PARAMETER RCB063    */  09900000
 TB_RCBV500              = '';                                          09910000
 TB_RCBV500_I            = '';                                          09920000
 TB_RCB064.NUMBER        = 'RCB064';                                    09930000
 TB_RCB064.CTRYNO        = WRK_CTRYNO;                                  09940000
 CALL RCBI50M ('R',                                 /* PASS PARAMETER*/ 09950000
               PTR_RCBV500,                                             09960000
               PTR_RCBV500I,                                            09970000
               PTR_RETURN_AREA,                                         09980000
               PTR_INT_AREA);                                           09990000
                                                                        10000000
 SELECT(RETURN_AREA.RETURN_CODE);                                       10010000
   WHEN(0)                                                              10020000
     DO;                                                                10030000
       RCB064      = TB_RCB064;                                         10040000
       WRK_F_TOW   = RCB064.F_WARRANTY_MACHINE;                         10050000
       WRK_HB_TOM  = RCB064.HARDBUNDLE;                                 10060000
     END;                                                               10070000
   WHEN(4)                                                              10080000
     DO;                                                                10090000
       WRK_F_TOW  = RCB063.F_WARRANTY_MACHINE;                          10100000
       WRK_HB_TOM = RCB063.HARDBUNDLE;                                  10110000
     END;                                                               10120000
    OTHERWISE;                                                          10130000
   END;                                                                 10140000
                                                     /* EOC RB01298 */  10150000
 G_CNTS.CNT = '';                                                       10160000
                                                                        10170000
 END RCBBIFM_INIT_COUNTRY;                                              10180000
 /********************************************************************/ 10190000
 /*                                                   /* SOC RB01289 */ 10200000
 /* MODULE NAME : RCBBIFM_GET_ES_MAXNUMBER                           */ 10210000
 /*                                                                  */ 10220000
 /* DESCRIPTION : GET MAXIMUM CUSTOMER NUMBER WITH PREFIX 'ES'       */ 10230000
 /*                                                                  */ 10240000
 /********************************************************************/ 10250000
 RCBBIFM_GET_ES_MAXNUMBER: PROC;                                        10260000
                                                                        10270000
 EXEC SQL                                                               10280000
 SELECT MAX(CUSTOMER_NUMBER)                                            10290000
   INTO :RCB011S.CUSTOMER_NUMBER :WRK_INDNULL                           10300000
   FROM RCBV0011_PI_CUST                                                10310000
  WHERE COUNTRY_NUMBER = :RCBBIF0_CUST.COUNTRY_NUMBER                   10320000
    AND CUSTOMER_NUMBER LIKE 'ES%';                                     10330000
                                                                        10340000
    SELECT (SQLCA.SQLCODE);                                             10350000
      WHEN (0)                                                          10360000
        DO;                                                             10370000
           IF WRK_INDNULL = 0 THEN                                      10380000
              DO;                                                       10390000
                 WRK_CUST_NO = SUBSTR(RCB011S.CUSTOMER_NUMBER,3,6);     10400000
                 IF WRK_CUST_CNT = 999999 THEN                          10410000
                    DO;                                                 10420000
                       WRK_CUST_CNT = 0;                                10430000
                       SWITCH_EPDUMMY_FLAG = TRUE;                      10440000
                    END;                                                10450000
                 ELSE                                                   10460000
                    WRK_CUST_CNT = WRK_CUST_CNT + 1;                    10470000
              END;                                                      10480000
           ELSE                                                         10490000
              WRK_CUST_CNT = 0;                                         10500000
        END;                                                            10510000
      WHEN (+100)                                                       10520000
        DO;                                                             10530000
           WRK_CUST_CNT = 0;                                            10540000
        END;                                                            10550000
      OTHERWISE                                                         10560000
        DO;                                                             10570000
           CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#029');                10580000
        END;                                                            10590000
    END;                                                                10600000
                                                                        10610000
 END RCBBIFM_GET_ES_MAXNUMBER;                                          10620000
                                                                        10630000
 /********************************************************************/ 10640000
 /*                                                                  */ 10650000
 /* MODULE NAME : RCBBIFM_GET_CC_MAXNUMBER                           */ 10660000
 /*                                                                  */ 10670000
 /* DESCRIPTION : GET MAXIMUM CUSTOMER NUMBER WITH PREFIX 'CC'       */ 10680000
 /*                                                                  */ 10690000
 /********************************************************************/ 10700000
 RCBBIFM_GET_CC_MAXNUMBER: PROC;                                        10710000
                                                                        10720000
 EXEC SQL                                                               10730000
 SELECT MAX(CUSTOMER_NUMBER)                                            10740000
   INTO :RCB011S.CUSTOMER_NUMBER :WRK_INDNULL                           10750000
   FROM RCBV0011_PI_CUST                                                10760000
  WHERE COUNTRY_NUMBER = :RCBBIF0_CUST.COUNTRY_NUMBER                   10770000
    AND CUSTOMER_NUMBER LIKE 'CC%';                                     10780000
                                                                        10790000
    SELECT (SQLCA.SQLCODE);                                             10800000
      WHEN (0)                                                          10810000
        DO;                                                             10820000
           IF WRK_INDNULL = 0 THEN                                      10830000
              DO;                                                       10840000
                 WRK_CUST_NO = SUBSTR(RCB011S.CUSTOMER_NUMBER,3,6);     10850000
                 IF WRK_CUST_CNT = 999999 THEN                          10860000
                    DO;                                                 10870000
                       WRK_CUST_CNT = 0;                                10880000
                       SWITCH_CIDUMMY_FLAG = TRUE;                      10890000
                    END;                                                10900000
                 ELSE                                                   10910000
                    WRK_CUST_CNT = WRK_CUST_CNT + 1;                    10920000
              END;                                                      10930000
           ELSE                                                         10940000
              WRK_CUST_CNT = 0;                                         10950000
        END;                                                            10960000
      WHEN (+100)                                                       10970000
        DO;                                                             10980000
           WRK_CUST_CNT = 0;                                            10990000
        END;                                                            11000000
      OTHERWISE                                                         11010000
        DO;                                                             11020000
           CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#030');                11030000
        END;                                                            11040000
                                                                        11050000
 END RCBBIFM_GET_CC_MAXNUMBER;                        /* EOC RB01289 */ 11060000
1                                                     /* SOC RB01236 */ 11070000
 /********************************************************************/ 11080000
 /*                                                                  */ 11090000
 /* MODULE NAME : RCBBIFM_READ_RCBBIFN                               */ 11100000
 /*                                                                  */ 11110000
 /* DESCRIPTION : READ ALL MULTIPLE SERVICE PAC CONTRACT NUMBERS     */ 11120000
 /*               FROM FILE RCBBIFN INTO AN ARRAY                    */ 11130000
 /*                                                                  */ 11140000
 /********************************************************************/ 11150000
 RCBBIFM_READ_RCBBIFN: PROC;                                            11160000
                                                                        11170000
 DCL   I   FIXED BIN(31);                                               11180000
                                                                        11190000
 I = 0;                                                                 11200000
 MSP_CONTRACTS(*) = '';                                                 11210000
                                                                        11220000
 READ FILE(RCBBIFN) INTO (FILE_RCBBIFN);                                11230000
 DO WHILE(¬ EOF_RCBBIFN);                                               11240000
   IF SUBSTR(RCBBIFN_DATA.PART_NUMBER,1,1) ¬= ' ' &                     11250000
      SUBSTR(RCBBIFN_DATA.PART_NUMBER,1,1) ¬= '*'                       11260000
   THEN DO;                                                             11270000
     I = I + 1;                                                         11280000
     IF I > MAX_CONTRACTS                                               11290000
     THEN DO;                                                           11300000
       CALL RCBBIFM_MSG('0052');             /* EXCEEDING ARRAY SIZE */ 11310000
       CALL RCBBIFM_ERROR (NULL, 'OTHER', '#006');            /*ABORT*/ 11320000
     END;                                                               11330000
     MSP_CONTRACTS(I) = RCBBIFN_DATA.PART_NUMBER;                       11340000
   END;                                                                 11350000
   READ FILE(RCBBIFN) INTO (FILE_RCBBIFN);                              11360000
 END;                                                                   11370000
 CONTRACTS_COUNT = I;                                                   11380000
                                                                        11390000
 END RCBBIFM_READ_RCBBIFN;                                              11400000
                                                      /* EOC RB01236 */ 11410000
1/********************************************************************/ 11420000
 /*                                                                  */ 11430000
 /* MODULE NAME      : RCBBIFM_READ_RECORD                           */ 11440000
 /*                                                                  */ 11450000
 /* DESCRIPTION      : READ RECORD FROM SHRINK FILE                  */ 11460000
 /*                  : READ RECORD FROM DSW FILE             RB01327 */ 11470099
 /*                                                                  */ 11471000
 /********************************************************************/ 11480000
 RCBBIFM_READ_RECORD: PROC;                                             11490000
                                                                        11500000
 WRK_CTRY_FILE_PREV = RCBBIF0_CUST.COUNTRY_NUMBER;                      11510000
 READ FILE(RCBBIF0) INTO (FILE_RCBBIF0);                                11520000
 IF (¬ EOF_RCBBIF0)                                                     11530000
 THEN                                                                   11540000
   DO;                                                                  11550000
     PARM_INT_AREA.SEQUENCE_KEY = RCBBIF0_CUST.COUNTRY_NUMBER ||        11560000
                                  RCBBIF0_CUST.CUSTOMER_NUMBER;         11570000
     G_CURR_KEY                 = RCBBIF0_CUST.COUNTRY_NUMBER ||        11580000
                                  RCBBIF0_CUST.CUSTOMER_NUMBER;         11590000
     %IF ( RCBBIFM_DEBUG = 'Y' ) %THEN %DO;                             11600000
       PUT SKIP LIST( '#DBG# '||'KEYSPEC=' || RCBBIFM_GET_KEYSPEC() );  11610000
     %END;                                                              11620000
   END;                                                                 11630000
                                                                        11640000
 END RCBBIFM_READ_RECORD;                                               11650000
1/********************************************************************/ 11660000
 /*                                                                  */ 11670000
 /* MODULE NAME      : RCBBIFM_GET_KEYSPEC                           */ 11680000
 /*                                                                  */ 11690000
 /* DESCRIPTION      : GET KEY SPECIFIER                             */ 11700000
 /*                    RETURNS CHAR(15)                              */ 11710000
 /*                                                                  */ 11720000
 /********************************************************************/ 11730000
 RCBBIFM_GET_KEYSPEC: PROC RETURNS(CHAR(15));                           11740000
 RETURN( RCBBIF0_CUST.RECORD_CODE    ||    /*04*/                       11750000
         RCBBIF0_CUST.COUNTRY_NUMBER ||    /*03*/                       11760000
         RCBBIF0_CUST.CUSTOMER_NUMBER );   /*08*/                       11770000
 END RCBBIFM_GET_KEYSPEC;                                               11780000
1/********************************************************************/ 11790000
 /*                                                                  */ 11800000
 /* MODULE NAME      : RCBBIFM_PROCESS_HEADER                        */ 11810000
 /*                                                                  */ 11820000
 /* DESCRIPTION      : CHECK EXISTANCE AND VALUES OF HEADER_RECORD   */ 11830000
 /*                                                                  */ 11840000
 /********************************************************************/ 11850000
 RCBBIFM_PROCESS_HEADER: PROC;                                          11860000
                                                                        11870000
 IF RCBBIF0_HEADER.SORTKEY ¬= LOW(15)         /* FIRST REC : HEADER ? */11880000
 THEN                                                                   11890000
   DO;                                                                  11900000
     CALL RCBBIFM_MSG('0016');                                          11910000
     CALL RCBBIFM_ERROR (NULL, 'OTHER', '#007');             /*ABORT*/  11920000
   END;                                                                 11930000
                                                       /* SOC *RC01191*/11940000
                                       /******************************/ 11950000
                                       /* CHECK DISTRIBUTOR          */ 11960000
                                       /******************************/ 11970000
 IF RCBBIF0_HEADER.DISTRIBUTOR ¬= 'SHRINK WRAP' &                       11980000
  /*RCBBIF0_HEADER.DISTRIBUTOR ¬= 'SERVICE PAC'  */   /* SOC RB01327 */ 11990000
    RCBBIF0_HEADER.DISTRIBUTOR ¬= 'SERVICE PAC' &                       11990100
    RCBBIF0_HEADER.DISTRIBUTOR ¬= 'DSW'               /* EOC RB01327 */ 11991000
 THEN                                                                   12000000
   DO;                                                                  12010000
     CALL RCBBIFM_MSG('0014');                                          12020000
     CALL RCBBIFM_ERROR (NULL,'OTHER','#008');                          12030000
   END;                                                                 12040000
 ELSE                                                                   12050000
   DO;                                                                  12060000
     WRK_DIST = RCBBIF0_HEADER.DISTRIBUTOR;                             12070000
   END;                                                                 12080000
                                                                        12090000
 PTR_RCBV500        =  ADDR (TB_RCBV500);                               12100000
 PTR_RCBV500I       =  ADDR (TB_RCBV500_I);                             12110000
                                                                        12120000
 /* RETRIEVE PREVIOUS FILE SEQUENCE NUMBER FROM RCB035 */               12130000
                                                                        12140000
 TB_RCBV500                  = '';                                      12150000
 TB_RCBV500_I                = '';                                      12160000
 TB_RCB035.NUMBER            = 'RCB035';                                12170000
 TB_RCB035.PROC_ID           = COUNTRY_AREA.PROC_ID;                    12180000
 TB_RCB035.SEQ_NR            = '01';                                    12190000
 TB_RCB035.FILLER_G1         = COUNTRY_AREA.CTRYNO(1);                  12200000
                                                                        12210000
                                                                        12220000
0CALL RCBI50M ('R',                                       /* RC01219 */ 12230000
               PTR_RCBV500,                                             12240000
               PTR_RCBV500I,                                            12250000
               PTR_RETURN_AREA,                                         12260000
               PTR_INT_AREA);                                           12270000
                                                                        12280000
 IF RETURN_AREA.RETURN_CODE = 4                                         12290000
 THEN DO;                                                               12300000
   /* RETRIEVE THE OLD SEQUENCE NUMBER FOR COUNTRY BLANK */             12310000
   /* NOT FOUND HANDLED IN THE FOLLOWING WHEN */                        12320000
   TB_RCB035.FILLER_G1         = '';                                    12330000
   CALL RCBI50M ('U',                                     /* RC01219 */ 12340000
                 PTR_RCBV500,                                           12350000
                 PTR_RCBV500I,                                          12360000
                 PTR_RETURN_AREA,                                       12370000
                 PTR_INT_AREA);                                         12380000
   IF RETURN_AREA.RETURN_CODE = 0                                       12390000
   THEN DO;                                                             12400000
     /* INSERT THE SEQUENCE NUMBER FOR FIRST RUN COUNTRY */             12410000
     /* ERRORS HANDLED IN THE FOLLOWING WHEN */                         12420000
     TB_RCB035.FILLER_G1       = COUNTRY_AREA.CTRYNO(1);                12430000
     CALL RCBF50M (PTR_RCBV500,                                         12440000
                   PTR_RCBV500I,                                        12450000
                   PTR_RETURN_AREA,                                     12460000
                   PTR_INT_AREA);                                       12470000
   END;                                                                 12480000
 END;                                                                   12490000
                                                                        12500000
 SELECT (RETURN_AREA.RETURN_CODE);                                      12510000
   WHEN (0)                                                             12520000
     DO;                                                                12530000
     DCL ATEMP_PIC7 PIC'9999999';                                       12540000
     DCL BTEMP_PIC7 PIC'9999999';                                       12550000
       RCB035 = TB_RCB035 , BY NAME;                                    12560000
       ATEMP_PIC7 = TB_RCB035.FILE_SEQ_NUM_SC;                          12570000
       BTEMP_PIC7 = RCB035.FILE_SEQ_NUM_SC;                             12580000
       IF COUNTRY_AREA.PROC_ID = 'UI23' THEN           /* SOC RA01236 */12590000
         WRK_FILE_SEQ = RCBBIF0_CISCO_HEADER.SEQUENCE_NUMBER;           12600000
       ELSE                                                             12610000
         WRK_FILE_SEQ = RCBBIF0_HEADER.SEQUENCE_NUMBER;                 12620000
       IF RCB035.FILE_SEQ_NUM_SC + 1 ¬= WRK_FILE_SEQ                    12630000
       THEN                                                             12640000
         DO;                                                            12650000
           G_WRKMSG.TXTFIELD_1 = 'RCBBIF1';                             12660000
           CALL RCBBIFM_MSG('0180');    /* INCORRECT FILE SEQ.NO */     12670000
           CALL RCBBIFM_ERROR (NULL, 'OTHER', '#009');                  12680000
         END;                                                           12690000
     END;                                              /* EOC RA01236 */12700000
   WHEN (4)                                                             12710000
     DO;                                                                12720000
       CALL RCBBIFM_MSG('I050');       /* RECORD NOT FOUND      */      12730000
       CALL RCBBIFM_ERROR (ADDR (RETURN_AREA.RETURN_SQL),               12740000
                           'DB2','#010');                               12750000
     END;                                                               12760000
   OTHERWISE                                                            12770000
     DO;                                                                12780000
       CALL RCBBIFM_ERROR (ADDR (RETURN_AREA.RETURN_SQL),               12790000
                           'DB2','#011');                               12800000
     END;                                                               12810000
 END;  /* SELECT */                                                     12820000
                                                       /* EOC *RC01191*/12830000
                                                                        12840000
 G_CNTS.TOT.RCBBIF0_ACCEPT = G_CNTS.TOT.RCBBIF0_ACCEPT + 1;             12850000
                                                                        12860000
 END RCBBIFM_PROCESS_HEADER;                                            12870000
1/********************************************************************/ 12880000
 /*                                                                  */ 12890000
 /* MODULE NAME      : RCBBIFM_INIT_WRK_FIELDS                       */ 12900000
 /*                                                                  */ 12910000
 /* DESCRIPTION      : INIT WRK_FIELDS FOR A TOS                     */ 12920000
 /*                                                                  */ 12930000
 /********************************************************************/ 12940000
 RCBBIFM_INIT_WRK_FIELDS: PROC;                                         12950000
                               /* TRANSLATE INPUT FIELDS TO UPPERCASE */12960000
                                                       /* SOC PTM1411 */12970000
 RCBBIF0_MACH.MACHINE_TYPE   = TRANSLATE(RCBBIF0_MACH.MACHINE_TYPE,     12980000
                                         UPPERCASE,LOWERCASE);          12990000
 RCBBIF0_MACH.ORIGIN         = TRANSLATE(RCBBIF0_MACH.ORIGIN,           13000000
                                         UPPERCASE,LOWERCASE);          13010000
 RCBBIF0_MACH.SERIAL_NUMBER  = TRANSLATE(RCBBIF0_MACH.SERIAL_NUMBER,    13020000
                                         UPPERCASE,LOWERCASE);          13030000
 RCBBIF0_MACH.MACHINE_MODEL  = TRANSLATE(RCBBIF0_MACH.MACHINE_MODEL,    13040000
                                         UPPERCASE,LOWERCASE);          13050000
 RCBBIF0_MACH.OU_NUMBER      = TRANSLATE(RCBBIF0_MACH.OU_NUMBER,        13060000
                                         UPPERCASE,LOWERCASE);          13070000
 RCBBIF0_MACH.SERV_TYPE_CODE = TRANSLATE(RCBBIF0_MACH.SERV_TYPE_CODE,   13080000
                                         UPPERCASE,LOWERCASE);          13090000
 RCBBIF0_MACH.PARTS_NUMBER   = TRANSLATE(RCBBIF0_MACH.PARTS_NUMBER,     13100000
                                         UPPERCASE,LOWERCASE);          13110000
                                                       /* EOC PTM1411 */13120000
                                                                        13130000
 IF WRK_DIST = 'SERVICE PAC'                          /* SOC PTM1158 */ 13140000
 &  COUNTRY_AREA.PROC_ID ¬= 'UI13'                    /* SOC RA01236 */ 13150000
 &  COUNTRY_AREA.PROC_ID ¬= 'UI43'                        /* RC01375 */ 13151099
   THEN DO;                                                             13160000
     WRK_ORIGIN            = '00';                                      13170000
     WRK_SEQUENCE_NUMBER   =                                            13180000
       RCBBIF0_MACH.ORIGIN || RCBBIF0_MACH.SERIAL_NUMBER;               13190000
     END;                                                               13200000
   ELSE DO;                                                             13210000
     WRK_ORIGIN            = RCBBIF0_MACH.ORIGIN;                       13220000
     WRK_SEQUENCE_NUMBER   = '00' || RCBBIF0_MACH.SERIAL_NUMBER;        13230000
     END;                                             /* EOC PTM1158 */ 13240000
   WRK_PRODUCT_TYPE  =  RCBBIF0_MACH.MACHINE_TYPE; /* SOC RB01278 */    13250000
   WRK_MODEL         =  RCBBIF0_MACH.MACHINE_MODEL;   /* EOC RB01278 */ 13260000
                                                                        13270000
 END RCBBIFM_INIT_WRK_FIELDS;                                           13280000
1/********************************************************************/ 13290000
 /*                                                                  */ 13300000
 /* MODULE NAME      : RCBBIFM_PROCESS_CUSTOMER                      */ 13310000
 /*                                                                  */ 13320000
 /* DESCRIPTION      : CHECK AND PROCESS RECORDS FOR ONE CUSTOMER    */ 13330000
 /*                                                                  */ 13340000
 /********************************************************************/ 13350000
 RCBBIFM_PROCESS_CUSTOMER: PROC;                                        13360000
                                                                        13370000
 G_SAVE_CUST_REC = '';                                                  13380000
 G_SAVE_KEY    = G_CURR_KEY;                                            13390000
 WRONG_MACH_FOR_CUST = FALSE;                                           13400000
 RIGHT_MACH_FOR_CUST = FALSE;                                           13410000
 G_CNTS.CNT.RCBBIF0_READ = G_CNTS.CNT.RCBBIF0_READ + 1;                 13420000
                                             /* FIRST : CUST RECORD  */ 13430000
 CALL RCBBIFM_CHECK_CUSTREC;                                            13440000
 IF (RECORD_CORRECT)                         /* WHEN CUSTOMER OK :   */ 13450000
 THEN DO;                                    /* WRITE WHEN A CORRECT */ 13460000
                                             /* MACHINE RECORD IS MET*/ 13470000
   CALL RCBBIFM_FILL_CUSTOMER;                                          13480000
   G_SAVE_CUST_REC = FILE_RCBBIF0;                                      13490000
   CALL RCBBIFM_READ_RECORD;                                            13500000
                                             /* THEN : MACH. RECORDS */ 13510000
   DO WHILE ((¬ EOF_RCBBIF0) & (G_CURR_KEY = G_SAVE_KEY) &              13520000
             RCBBIF0_MACH.RECORD_CODE = 'SHMA');                        13530000
     G_CNTS.CNT.RCBBIF0_READ = G_CNTS.CNT.RCBBIF0_READ + 1;             13540000
     CALL RCBBIFM_CHECK_MACHREC;                                        13550000
     IF (RECORD_CORRECT)                     /* WHEN MACH-RECORD OK  */ 13560000
      THEN                                      /*SOC CEDS00000382   */ 13570000
            CALL RCBBIFM_CHECK_MACHREC_1;                               13580000
     IF (RECORD_CORRECT)                        /*EOC CEDS00000382   */ 13590000
     THEN DO;                                                           13600000
                                                      /* SOC PTM1014 */ 13610000
       CALL RCBBIFM_FILL_INVENTORY;          /* FILL INVENTORY REC.  */ 13620000
       CALL RCBBIFM_FILL_CONTRACT;           /* FILL CONTRACT REC.   */ 13630000
                                                      /* EOC PTM1014 */ 13640000
       IF (RECORD_CORRECT)                   /* RECORD OK  - PTM1411 */ 13650000
       THEN DO;                                                         13660000
         CALL RCBBIFM_HANDLE_USEREXIT;                                  13670000
         IF (¬ RIGHT_MACH_FOR_CUST)          /* WHEN FIRST CORRECT   */ 13680000
         THEN DO;                            /* MACHINE RECORD       */ 13690000
           CALL RCBBIFM_WRITE_CUSTOMER;      /* WRITE CUSTOMER REC.  */ 13700000
           RIGHT_MACH_FOR_CUST = TRUE;       /* AND COUNT AS ACCEPTED*/ 13710000
           G_CNTS.CNT.RCBBIF0_ACCEPT = G_CNTS.CNT.RCBBIF0_ACCEPT+1;     13720000
         END;                                                           13730000
                                                      /* SOC RB01236 */ 13740000
         IF T051_FND = '1'B &                /* NO T051 UPDATE -     */ 13750000
            MULT_SPAC = '1'B THEN;           /* FOR MULT.SERV.PAC    */ 13760000
         ELSE                                                           13770000
           CALL RCBBIFM_WRITE_INVENTORY;     /* WRITE INVENTROY REC. */ 13780000
                                                      /* EOC RB01236 */ 13790000
         CALL RCBBIFM_WRITE_CONTRACT;        /* WRITE CONTRACT REC.  */ 13800000
       END;                                                             13810000
     END;                                                               13820000
     IF (¬RECORD_CORRECT)                    /* REC. NOT OK - PTM1411*/ 13830000
     THEN DO;                                                           13840000
       IF (¬ WRONG_MACH_FOR_CUST)            /* WHEN FIRST WRONG     */ 13850000
       THEN DO;                              /* MACHINE RECORD       */ 13860000
         CALL RCBBIFM_REJECT_CUST;           /* CUST REC. TO REJECT  */ 13870000
         WRONG_MACH_FOR_CUST = TRUE;                                    13880000
       END;                                                             13890000
       CALL RCBBIFM_REJECT_RECORD;           /* WRITE TO REJECT FILE */ 13900000
     END;                                                               13910000
     CALL RCBBIFM_READ_RECORD;               /* READ NEXT RECORD     */ 13920000
   END;                                                                 13930000
   IF (¬ RIGHT_MACH_FOR_CUST)                /* CUSTOMER REC. NOT    */ 13940000
   THEN DO;                                  /* WRITTEN BECAUSE NO   */ 13950000
                                             /* CORRECT MACHINE REC. */ 13960000
     CALL RCBBIFM_MSG('0037');                                          13970000
     IF (¬ WRONG_MACH_FOR_CUST)              /* NO MACHINE RECORDS   */ 13980000
     THEN                                    /* AT ALL FOR CUSTOMER  */ 13990000
       CALL RCBBIFM_REJECT_CUST;             /* CUST REC. TO REJECT  */ 14000000
   END;                                                                 14010000
   ELSE DO;                                  /* MACHINE REC WRITTEN  */ 14020000
                                             /* AND                  */ 14030000
     IF (WRONG_MACH_FOR_CUST)                /* MACHINE REC REJECTED */ 14040000
     THEN                                    /* FOR SAME CUSTOMER    */ 14050000
       G_CNTS.CNT.DOUBLE_CUST = G_CNTS.CNT.DOUBLE_CUST + 1;             14060000
   END;                                                                 14070000
 END;                                                                   14080000
 ELSE DO;                                    /* CUSTOMER REC. NOT OK */ 14090000
   CALL RCBBIFM_REJECT_RECORD;               /* WRITE TO REJECT FILE */ 14100000
   CALL RCBBIFM_READ_RECORD;                 /* READ NEXT RECORD     */ 14110000
                                             /* REJECT ALL MACH RECS */ 14120000
   DO WHILE ((¬ EOF_RCBBIF0) & (G_CURR_KEY = G_SAVE_KEY) &              14130000
             RCBBIF0_MACH.RECORD_CODE = 'SHMA');                        14140000
     G_CNTS.CNT.RCBBIF0_READ = G_CNTS.CNT.RCBBIF0_READ + 1;             14150000
     CALL RCBBIFM_REJECT_RECORD;             /* WRITE TO REJECT FILE */ 14160000
     CALL RCBBIFM_READ_RECORD;               /* READ NEXT RECORD     */ 14170000
   END;                                                                 14180000
 END;                                                                   14190000
                                                                        14200000
 END RCBBIFM_PROCESS_CUSTOMER;                                          14210000
1/********************************************************************/ 14220000
 /*                                                                  */ 14230000
 /* MODULE NAME      : RCBBIFM_CHECK_CUSTREC                         */ 14240000
 /*                                                                  */ 14250000
 /* DESCRIPTION      : VALIDATE SHRINK WRAP CUSTOMER RECORD          */ 14260000
 /*                                                                  */ 14270000
 /********************************************************************/ 14280000
 RCBBIFM_CHECK_CUSTREC: PROC;                                           14290000
                                                                        14300000
 RECORD_CORRECT = TRUE;                                                 14310000
                                         /* RECORDCODE : SHCU        */ 14320000
 IF (RCBBIF0_CUST.RECORD_CODE ¬= 'SHCU')                                14330000
 THEN                                                                   14340000
   DO;                                                                  14350000
     IF (RCBBIF0_CUST.RECORD_CODE ¬= 'SHMA')                            14360000
     THEN                                                               14370000
       DO;                                                              14380000
         CALL RCBBIFM_MSG('0039');                                      14390000
         RECORD_CORRECT = FALSE;                                        14400000
       END;                                                             14410000
     ELSE                                                               14420000
       DO;                                                              14430000
         CALL RCBBIFM_MSG('0036');                                      14440000
         RECORD_CORRECT = FALSE;                                        14450000
       END;                                                             14460000
   END;                                                                 14470000
                                         /* NO WRONG RECORDTYPE      */ 14480000
 IF (RECORD_CORRECT)                                                    14490000
 THEN                                                                   14500000
   DO;                                                                  14510000
                                         /* VALIDATE CUSTOMER_NUMBER */ 14520000
     IF COUNTRY_AREA.PROC_ID ¬= 'UI13'       &        /* SOC RA01236 */ 14530000
        COUNTRY_AREA.PROC_ID ¬= 'UI43'       &            /* RC01375 */ 14531099
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '738' &        /* SOC PTM1179 */ 14540000
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '736' &        /*     PTM1201 */ 14550000
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '760' &       /* CEDS00000394 */ 14560000
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '672' &        /*     PTM1201 */ 14570000
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '858' THEN DO; /*     PTM1201 */ 14580000
     IF ((VERIFY(SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,3,6),              14590000
          '1234567890') ¬= 0)                                           14600000
      | ((SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,1,2) ¬= 'SH')             14610000
                                                     /* SOC RC01227 */  14620000
      &  (SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,1,2) ¬= 'SF')             14630000
                                                     /* EOC RC01227 */  14640000
                                                     /* SOC RCXXXXX */  14650000
      &  (SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,1,2) ¬= 'CI')             14660000
      &  (SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,1,2) ¬= 'EP')))           14670000
                                                     /* EOC RCXXXXX */  14680000
     THEN                                                               14690000
       DO;                                                              14700000
         CALL RCBBIFM_MSG('0198');                                      14710000
         RECORD_CORRECT = FALSE;                                        14720000
       END;                                                             14730000
     END;                                             /* EOC PTM1179 */ 14740000
                                                                        14750000
     /* GIVE A WARNING WHEN FIELD IS BLANC */                           14760000
     CALL RCBBIFM_WARN4BLANC( RCBBIF0_CUST.NAME       , 'NAME' );       14770000
     CALL RCBBIFM_WARN4BLANC( RCBBIF0_CUST.ADDRESS    , 'ADDRESS' );    14780000
     CALL RCBBIFM_WARN4BLANC( RCBBIF0_CUST.POSTAL_CODE, 'POSTAL_CODE'); 14790000
     CALL RCBBIFM_WARN4BLANC( RCBBIF0_CUST.TOWN       , 'TOWN' );       14800000
     CALL RCBBIFM_WARN4BLANC( RCBBIF0_CUST.TELEPHONE_NUMBER,            14810000
                                                  'TELEPHONE_NUMBER' ); 14820000
                                                                        14830000
   END;                                                                 14840000
                                         /* IF NOT ALL CHECKS ARE OK */ 14850000
 IF (¬ RECORD_CORRECT)                                                  14860000
 THEN                                                                   14870000
   DO;                                                                  14880000
     CALL RCBBIFM_MSG('0033');            /* RECORD REJECTED          */14890000
   END;                                                                 14900000
                                                                        14910000
 END RCBBIFM_CHECK_CUSTREC;                                             14920000
1/********************************************************************/ 14930000
 /*                                                                  */ 14940000
 /* MODULE NAME      : RCBBIFM_WARN4BLANC                            */ 14950000
 /*                                                                  */ 14960000
 /* DESCRIPTION      : GEN WARNINGS WHEN FIELD IS EMPTY              */ 14970000
 /*                                                                  */ 14980000
 /********************************************************************/ 14990000
 RCBBIFM_WARN4BLANC:PROC(A_ITEM,A_INFONAME);                            15000000
 DCL A_ITEM     CHAR(*);                                                15010000
 DCL A_INFONAME CHAR(*);                                                15020000
 IF ( A_ITEM = '' ) THEN                                                15030000
   DO;                                                                  15040000
     G_WRKMSG.TXTFIELD_1 = A_INFONAME;                                  15050000
     CALL RCBBIFM_MSG('0035');   /*IMPORTANT CUSTOMER DATA IS MISSING */15060000
   END;                                                                 15070000
 END RCBBIFM_WARN4BLANC;                                                15080000
1/********************************************************************/ 15090000
 /*                                                                  */ 15100000
 /* MODULE NAME      : RCBBIFM_CHECK_MACHREC                         */ 15110000
 /*                                                                  */ 15120000
 /* DESCRIPTION      : VALIDATE SHRINK WRAP MACHINE  RECORD          */ 15130000
 /*                  : VALIDATE DSW MACHINE RECORD           RB01327 */ 15140099
 /*                                                                  */ 15141000
 /********************************************************************/ 15150000
 RCBBIFM_CHECK_MACHREC: PROC;                                           15160000
                                                                        15170000
 DCL L_XST                    BIT(1) INIT(FALSE);     /* REC. EXISTS */ 15180000
 DCL L_OK                     BIT(1);                 /* STATUS FLAG */ 15190000
 DCL L_S0                     BIT(1);                 /* STATUS FLAG */ 15200000
 DCL L_S1                     BIT(1);                 /* STATUS FLAG */ 15210000
 /*DCL L_OK_WARRANTY_DATE     BIT(1);   *//*RB01272 *//* STATUS FLAG */ 15220000
 DCL L_OK_PURCHASE_DATE       BIT(1);                 /* STATUS FLAG */ 15230000
 DCL L_OK_SERV_ST_DATE        BIT(1);                 /* STATUS FLAG */ 15240000
 DCL L_OK_SERV_END_DATE       BIT(1);                 /* STATUS FLAG */ 15250000
                                                                        15260000
 RECORD_CORRECT = TRUE;                                                 15270000
                                         /* RECORDCODE : SHMA        */ 15280000
 /* IF (RCBBIF0_CUST.RECORD_CODE ¬= 'SHMA') */        /* SOC RB01327 */ 15281000
 IF (RCBBIF0_CUST.RECORD_CODE ¬= 'SHMA' &                               15290100
     RCBBIF0_CUST.RECORD_CODE ¬= 'SGMA')       /* RECORDCODE FOR DSW */ 15291000
                                                      /* EOC RB01327 */ 15292000
 THEN DO;                                                               15300000
   CALL RCBBIFM_MSG('0039');                                            15310000
   RECORD_CORRECT = FALSE;                                              15320000
 END;                                                                   15330000
                                         /* NO WRONG RECORDTYPE      */ 15340000
 ELSE DO;                                                               15350000
                                                      /* SOC *RC01191*/ 15360000
   IF WRK_DIST              = 'SERVICE PAC         '                    15370000
    & COUNTRY_AREA.PROC_ID ¬= 'UI13'                      /* RA01236 */ 15380000
    & COUNTRY_AREA.PROC_ID ¬= 'UI43'                      /* RC01375 */ 15381099
   THEN                                                                 15390000
     RCBBIF0_CUST.CUSTOMER_NUMBER = 'DS000000';                         15400000
   ELSE DO;                                           /* EOC *RC01191*/ 15410000
                                         /* VALIDATE CUSTOMER_NUMBER */ 15420000
                                                      /* SOC PTM1179 */ 15430000
     IF COUNTRY_AREA.PROC_ID        ¬= 'UI13' &       /* SOC RA01236 */ 15440000
        COUNTRY_AREA.PROC_ID        ¬= 'UI43' &           /* RC01375 */ 15450099
        COUNTRY_AREA.PROC_ID        ¬= 'UI33' &           /* RB01327 */ 15450199
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '738'  &                         15451000
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '736'  &           /* PTM1201 */ 15460000
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '760'  &      /* CEDS00000394 */ 15470000
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '672'  &           /* PTM1201 */ 15480000
        RCBBIF0_CUST.COUNTRY_NUMBER ¬= '858'              /* PTM1201 */ 15490000
     THEN DO;                                                           15500000
       IF ((VERIFY(SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,3,6),            15510000
            '1234567890') ¬= 0)                                         15520000
        | ((SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,1,2) ¬= 'SH')           15530000
                                                      /* SOC RC01227 */ 15540000
        &  (SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,1,2) ¬= 'SF')           15550000
                                                      /* EOC RC01227 */ 15560000
                                                      /* SOC RCXXXXX */ 15570000
        &  (SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,1,2) ¬= 'CI')           15580000
        &  (SUBSTR(RCBBIF0_CUST.CUSTOMER_NUMBER,1,2) ¬= 'EP')))         15590000
                                                      /* EOC RCXXXXX */ 15600000
       THEN DO;                                                         15610000
         CALL RCBBIFM_MSG('0198');                                      15620000
         RECORD_CORRECT = FALSE;                                        15630000
       END;                                                             15640000
     END;                                                   /*RC01191*/ 15650000
   END;                                               /* EOC PTM1179 */ 15660000
                                         /* VALIDATE TOS :           */ 15670000
                                         /* NO INCORPORATED BLANKS   */ 15680000
   IF ((INDEX(RCBBIF0_MACH.ORIGIN,' ')        ¬= 0)  |                  15690000
       (INDEX(RCBBIF0_MACH.SERIAL_NUMBER,' ') ¬= 0)  |                  15700000
       (INDEX(RCBBIF0_MACH.MACHINE_TYPE,' ')  ¬= 0))                    15710000
   THEN DO;                                                             15720000
     CALL RCBBIFM_MSG('0199');                                          15730000
     RECORD_CORRECT = FALSE;                                            15740000
   END;                                                                 15750000
   CALL RCBBIFM_INIT_WRK_FIELDS;                         /* PTM1158  */ 15760000
                                         /* CHECK PURCHASE DATE      */ 15770000
   L_OK_PURCHASE_DATE =                                                 15780000
                 RCBBIFM_XVALID_DATE(RCBBIF0_MACH.PURCHASE_DATE,        15790000
                                     L_XST,'PURCHASE DATE');            15800000
   IF (L_OK_PURCHASE_DATE) THEN                                         15810000
     DO;                                                                15820000
     IF RCBBIF0_MACH.PURCHASE_DATE  ¬= '00010101' THEN     /* RB01272*/ 15830000
        G_WRK_INSTALL_DATE = SUBSTR(DATE_AREA.WD_OUT_DATE,1,10);        15840000
     ELSE                                              /*SOC  RB01272*/ 15850000
        DO;                                                             15860000
          CALL RCBBIFM_SELECT_TOS; /* CHECK EXISTANCE OF TOS * / /* SOC 15870000
                                                         CEDS00000323*/ 15880000
          IF T051_FND = '1'B THEN                                       15890000
             G_WRK_INSTALL_DATE  = RCB051S.INSTALL_DATE ;               15900000
          ELSE                                                          15910000
             G_WRK_INSTALL_DATE = ' ';                                  15920000
        END;                                                            15930000
     END;                                         /* EOC CEDS00000323 */15940000
                                                                        15950000
                                         /* CHECK WARRANTY END DATE  */ 15960000
 /*L_OK_WARRANTY_DATE =                                                 15970000
 /*        RCBBIFM_XVALID_DATE(RCBBIF0_MACH.WARR_END_DATE,              15980000
 /*                            L_XST,'WARRANTY END DATE');              15990000
 /*IF (L_OK_WARRANTY_DATE) THEN                                         16000000
 /*  G_WRK_WARR_EXP_DATE = SUBSTR(DATE_AREA.WD_OUT_DATE,1,10);          16010000
 /*                                                                     16020000
 /*L_OK = L_OK_PURCHASE_DATE & L_OK_WARRANTY_DATE;                      16030000
 /*                                                                     16040000
 /*IF (L_OK)                                                            16050000
 /*THEN DO;             /* END DATE >= INSTALL DATE */                  16060000
 /*  IF (RCBBIF0_MACH.WARR_END_DATE < RCBBIF0_MACH.PURCHASE_DATE)       16070000
 /*  THEN DO;                                                           16080000
 /*    CALL RCBBIFM_MSG('0027');                                        16090000
 /*    RECORD_CORRECT = FALSE;                                          16100000
 /*  END;                                                               16110000
 /*END;                                                                 16120000
 /*ELSE DO;                                                             16130000
 /*  %IF ( RCBBIFM_DEBUG = 'Y' ) %THEN %DO;                             16140000
 /*    PUT SKIP LIST( '#DEB# '||'#012'||'RECORD_CORRECT:=FALSE');       16150000
 /*  %END;                                                              16160000
 /*  RECORD_CORRECT = FALSE;                              EOC RB01272*/ 16170000
 /*END;                                                                 16180000
                                         /* CHECK SERVICE START DATE */ 16190000
   L_OK_SERV_ST_DATE =                                                  16200000
                RCBBIFM_XVALID_DATE(RCBBIF0_MACH.SERV_START_DATE,       16210000
                                    L_XST,'SERV START DATE');           16220000
   IF (L_OK_SERV_ST_DATE) THEN                                          16230000
     G_WRK_SERV_START_DATE = SUBSTR(DATE_AREA.WD_OUT_DATE,1,10);        16240000
                                                                        16250000
                                         /* CHECK SERVICE END DATE   */ 16260000
   L_OK_SERV_END_DATE =                                                 16270000
                 RCBBIFM_XVALID_DATE(RCBBIF0_MACH.SERV_END_DATE,        16280000
                                     L_XST,'SERV END DATE');            16290000
   IF (L_OK_SERV_END_DATE) THEN                                         16300000
     G_WRK_SERV_END_DATE = SUBSTR(DATE_AREA.WD_OUT_DATE,1,10);          16310000
                                                                        16320000
   L_OK = L_OK_SERV_ST_DATE & L_OK_SERV_END_DATE;                       16330000
                                                                        16340000
   IF (L_OK)                                                            16350000
   THEN DO;                              /* END DATE >= START DATE   */ 16360000
     IF (RCBBIF0_MACH.SERV_END_DATE < RCBBIF0_MACH.SERV_START_DATE)     16370000
     THEN DO;                                                           16380000
       CALL RCBBIFM_MSG('0038');                                        16390000
       RECORD_CORRECT = FALSE;                                          16400000
     END;                                                               16410000
     ELSE                                                               16420000
       G_WRK_SERV_END_DATE = SUBSTR(DATE_AREA.WD_OUT_DATE,1,10);        16430000
   END;                                                                 16440000
   ELSE DO;                                                             16450000
     %IF ( RCBBIFM_DEBUG = 'Y' ) %THEN %DO;                             16460000
       PUT SKIP LIST( '#DEB# '||'#013'||'RECORD_CORRECT:=FALSE');       16470000
     %END;                                                              16480000
     RECORD_CORRECT = FALSE;                                            16490000
   END;                                                                 16500000
                                                                        16510000
   L_OK = TRUE;                                                         16520000
   /* MONDAY */                                                         16530000
   L_S0=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.MONDAY_COVER_ST,               16540000
                                        'MONDAY COVER START');          16550000
   L_S1=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.MONDAY_COVER_END,              16560000
                                        'MONDAY COVER END');            16570000
   L_OK = L_OK & L_S0 & L_S1;                                           16580000
                                                                        16590000
   /* TUESDAY */                                                        16600000
   L_S0=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.TUESDAY_COVER_ST,              16610000
                                        'TUESDAY COVER START');         16620000
   L_S1=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.TUESDAY_COVER_END,             16630000
                                        'TUESDAY COVER END');           16640000
   L_OK = L_OK & L_S0 & L_S1;                                           16650000
                                                                        16660000
   /* WEDNESDAY */                                                      16670000
   L_S0=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.WEDNESDAY_COVER_ST,            16680000
                                        'WEDNESDAY COVER START');       16690000
   L_S1=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.WEDNESDAY_COVER_END,           16700000
                                        'WEDNESDAY COVER END');         16710000
   L_OK = L_OK & L_S0 & L_S1;                                           16720000
                                                                        16730000
   /* THURSDAY */                                                       16740000
   L_S0=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.THURSDAY_COVER_ST,             16750000
                                        'THURSDAY COVER START');        16760000
   L_S1=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.THURSDAY_COVER_END,            16770000
                                        'THURSDAY COVER END');          16780000
   L_OK = L_OK & L_S0 & L_S1;                                           16790000
                                                                        16800000
   /* FRIDAY */                                                         16810000
   L_S0=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.FRIDAY_COVER_ST,               16820000
                                        'FRIDAY COVER START');          16830000
   L_S1=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.FRIDAY_COVER_END,              16840000
                                        'FRIDAY COVER END');            16850000
   L_OK = L_OK & L_S0 & L_S1;                                           16860000
                                                                        16870000
   /* SATURDAY */                                                       16880000
   L_S0=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.SATURDAY_COVER_ST,             16890000
                                        'SATURDAY COVER START');        16900000
   L_S1=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.SATURDAY_COVER_END,            16910000
                                        'SATURDAY COVER END');          16920000
   L_OK = L_OK & L_S0 & L_S1;                                           16930000
                                                                        16940000
   /* SUNDAY */                                                         16950000
   L_S0=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.SUNDAY_COVER_ST,               16960000
                                        'SUNDAY COVER START');          16970000
   L_S1=RCBBIFM_XVALID_TIME(RCBBIF0_MACH.SUNDAY_COVER_END,              16980000
                                        'SUNDAY COVER END');            16990000
   L_OK = L_OK & L_S0 & L_S1;                                           17000000
                                                                        17010000
                     /* VALIDATE WETHER ALL TIME FIELDS ARE ACCEPTED */ 17020000
   IF ( ¬ L_OK ) THEN                                                   17030000
   DO;                                                                  17040000
     %IF ( RCBBIFM_DEBUG = 'Y' ) %THEN %DO;                             17050000
       PUT SKIP LIST( '#DEB# '||'#014'||'RECORD_CORRECT:=FALSE');       17060000
     %END;                                                              17070000
     RECORD_CORRECT = FALSE;                                            17080000
   END;                                                                 17090000
                                         /* TOM/TOW BE FILLED BOTH   */ 17100000
   IF ((PARM.TYPE_OF_WARRANTY = ' ') &                                  17110000
       (PARM.TYPE_OF_MAINT = ' '))                                      17120000
   THEN DO;                                                             17130000
     CALL RCBBIFM_MSG('0031');                                          17140000
     RECORD_CORRECT = FALSE;                                            17150000
   END;                                                                 17160000
                  /* SOC  RB01272 */   /* MACH NOT OUT OF WARRANTY:*/   17170000
                                       /* TOW MUST BE FILLED       */   17180000
 /*IF ((WRK_RUN_DATE < G_WRK_WARR_EXP_DATE) &                           17190000
 /*    (PARM.TYPE_OF_WARRANTY = ' '))                                   17200000
 /*THEN DO;                                                             17210000
 /*  CALL RCBBIFM_MSG('0028');                                          17220000
 /*  RECORD_CORRECT = FALSE;                                            17230000
 /*END;           /* EOC  RB01272 */                                    17240000
   END;                                              /* CEDS00000382 */ 17250000
 END RCBBIFM_CHECK_MACHREC;                                             17260000
1/********************************************************************/ 17270000
 /*                                              /* SOC CEDS00000382 */ 17280000
 /* MODULE NAME      : RCBBIFM_CHECK_MACHREC_1                       */ 17290000
 /*                                                                  */ 17300000
 /* DESCRIPTION      : VALIDATE SHRINK WRAP MACHINE  RECORD_1        */ 17310000
 /*                  : VALIDATE DSW MACHINE RECORD_1         RB01327 */ 17320099
 /*                                                                  */ 17321000
 /********************************************************************/ 17330000
 RCBBIFM_CHECK_MACHREC_1: PROC;                                         17340000
                                                     /* SOC RB01236  */ 17350000
   CALL RCBBIFM_CHECK_MULT_SERVPAC;                                     17360000
                                                     /* SOC PTM1415  */ 17370000
 /*IF MULT_SPAC = '1'B & CONTR_OVERLAP = '1'B*/                         17380000
   IF CONTR_OVERLAP = '1'B                                              17390000
                                                     /* EOC PTM1415  */ 17400000
   THEN DO;                                                             17410000
     CALL RCBBIFM_MSG('0233');                /* RECORD OVERLAPS     */ 17420000
     RECORD_CORRECT = FALSE;                  /* REJECT IT           */ 17430000
   END;                                                                 17440000
                                                     /* SOC PTM1415  */ 17450000
 /*IF MULT_SPAC = '0'B & CONTR_EXIST = '1'B*/                           17460000
 /*THEN DO;                                */                           17470000
 /*  CALL RCBBIFM_MSG('0234');             */ /* CONTRACT EXISTS     */ 17480000
 /*  RECORD_CORRECT = FALSE;               */ /* REJECT IT           */ 17490000
 /*END;                                    */                           17500000
                                                     /* EOC PTM1415  */ 17510000
                                                     /* EOC RB01236  */ 17520000
 IF (RECORD_CORRECT)                     /* NO ERROR FOUND           */ 17530000
 THEN DO;                                                               17540000
   G_CNTS.CNT.RCBBIF0_ACCEPT = G_CNTS.CNT.RCBBIF0_ACCEPT + 1;           17550000
   CALL RCBBIFM_SELECT_TOS;              /* CHECK EXISTANCE OF TOS   */ 17560000
 END;                                                                   17570000
 ELSE DO;                                                               17580000
   CALL RCBBIFM_MSG('0033');             /* RECORD REJECTED          */ 17590000
       END;                                                             17600000
 END RCBBIFM_CHECK_MACHREC_1;                   /*  EOC CEDS00000382 */ 17610000
1/********************************************************************/ 17620000
 /*                                                                  */ 17630000
 /* MODULE NAME      : XVALID_DATE                                   */ 17640000
 /* DESCRIPTION      : CHECKDATE FORMAT: 'EEYYMMDD'                  */ 17650000
 /*                    VALIDATE EXTENDED WITH MESSAGE REPORT         */ 17660000
 /*                                                                  */ 17670000
 /* ARGUMENT         : CHAR(08) DATE                                 */ 17680000
 /*                    BOOLEAN  ACCEPT_SPACE                         */ 17690000
 /*                    CHAR(25) LOGICAL NAME                         */ 17700000
 /* RETURNS          : BOOLEAN: TRUE/FALSE                           */ 17710000
 /*                                                                  */ 17720000
 /********************************************************************/ 17730000
0RCBBIFM_XVALID_DATE: PROC(A_DATE, A_ACCEPT_SPACE, A_NAME)              17740000
                     RETURNS(BIT(1));                                   17750000
                                                                        17760000
 DCL A_DATE         CHAR(08);                                           17770000
 DCL A_ACCEPT_SPACE BIT(1);                                             17780000
 DCL A_NAME         CHAR(25);                                           17790000
 DCL L_RET          BIT(1) INIT(TRUE);                                  17800000
                                                                        17810000
 SELECT;                                                                17820000
   WHEN ( ( A_ACCEPT_SPACE ) &                                          17830000
          ( A_DATE = ''    ) )                                          17840000
     DO;                                                                17850000
       /* DO NOTHING */                                                 17860000
     END;                                                               17870000
   OTHERWISE                                                            17880000
     DO;                                                                17890000
       DATE_AREA               = '';                                    17900000
       DATE_AREA.WD_IN_FORMAT  = 'YYYYMMDD';                            17910000
       DATE_AREA.WD_OUT_FORMAT = 'ISO';                                 17920000
       DATE_AREA.WD_FUNCTION   = 'C';   /*CALCULATE VOOR VALID FUNC.? */17930000
       DATE_AREA.WD_IN_DATE    = A_DATE;                                17940000
       CALL RCB004M (PTR_DATE_AREA);                                    17950000
                                        /* TEST RESULT FROM RCB004M */  17960000
       IF ( DATE_AREA.WD_STATUS ¬= ' ' ) THEN                           17970000
         DO;                                                            17980000
           L_RET = FALSE;                                               17990000
           G_WRKMSG.TXTFIELD_1 = A_DATE;                                18000000
           G_WRKMSG.TXTFIELD_2 = A_NAME;                                18010000
           CALL RCBBIFM_MSG('0012');                /*DATE INCORRECT*/  18020000
         END;                                                           18030000
     END;                                                               18040000
 END;                                                                   18050000
                                                                        18060000
 RETURN(L_RET);                                                         18070000
 END RCBBIFM_XVALID_DATE;                                               18080000
1                                                  /* SOC RB01236    */ 18090000
 /********************************************************************/ 18100000
 /*                                                                  */ 18110000
 /* MODULE NAME : RCBBIFM_CHECK_MULT_SERVPAC                         */ 18120000
 /*                                                                  */ 18130000
 /* DESCRIPTION : PERFORM MULTIPLE SERVICE PAC CHECK(S), SUCH AS:    */ 18140000
 /*               - OVERLAPPING CONTRACT PERIODS                     */ 18150000
 /*                                                                  */ 18160000
 /********************************************************************/ 18170000
 RCBBIFM_CHECK_MULT_SERVPAC: PROC;                                      18180000
                                                                        18190000
 DCL I          FIXED BIN(31);                                          18200000
                                                                        18210000
 MULT_SPAC     = '0'B;                                                  18220000
 CONTR_OVERLAP = '0'B;                                                  18230000
 CONTR_EXIST   = '0'B;                                                  18240000
                                                                        18250000
 /*--- IS THIS A MULTIPLE SERVIVE PAC CONTRACT/PART NUMBER ? --------*/ 18260000
                                                                        18270000
 DO I = 1 TO CONTRACTS_COUNT WHILE (MULT_SPAC = '0'B);                  18280000
   IF RCBBIF0_MACH.PARTS_NUMBER = MSP_CONTRACTS(I) THEN                 18290000
     MULT_SPAC = '1'B;                                                  18300000
 END;                                                                   18310000
                                                                        18320000
                                                     /* SOC PTM1415  */ 18330000
 /*IF MULT_SPAC = '0'B*/                                                18340000
 /*THEN DO;           */             /* NOT A MULTIPLE SERVICE PACK  */ 18350000
                                                                        18360000
   /*--- IS THERE ALREADY A T0241 ENTRY FOR THIS TOS ?   ---*/          18370000
   /*--- UPDATES ARE ONLY ACCEPTED IF THEY DO NOT        ---*/          18380000
   /*--- CHANGE THE START- AND/OR END-DATE OF THE        ---*/          18390000
   /*--- SERVICE PERIOD. THIS TO PREVENT CREATION OF     ---*/          18400000
   /*--- SERVICE PERIOD OVERLAPS WITH POSSIBLE EXISTING  ---*/          18410000
   /*--- MULTIPLE SERVICE PACS.                          ---*/          18420000
   /*--- CHANGING THE SERVICE PERIOD CAN ONLY BE DONE    ---*/          18430000
   /*--- VIA THE ONLINE PROCESS, THAT IS PERFORMING THE  ---*/          18440000
   /*--- PROPER PERIOD OVERLAP CHECKING.                 ---*/          18450000
                                                                        18460000
 /*EXEC SQL                                                   */        18470000
 /*     SELECT COUNT(*)                                       */        18480000
 /*     INTO :WRK_COUNT                                       */        18490000
 /*     FROM RCBV0241_PI_CTR                                  */        18500000
 /*     WHERE COUNTRY_NUMBER   = :RCBBIF0_MACH.COUNTRY_NUMBER */        18510000
 /*       AND PRODUCT_TYPE     = :RCBBIF0_MACH.MACHINE_TYPE   */        18520000
 /*       AND ORIGIN           = :WRK_ORIGIN                  */        18530000
 /*       AND SEQUENCE_NUMBER  = :WRK_SEQUENCE_NUMBER         */        18540000
 /*       AND (EFFECTIVE_DATE ¬= :G_WRK_SERV_START_DATE       */        18550000
 /*        OR  END_DATE       ¬= :G_WRK_SERV_END_DATE);       */        18560000
 /*                                                           */        18570000
 /*IF SQLCA.SQLCODE ¬= 0 THEN                                 */        18580000
 /*  CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#015');            */        18590000
 /*                                                           */        18600000
 /*IF WRK_COUNT > 0 THEN */             /* UPDATE TO SERVICE PERIOD  */ 18610000
 /*  CONTR_EXIST = '1'B; */             /* UPDATE VIA ON-LINE ONLY!  */ 18620000
 /*END;    */                                                           18630000
 /*ELSE DO;*/                        /* IT'S A MULTIPLE SERVICE PACK */ 18640000
                                                     /* EOC PTM1415  */ 18650000
                                                                        18660000
   /*--- IS THERE AN OVERLAP WITH OTHER CONTRACT NUMBERS ? -------*/    18670000
                                                                        18680000
   EXEC SQL                                                             18690000
        SELECT COUNT(*)                                                 18700000
        INTO :WRK_COUNT                                                 18710000
        FROM RCBV0241_PI_CTR                                            18720000
        WHERE COUNTRY_NUMBER   = :RCBBIF0_MACH.COUNTRY_NUMBER           18730000
          AND PRODUCT_TYPE     = :RCBBIF0_MACH.MACHINE_TYPE             18740000
          AND ORIGIN           = :WRK_ORIGIN                            18750000
          AND SEQUENCE_NUMBER  = :WRK_SEQUENCE_NUMBER                   18760000
          AND ( :G_WRK_SERV_START_DATE   BETWEEN                        18770000
                    EFFECTIVE_DATE  AND  END_DATE                       18780000
           OR   :G_WRK_SERV_END_DATE     BETWEEN                        18790000
                    EFFECTIVE_DATE  AND  END_DATE                       18800000
                                                                        18810000
           OR   (:G_WRK_SERV_START_DATE <= EFFECTIVE_DATE               18820000
            AND  :G_WRK_SERV_END_DATE   >= EFFECTIVE_DATE               18830000
                )                                                       18840000
              )                                                         18850000
          AND  EFFECTIVE_DATE ¬= END_DATE                               18860000
          AND  END_DATE       >= :WRK_RUN_DATE                          18870000
          AND ( CONTRACT_NUMBER ¬= :RCBBIF0_MACH.PARTS_NUMBER           18880000
              );                                                        18890000
                                                                        18900000
   IF SQLCA.SQLCODE ¬= 0 THEN                                           18910000
     CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#016');                      18920000
                                                                        18930000
   IF WRK_COUNT > 0 THEN                  /* OTHER OVERLAP(S) FOUND  */ 18940000
     CONTR_OVERLAP = '1'B;                                              18950000
                                                     /* SOC PTM1415  */ 18960000
   ELSE DO;                                                             18970000
                                                                        18980000
     /*--- IS THERE AN OVERLAP WITH SAME CONTRACTS  NUMBERS ? -------*/ 18990000
     /*- NOTE: A SINGLE OVERLAP IS CONSIDERED BEING AN UPDATE ! -----*/ 19000000
                                                                        19010000
     EXEC SQL                                                           19020000
          SELECT COUNT(*)                                               19030000
          INTO :WRK_COUNT                                               19040000
          FROM RCBV0241_PI_CTR                                          19050000
          WHERE COUNTRY_NUMBER   = :RCBBIF0_MACH.COUNTRY_NUMBER         19060000
            AND PRODUCT_TYPE     = :RCBBIF0_MACH.MACHINE_TYPE           19070000
            AND ORIGIN           = :WRK_ORIGIN                          19080000
            AND SEQUENCE_NUMBER  = :WRK_SEQUENCE_NUMBER                 19090000
            AND ( :G_WRK_SERV_START_DATE   BETWEEN                      19100000
                      EFFECTIVE_DATE  AND  END_DATE                     19110000
             OR   :G_WRK_SERV_END_DATE     BETWEEN                      19120000
                      EFFECTIVE_DATE  AND  END_DATE                     19130000
                                                                        19140000
             OR   (:G_WRK_SERV_START_DATE <= EFFECTIVE_DATE             19150000
              AND  :G_WRK_SERV_END_DATE   >= EFFECTIVE_DATE             19160000
                  )                                                     19170000
                )                                                       19180000
            AND ( CONTRACT_NUMBER = :RCBBIF0_MACH.PARTS_NUMBER          19190000
                );                                                      19200000
                                                                        19210000
     IF SQLCA.SQLCODE ¬= 0 THEN                                         19220000
       CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#017');                    19230000
                                                                        19240000
     IF WRK_COUNT > 1 THEN               /* MULTIPLE OVERLAPS FOUND  */ 19250000
       CONTR_OVERLAP = '1'B;                                            19260000
   END;                                                                 19270000
                                                                        19280000
 /*END;*/                                                               19290000
                                                     /* EOC PTM1415  */ 19300000
 END RCBBIFM_CHECK_MULT_SERVPAC;                                        19310000
                                                   /* EOC RB01236    */ 19320000
1/********************************************************************/ 19330000
 /*                                                                  */ 19340000
 /* MODULE NAME      : RCBBIFM_SELECT_TOS                            */ 19350000
 /*                                                                  */ 19360000
 /* DESCRIPTION      : CHECK EXISTANCE OF TOS IN RCB INVENTORY TABLE */ 19370000
 /*                                                                  */ 19380000
 /********************************************************************/ 19390000
 RCBBIFM_SELECT_TOS: PROC;                                              19400000
                                                                        19410000
 T051_FND = '0'B;                                                       19420000
 RCB051S = '';                                       /* CEDS00000436 */ 19430000
 EXEC SQL                                                               19440000
      SELECT *                                                          19450000
      INTO   :RCB051S  :RCB051SI.INDNULL                                19460000
      FROM   RCBV0051_PI_HW_PR                                          19470000
      WHERE  COUNTRY_NUMBER  = :RCBBIF0_MACH.COUNTRY_NUMBER             19480000
        AND  PRODUCT_TYPE    = :RCBBIF0_MACH.MACHINE_TYPE               19490000
        AND  ORIGIN          = :WRK_ORIGIN                /* PTM1158 */ 19500000
        AND  SEQUENCE_NUMBER = :WRK_SEQUENCE_NUMBER;      /* PTM1158 */ 19510000
                                                                        19520000
 SELECT (SQLCA.SQLCODE);                                                19530000
   WHEN (0)                                                             19540000
                                                      /* SOC RB01236 */ 19550000
     DO;                                                                19560000
       T051_FND = '1'B;                                                 19570000
       IF RCB051SI.INDNULL(23) ¬= -1 THEN            /* CEDS00000436 */ 19580000
         WRK_T051_LIABILITY = RCB051S.WARRANTY_LIABILITY; /* RB01283 */ 19590000
       ELSE                                          /* CEDS00000436 */ 19600000
         WRK_T051_LIABILITY = '';                    /* CEDS00000436 */ 19610000
     END;                                                               19620000
                                                      /* EOC RB01236 */ 19630000
   WHEN (+100)                                                          19640000
     DO;                                                                19650000
       CALL RCBBIFM_MSG('0040');                                        19660000
     END;                                                               19670000
   OTHERWISE                                                            19680000
     DO;                                                                19690000
       CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#018');          /*ABORT*/ 19700000
     END;                                                               19710000
   END;                                                                 19720000
                                                                        19730000
 END RCBBIFM_SELECT_TOS;                                                19740000
1/********************************************************************/ 19750000
 /*                                                                  */ 19760000
 /* MODULE NAME      : RCBBIFM_RETRIEVE_SLC                          */ 19770000
 /*                                                                  */ 19780000
 /* DESCRIPTION      : SELECT SLC FOR CONTRACT MACHINE RECORD        */ 19790000
 /*                                                          *RC01191*/ 19800000
 /********************************************************************/ 19810000
 RCBBIFM_RETRIEVE_SLC: PROC;                                            19820000
                                                                        19830000
 PTR_RCBV630  =  ADDR (TB_RCBV630);                                     19840000
 PTR_RCBV630I =  ADDR (TB_RCBV630_I);                                   19850000
                                                                        19860000
 TB_RCBV630_I = 0;                                                      19870000
 TB_RCBV630   = '';                                                     19880000
 TB_RCBV630.HVP_CONTRACT_NUMBR = FILE_RCBBIC0.CONTRACT_NUMBER;          19890000
                                       /* RETRIEVE CURRENT ROW        */19900000
 CALL RCBISPM (PTR_RCBV630,                                /* RB01250 */19910000
               PTR_RCBV630I,                                            19920000
               PTR_RETURN_AREA,                                         19930000
               PTR_INT_AREA);                                           19940000
 SELECT (RETURN_AREA.RETURN_CODE);                                      19950000
   WHEN (0) DO;                                                         19960000
     IF TB_RCBV630_I.INDNULL(2) ¬= -1  /* SERVICE LEVEL CODE - RB01250*/19970000
     THEN FOUND = '1'B;                                                 19980000
     ELSE FOUND = '0'B;                                                 19990000
   END;                                                                 20000000
   WHEN (4)                                                             20010000
     FOUND = '0'B;                                                      20020000
   OTHERWISE                                                            20030000
     CALL RCBBIFM_ERROR(ADDR(RETURN_AREA.RETURN_SQL),                   20040000
                        'DB2','#019');                                  20050000
 END;                                                                   20060000
                                                                        20070000
 END RCBBIFM_RETRIEVE_SLC;                                              20080000
1/********************************************************************/ 20090000
 /*                                                   /* SOC PTM1173 */ 20100000
 /* MODULE NAME      : RCBBIFM_RETRIEVE_RCBV0470                     */ 20110000
 /*                                                                  */ 20120000
 /* DESCRIPTION      : SELECT ROW OF RCBV0470                        */ 20130000
 /*                                                                  */ 20140000
 /*                                                                  */ 20150000
 /********************************************************************/ 20160000
 RCBBIFM_RETRIEVE_RCBV0470: PROC;                                       20170000
                                                                        20180000
 SW_COVERAGE_HOURS_FOUND     = FALSE;                                   20190000
                                                                        20200000
 TB_RCBV470                  = '';                                      20210000
 TB_RCBV470_I.INDNULL(*)     = 0;                                       20220000
 TB_RCBV470.SERVICE_LVL_CODE = TB_RCBV630.SERVICE_LVL_CODE;             20230000
                                                                        20240000
 CALL RCBISRM (ADDR(TB_RCBV470),                          /* RA01233 */ 20250000
               ADDR(TB_RCBV470_I),                                      20260000
               PTR_RETURN_AREA,                                         20270000
               PTR_INT_AREA);                                           20280000
 SELECT(RETURN_AREA.RETURN_CODE);                                       20290000
 WHEN (0)                         /* ROW FOUND                 */       20300000
   DO;                                                                  20310000
     SW_COVERAGE_HOURS_FOUND = TRUE;                                    20320000
   END;                                                                 20330000
 OTHERWISE                                                              20340000
   DO;                                                                  20350000
     CALL RCBBIFM_ERROR                                                 20360000
                (ADDR(RETURN_AREA.RETURN_SQL),'DB2','#020');            20370000
   END;                                                                 20380000
 END;                                                                   20390000
 END RCBBIFM_RETRIEVE_RCBV0470;                        /* EOC PTM1173 */20400000
1/********************************************************************/ 20410000
 /*                                                   /* SOC RC01234 */ 20420000
 /* MODULE NAME      : RCBBIFM_RETRIEVE_RCBV0640                     */ 20430000
 /*                                                                  */ 20440000
 /* DESCRIPTION      : SELECT ROW OF RCBV0640                        */ 20450000
 /*                                                                  */ 20460000
 /*                                                                  */ 20470000
 /********************************************************************/ 20480000
 RCBBIFM_RETRIEVE_RCBV0640: PROC;                                       20490000
                                                                        20500000
 TB_RCBV640                    = '';                                    20510000
 TB_RCBV640_I.INDNULL(*)       = 0;                                     20520000
 TB_RCBV640.SERVICE_DLVR_METHD = TB_RCBV470.SERVICE_DLVR_METHD;         20530000
                                                                        20540000
 CALL RCBIBOM (ADDR(TB_RCBV640),                                        20550000
               ADDR(TB_RCBV640_I),                                      20560000
               PTR_RETURN_AREA,                                         20570000
               PTR_INT_AREA,                                            20580000
               'SDM');                                                  20590000
 SELECT(RETURN_AREA.RETURN_CODE);                                       20600000
   WHEN (0) DO;                                   /* ROW FOUND       */ 20610000
     SW_640_FOUND = TRUE;                         /*         PTM1411 */ 20620000
   END;                                                                 20630000
   OTHERWISE DO;                                                        20640000
     SW_640_FOUND = FALSE;                        /*         PTM1411 */ 20650000
   END;                                                                 20660000
 END;                                                                   20670000
                                                                        20680000
 END RCBBIFM_RETRIEVE_RCBV0640;                       /* EOC RC01234 */ 20690000
1/********************************************************************/ 20700000
 /*                                                                  */ 20710000
 /* MODULE NAME      : RCBBIFM_HANDLE_USEREXIT                       */ 20720000
 /*                                                                  */ 20730000
 /* DESCRIPTION      : - PREPARATION BEFORE CALL TO RCBBIFU          */ 20740000
 /*                    - OVERWRITE CONCERNING FIELDS AFTER CORRECT   */ 20750000
 /*                      RETURN FROM USEREXIT RCBBIFU. KEY FIELDS,   */ 20760000
 /*                      TRANSACTION CODE AND SOURCE INDICATOR MAY   */ 20770000
 /*                      NOT BE OVERWRITTEN.                         */ 20780000
 /*                                                                  */ 20790000
 /********************************************************************/ 20800000
 RCBBIFM_HANDLE_USEREXIT: PROC;                                         20810000
                                                                        20820000
 USER_FILE = '';                                             /*RC01191*/20830000
                                         /* FOR LOCAL VALUES/ACTIONS */ 20840000
 IF SWITCH_USER_EXIT = TRUE                                             20850000
 THEN                                                                   20860000
   DO;                                                                  20870000
                                                       /* SOC *RC01191*/20880000
     USER_FILE.COUNTRY_NUMBER        = FILE_RCBBIB0.COUNTRY_NUMBER;     20890000
                                                       /* EOC *RC01191*/20900000
     USER_FILE.CUSTOMER_NUMBER       = FILE_RCBBIA0.CUSTOMER_NUMBER;    20910000
                                                      /* SOC RC01379 */ 20911099
     USER_FILE.CUSTOMER_NUMBER_ORG   = RCBBIF0_CUST.CUSTOMER_NUMBER;    20912099
                                                      /* EOC RC01379 */ 20913099
     USER_FILE.CUSTOMER_NR_EXTEND    = FILE_RCBBIA0.CUSTOMER_NR_EXTEND; 20920000
     USER_FILE.CUSTOMER_NAME         = FILE_RCBBIA0.CUSTOMER_NAME;      20930000
     USER_FILE.TYPE_OF_CUSTOMER      = FILE_RCBBIA0.TYPE_OF_CUSTOMER;   20940000
     USER_FILE.ADDRESS_LINE_1        = FILE_RCBBIA0.ADDRESS_LINE_1;     20950000
     USER_FILE.ADDRESS_LINE_2        = FILE_RCBBIA0.ADDRESS_LINE_2;     20960000
     USER_FILE.ADDRESS_LINE_3        = FILE_RCBBIA0.ADDRESS_LINE_3;     20970000
     USER_FILE.ZIP_CODE              = FILE_RCBBIA0.ZIP_CODE;           20980000
     USER_FILE.EMBARGO_CODE          = FILE_RCBBIA0.EMBARGO_CODE;       20990000
     USER_FILE.PRODUCT_TYPE          = FILE_RCBBIB0.PRODUCT_TYPE;       21000000
     USER_FILE.ORIGIN                = FILE_RCBBIB0.ORIGIN;             21010000
     USER_FILE.SEQUENCE_NUMBER       = FILE_RCBBIB0.SEQUENCE_NUMBER;    21020000
     USER_FILE.MODEL_NUMBER          = FILE_RCBBIB0.MODEL_NUMBER;       21030000
     USER_FILE.INSTALL_DATE          = FILE_RCBBIB0.INSTALL_DATE;       21040000
     USER_FILE.WARRANTY_EXP_DATE     = FILE_RCBBIB0.WARRANTY_EXP_DATE;  21050000
     USER_FILE.TYPE_OF_MAINT         = FILE_RCBBIB0.TYPE_OF_MAINT;      21060000
     USER_FILE.TYPE_OF_WARRANTY      = FILE_RCBBIB0.TYPE_OF_WARRANTY;   21070000
     USER_FILE.F_TYPE_OF_WARRANTY    = FILE_RCBBIB0.F_TYPE_OF_WARRANTY; 21080000
                                                          /* RB01281 */ 21090000
     USER_FILE.WARRANTY_LIABILITY    = FILE_RCBBIB0.WARRANTY_LIABILITY; 21100000
                                                          /* RB01283 */ 21110000
     USER_FILE.OU_CODE               = FILE_RCBBIB0.OU_CODE;            21120000
     USER_FILE.DEALER_NUMBER         = FILE_RCBBIB0.DEALER_NUMBER;      21130000
                                                       /* SOC *RC01191*/21140000
     USER_FILE.SERVICE_LVL_CODE_1    = FILE_RCBBIB0.SERVICE_LVL_CODE_1; 21150000
     USER_FILE.WARRANTY_SPLT_DATE    = FILE_RCBBIB0.WARRANTY_SPLT_DATE; 21160000
     USER_FILE.SERVICE_LVL_CODE_2    = FILE_RCBBIB0.SERVICE_LVL_CODE_2; 21170000
                                                       /* EOC *RC01191*/21180000
     USER_FILE.HVP_QUANTITY          = FILE_RCBBIC0.HVP_QUANTITY;       21190000
     USER_FILE.CONTRACT_NUMBER       = FILE_RCBBIC0.CONTRACT_NUMBER;    21200000
     USER_FILE.EFFECTIVE_DATE        = FILE_RCBBIC0.EFFECTIVE_DATE;     21210000
     USER_FILE.END_DATE              = FILE_RCBBIC0.END_DATE;           21220000
     USER_FILE.SERVICE_TYPE          = FILE_RCBBIC0.SERVICE_TYPE;       21230000
     USER_FILE.SERVICE_MODULE_1      = FILE_RCBBIC0.SERVICE_MODULE_1;   21240000
     USER_FILE.SERVICE_MODULE_2      = FILE_RCBBIC0.SERVICE_MODULE_2;   21250000
     USER_FILE.SERVICE_MODULE_3      = FILE_RCBBIC0.SERVICE_MODULE_3;   21260000
     USER_FILE.SERVICE_MODULE_4      = FILE_RCBBIC0.SERVICE_MODULE_4;   21270000
     USER_FILE.SERVICE_MODULE_5      = FILE_RCBBIC0.SERVICE_MODULE_5;   21280000
     USER_FILE.MONDAY_COVER_START    = FILE_RCBBIC0.MONDAY_COVER_START; 21290000
     USER_FILE.MONDAY_COVER_END      = FILE_RCBBIC0.MONDAY_COVER_END;   21300000
     USER_FILE.TUESDAY_COVER_START   = FILE_RCBBIC0.TUESDAY_COVER_START;21310000
     USER_FILE.TUESDAY_COVER_END     = FILE_RCBBIC0.TUESDAY_COVER_END;  21320000
     USER_FILE.WEDNESDAY_COVER_START =                                  21330000
                                     FILE_RCBBIC0.WEDNESDAY_COVER_START;21340000
     USER_FILE.WEDNESDAY_COVER_END   =                                  21350000
                                     FILE_RCBBIC0.WEDNESDAY_COVER_END;  21360000
     USER_FILE.THURSDAY_COVER_START  =                                  21370000
                                     FILE_RCBBIC0.THURSDAY_COVER_START; 21380000
     USER_FILE.THURSDAY_COVER_END    =                                  21390000
                                     FILE_RCBBIC0.THURSDAY_COVER_END;   21400000
     USER_FILE.FRIDAY_COVER_START    = FILE_RCBBIC0.FRIDAY_COVER_START; 21410000
     USER_FILE.FRIDAY_COVER_END      = FILE_RCBBIC0.FRIDAY_COVER_END;   21420000
     USER_FILE.SATURDAY_COVER_START  =                                  21430000
                                     FILE_RCBBIC0.SATURDAY_COVER_START; 21440000
     USER_FILE.SATURDAY_COVER_END    =                                  21450000
                                     FILE_RCBBIC0.SATURDAY_COVER_END;   21460000
     USER_FILE.SUNDAY_COVER_START    = FILE_RCBBIC0.SUNDAY_COVER_START; 21470000
     USER_FILE.SUNDAY_COVER_END      = FILE_RCBBIC0.SUNDAY_COVER_END;   21480000
                                                       /* SOC *RC01191*/21490000
     USER_FILE.SERVICE_LVL_CODE      = FILE_RCBBIC0.SERVICE_LVL_CODE;   21500000
     USER_FILE.AUTHORISATION_CODE    = FILE_RCBBIC0.AUTHORISATION_CODE; 21510000
                                                       /* EOC *RC01191*/21520000
                                                                        21530000
     CALL RCBBIFU (ADDR(SWITCH_USER_EXIT)                               21540000
                  ,ADDR(USER_FILE)                                      21550000
                  ,PTR_INT_AREA);                                       21560000
                                                                        21570000
     IF SWITCH_USER_EXIT = TRUE                                         21580000
     THEN                                                               21590000
       DO;                                                              21600000
                                         /* OVERWRITE CUSTOMER REC.  */ 21610000
                                                      /* SOC RC01379 */ 21611099
         FILE_RCBBIA0.CUSTOMER_NUMBER   = USER_FILE.CUSTOMER_NUMBER;    21612099
                                                                        21613099
         IF COUNTRY_AREA.PROC_ID = 'UI13' |                             21614099
            COUNTRY_AREA.PROC_ID = 'UI43' |                             21615099
            COUNTRY_AREA.PROC_ID = 'UI23' THEN                          21616099
          DO;                                                           21617099
           FILE_RCBBIB0.CUSTOMER_NUMBER = FILE_RCBBIA0.CUSTOMER_NUMBER; 21618099
          END;                                                          21619099
                                                                        21619199
          IF COUNTRY_AREA.PROC_ID ¬= 'UI33' THEN                        21619299
           FILE_RCBBIC0.CUSTOMER_NUMBER = FILE_RCBBIA0.CUSTOMER_NUMBER; 21619399
                                                      /* EOC RC01379 */ 21619499
         FILE_RCBBIA0.CUSTOMER_NAME    = USER_FILE.CUSTOMER_NAME;       21620000
         FILE_RCBBIA0.TYPE_OF_CUSTOMER = USER_FILE.TYPE_OF_CUSTOMER;    21630000
         FILE_RCBBIA0.ADDRESS_LINE_1   = USER_FILE.ADDRESS_LINE_1;      21640000
         FILE_RCBBIA0.ADDRESS_LINE_2   = USER_FILE.ADDRESS_LINE_2;      21650000
         FILE_RCBBIA0.ADDRESS_LINE_3   = USER_FILE.ADDRESS_LINE_3;      21660000
         FILE_RCBBIA0.ZIP_CODE         = USER_FILE.ZIP_CODE;            21670000
         FILE_RCBBIA0.EMBARGO_CODE     = USER_FILE.EMBARGO_CODE;        21680000
                                         /* OVERWRITE INVENTORY REC. */ 21690000
         FILE_RCBBIB0.MODEL_NUMBER       = USER_FILE.MODEL_NUMBER;      21700000
         FILE_RCBBIB0.INSTALL_DATE       = USER_FILE.INSTALL_DATE;      21710000
         FILE_RCBBIB0.WARRANTY_EXP_DATE  = USER_FILE.WARRANTY_EXP_DATE; 21720000
         FILE_RCBBIB0.TYPE_OF_MAINT      = USER_FILE.TYPE_OF_MAINT;     21730000
         FILE_RCBBIB0.TYPE_OF_WARRANTY   = USER_FILE.TYPE_OF_WARRANTY;  21740000
         FILE_RCBBIB0.F_TYPE_OF_WARRANTY=                               21750000
                                          USER_FILE.F_TYPE_OF_WARRANTY; 21760000
                                                           /* RB01281 */21770000
         FILE_RCBBIB0.WARRANTY_LIABILITY = USER_FILE.WARRANTY_LIABILITY;21780000
                                                           /* RB01283 */21790000
         FILE_RCBBIB0.OU_CODE            = USER_FILE.OU_CODE;           21800000
         FILE_RCBBIB0.DEALER_NUMBER      = USER_FILE.DEALER_NUMBER;     21810000
                                                       /* SOC *RC01191*/21820000
         FILE_RCBBIB0.SERVICE_LVL_CODE_1 = USER_FILE.SERVICE_LVL_CODE_1;21830000
         FILE_RCBBIB0.SERVICE_LVL_CODE_2 = USER_FILE.SERVICE_LVL_CODE_2;21840000
         FILE_RCBBIB0.WARRANTY_SPLT_DATE = USER_FILE.WARRANTY_SPLT_DATE;21850000
                                                       /* EOC *RC01191*/21860000
                                         /* OVERWRITE CONTRACT REC.  */ 21870000
         FILE_RCBBIC0.HVP_QUANTITY          = USER_FILE.HVP_QUANTITY;   21880000
         FILE_RCBBIC0.CONTRACT_NUMBER       = USER_FILE.CONTRACT_NUMBER;21890000
         FILE_RCBBIC0.EFFECTIVE_DATE        = USER_FILE.EFFECTIVE_DATE; 21900000
         FILE_RCBBIC0.END_DATE              = USER_FILE.END_DATE;       21910000
         FILE_RCBBIC0.SERVICE_TYPE          = USER_FILE.SERVICE_TYPE;   21920000
         FILE_RCBBIC0.SERVICE_MODULE_1      =                           21930000
                                        USER_FILE.SERVICE_MODULE_1;     21940000
         FILE_RCBBIC0.SERVICE_MODULE_2      =                           21950000
                                        USER_FILE.SERVICE_MODULE_2;     21960000
         FILE_RCBBIC0.SERVICE_MODULE_3      =                           21970000
                                        USER_FILE.SERVICE_MODULE_3;     21980000
         FILE_RCBBIC0.SERVICE_MODULE_4      =                           21990000
                                        USER_FILE.SERVICE_MODULE_4;     22000000
         FILE_RCBBIC0.SERVICE_MODULE_5      =                           22010000
                                        USER_FILE.SERVICE_MODULE_5;     22020000
         FILE_RCBBIC0.MONDAY_COVER_START    =                           22030000
                                        USER_FILE.MONDAY_COVER_START;   22040000
         FILE_RCBBIC0.MONDAY_COVER_END      =                           22050000
                                        USER_FILE.MONDAY_COVER_END;     22060000
         FILE_RCBBIC0.TUESDAY_COVER_START   =                           22070000
                                        USER_FILE.TUESDAY_COVER_START;  22080000
         FILE_RCBBIC0.TUESDAY_COVER_END     =                           22090000
                                        USER_FILE.TUESDAY_COVER_END;    22100000
         FILE_RCBBIC0.WEDNESDAY_COVER_START =                           22110000
                                        USER_FILE.WEDNESDAY_COVER_START;22120000
         FILE_RCBBIC0.WEDNESDAY_COVER_END   =                           22130000
                                        USER_FILE.WEDNESDAY_COVER_END;  22140000
         FILE_RCBBIC0.THURSDAY_COVER_START  =                           22150000
                                        USER_FILE.THURSDAY_COVER_START; 22160000
         FILE_RCBBIC0.THURSDAY_COVER_END    =                           22170000
                                        USER_FILE.THURSDAY_COVER_END;   22180000
         FILE_RCBBIC0.FRIDAY_COVER_START    =                           22190000
                                        USER_FILE.FRIDAY_COVER_START;   22200000
         FILE_RCBBIC0.FRIDAY_COVER_END      =                           22210000
                                        USER_FILE.FRIDAY_COVER_END;     22220000
         FILE_RCBBIC0.SATURDAY_COVER_START  =                           22230000
                                        USER_FILE.SATURDAY_COVER_START; 22240000
         FILE_RCBBIC0.SATURDAY_COVER_END    =                           22250000
                                        USER_FILE.SATURDAY_COVER_END;   22260000
         FILE_RCBBIC0.SUNDAY_COVER_START    =                           22270000
                                        USER_FILE.SUNDAY_COVER_START;   22280000
         FILE_RCBBIC0.SUNDAY_COVER_END      =                           22290000
                                        USER_FILE.SUNDAY_COVER_END;     22300000
                                                       /* SOC *RC01191*/22310000
         FILE_RCBBIC0.SERVICE_LVL_CODE      =                           22320000
                                        USER_FILE.SERVICE_LVL_CODE;     22330000
         FILE_RCBBIC0.AUTHORISATION_CODE    =                           22340000
                                        USER_FILE.AUTHORISATION_CODE;   22350000
                                                       /* EOC *RC01191*/22360000
       END;                                                             22370000
   END;                                                                 22380000
                                                                        22390000
                                                                        22400000
 END RCBBIFM_HANDLE_USEREXIT;                                           22410000
1/********************************************************************/ 22420000
 /*                                                                  */ 22430000
 /* MODULE NAME      : RCBBIFM_FILL_CUSTOMER                         */ 22440000
 /*                                                                  */ 22450000
 /* DESCRIPTION      : FILL RECORD FOR RCB CUSTOMER FILE             */ 22460000
 /*                                                                  */ 22470000
 /********************************************************************/ 22480000
 RCBBIFM_FILL_CUSTOMER: PROC;                                           22490000
                                                                        22500000
 FILE_RCBBIA0                    = '';                                  22510000
 FILE_RCBBIA0.COUNTRY_NUMBER     = RCBBIF0_CUST.COUNTRY_NUMBER;         22520000
 SELECT (COUNTRY_AREA.PROC_ID);                       /* SOC RA01236 */ 22530000
   WHEN ('UI13')                                                        22540000
     DO;                                                                22550000
       IF SWITCH_EPDUMMY_FLAG = TRUE THEN             /* SOC RB01289 */ 22560000
         DO;                                          /* EOC RB01289 */ 22570000
           FILE_RCBBIA0.CUSTOMER_NUMBER = 'EP' || WRK_CUST_CNT;         22580000
           IF WRK_CUST_CNT = 999999 THEN                                22590000
             DO;                                          /* RB01289 */ 22600000
               WRK_CUST_CNT = 0;                                        22610000
               SWITCH_EPDUMMY_FLAG = FALSE;           /* SOC RB01289 */ 22620000
             END;                                     /* EOC RB01289 */ 22630000
           ELSE                                                         22640000
             WRK_CUST_CNT = WRK_CUST_CNT + 1;                           22650000
         END;                                         /* SOC RB01289 */ 22660000
       ELSE                                                             22670000
         DO;                                                            22680000
           FILE_RCBBIA0.CUSTOMER_NUMBER = 'ES' || WRK_CUST_CNT;         22690000
           IF WRK_CUST_CNT = 999999 THEN                                22700000
             DO;                                                        22710000
               WRK_CUST_CNT = 0;                                        22720000
               SWITCH_EPDUMMY_FLAG = TRUE;                              22730000
             END;                                                       22740000
           ELSE                                                         22750000
             WRK_CUST_CNT = WRK_CUST_CNT + 1;                           22760000
         END;                                         /* EOC RB01289 */ 22770000
     END;                                                               22780000
   WHEN ('UI43')                                      /*SOC RC01375 */  22781099
     DO;                                                                22782099
       IF SWITCH_EPDUMMY_FLAG = TRUE THEN                               22783099
         DO;                                                            22784099
           FILE_RCBBIA0.CUSTOMER_NUMBER = 'EP' || WRK_CUST_CNT;         22785099
           IF WRK_CUST_CNT = 999999 THEN                                22786099
             DO;                                                        22787099
               WRK_CUST_CNT = 0;                                        22788099
               SWITCH_EPDUMMY_FLAG = FALSE;                             22789099
             END;                                                       22789199
           ELSE                                                         22789299
             WRK_CUST_CNT = WRK_CUST_CNT + 1;                           22789399
         END;                                                           22789499
       ELSE                                                             22789599
         DO;                                                            22789699
           FILE_RCBBIA0.CUSTOMER_NUMBER = 'ES' || WRK_CUST_CNT;         22789799
           IF WRK_CUST_CNT = 999999 THEN                                22789899
             DO;                                                        22789999
               WRK_CUST_CNT = 0;                                        22790099
               SWITCH_EPDUMMY_FLAG = TRUE;                              22790199
             END;                                                       22790299
           ELSE                                                         22790399
             WRK_CUST_CNT = WRK_CUST_CNT + 1;                           22790499
         END;                                                           22790599
     END;                                             /* EOC RC01375 */ 22790699
   WHEN ('UI23')                                                        22791000
     DO;                                                                22800000
       IF SWITCH_CIDUMMY_FLAG = TRUE THEN             /* SOC RB01289 */ 22810000
         DO;                                          /* EOC RB01289 */ 22820000
           FILE_RCBBIA0.CUSTOMER_NUMBER = 'CI' || WRK_CUST_CNT;         22830000
           IF WRK_CUST_CNT = 999999 THEN                                22840000
             DO;                                          /* RB01289 */ 22850000
               WRK_CUST_CNT = 0;                                        22860000
               SWITCH_CIDUMMY_FLAG = FALSE;           /* SOC RB01289 */ 22870000
             END;                                     /* EOC RB01289 */ 22880000
           ELSE                                                         22890000
             WRK_CUST_CNT = WRK_CUST_CNT + 1;                           22900000
         END;                                         /* SOC RB01289 */ 22910000
       ELSE                                                             22920000
         DO;                                                            22930000
           FILE_RCBBIA0.CUSTOMER_NUMBER = 'CC' || WRK_CUST_CNT;         22940000
           IF WRK_CUST_CNT = 999999 THEN                                22950000
             DO;                                                        22960000
                WRK_CUST_CNT = 0;                                       22970000
                SWITCH_CIDUMMY_FLAG = TRUE;                             22980000
             END;                                                       22990000
           ELSE                                                         23000000
             WRK_CUST_CNT = WRK_CUST_CNT + 1;                           23010000
         END;                                         /* EOC RB01289 */ 23020000
     END;                                                               23030000
   OTHERWISE                                                            23040000
     FILE_RCBBIA0.CUSTOMER_NUMBER    = RCBBIF0_CUST.CUSTOMER_NUMBER;    23050000
 END;                                                 /* EOC RA01236 */ 23060000
 FILE_RCBBIA0.CUSTOMER_NR_EXTEND = '000';                               23070000
 FILE_RCBBIA0.ACTION_CODE        = 'A';                                 23080000
 FILE_RCBBIA0.CUSTOMER_NAME      = RCBBIF0_CUST.NAME;                   23090000
 FILE_RCBBIA0.TYPE_OF_CUSTOMER   = PARM.TYPE_OF_CUST;                   23100000
 FILE_RCBBIA0.ADDRESS_LINE_1     = RCBBIF0_CUST.ADDRESS;                23110000
 FILE_RCBBIA0.ADDRESS_LINE_2     = RCBBIF0_CUST.TOWN;                   23120000
 FILE_RCBBIA0.ADDRESS_LINE_3     = RCBBIF0_CUST.TELEPHONE_NUMBER;       23130000
 FILE_RCBBIA0.ZIP_CODE           = RCBBIF0_CUST.POSTAL_CODE;            23140000
 FILE_RCBBIA0.EMBARGO_CODE       = PARM.EMBARGO_CODE;                   23150000
 FILE_RCBBIA0.SOURCE_INDICATOR   = 'S';                                 23160000
                                                                        23170000
 END RCBBIFM_FILL_CUSTOMER;                                             23180000
1/********************************************************************/ 23190000
 /*                                                                  */ 23200000
 /* MODULE NAME      : RCBBIFM_FILL_INVENTORY                        */ 23210000
 /*                                                                  */ 23220000
 /* DESCRIPTION      : FILL RECORD FOR RCB INVENTORY FILE            */ 23230000
 /*                                                                  */ 23240000
 /********************************************************************/ 23250000
 RCBBIFM_FILL_INVENTORY: PROC;                                          23260000
                                                                        23270000
 FILE_RCBBIB0                    = '';                                  23280000
 FILE_RCBBIB0.PRODUCT_TYPE       = RCBBIF0_MACH.MACHINE_TYPE;           23290000
 FILE_RCBBIB0.ORIGIN             = WRK_ORIGIN;            /* PTM1158 */ 23300000
 FILE_RCBBIB0.SEQUENCE_NUMBER    = WRK_SEQUENCE_NUMBER;   /* PTM1158 */ 23310000
 FILE_RCBBIB0.COUNTRY_NUMBER     = WRK_CTRYNO;                          23320000
 FILE_RCBBIB0.ACTION_CODE        = 'A';                                 23330000
 FILE_RCBBIB0.MODEL_NUMBER       = RCBBIF0_MACH.MACHINE_MODEL;          23340000
 FILE_RCBBIB0.INSTALL_DATE       = G_WRK_INSTALL_DATE;                  23350000
 /*FILE_RCBBIB0.WARRANTY_EXP_DATE  = G_WRK_WARR_EXP_DATE;   RB01272  */ 23360000
 FILE_RCBBIB0.TYPE_OF_MAINT      = PARM.TYPE_OF_MAINT;                  23370000
 FILE_RCBBIB0.TYPE_OF_WARRANTY   = PARM.TYPE_OF_WARRANTY;               23380000
 SELECT (COUNTRY_AREA.PROC_ID);                       /* SOC RA01236 */ 23390000
   WHEN ('UI13')                                                        23400000
     FILE_RCBBIB0.CUSTOMER_NUMBER = FILE_RCBBIA0.CUSTOMER_NUMBER;       23410000
                                                                        23410199
   WHEN ('UI43')                                      /* SOC RC01375 */ 23411099
     FILE_RCBBIB0.CUSTOMER_NUMBER = FILE_RCBBIA0.CUSTOMER_NUMBER;       23412099
                                                      /* EOC RC01375 */ 23413099
   WHEN ('UI23')                                                        23420000
     FILE_RCBBIB0.CUSTOMER_NUMBER = FILE_RCBBIA0.CUSTOMER_NUMBER;       23430000
   WHEN ('UI33')                                      /* SOC RB01327 */ 23431000
     CALL RCBBIFM_VALIDATE_CUSTNUM;                   /* EOC RB01327 */ 23432000
   OTHERWISE                                                            23440000
     FILE_RCBBIB0.CUSTOMER_NUMBER = RCBBIF0_MACH.CUSTOMER_NUMBER;       23450000
 END;                                                 /* EOC RA01236 */ 23460000
                                                 /* SOC CEDS00000473 */ 23463600
 IF T051_FND = '1'B                                                     23463700
  & RCB051S.SOURCE_INDICATOR  = 'O'  THEN                               23463800
    FILE_RCBBIB0.CUSTOMER_NUMBER = RCB051S.CUSTOMER_NUMBER;             23463900
 /* CUSTOMER NUMBER UPDATE IS RESTRICTED ONLY WHEN SOURCE INDICATOR  */ 23464000
 /* IN T51 IS "O"                                                    */ 23465000
 /*IF T051_FND = '1'B THEN                            /* SOC RB01289 */ 23470000
 /*DO;                                                                  23480000
     IF (RCB051S.CUSTOMER_NUMBER = RCB051S.DEALER_NUMBER) THEN          23490000
       DO;                                                              23500000
         IF(RCB051S.SOURCE_INDICATOR   = 'P'|                           23510000
            RCB051S.SOURCE_INDICATOR   = 'O') THEN                      23520000
                                                                        23530000
            FILE_RCBBIB0.CUSTOMER_NUMBER = RCB051S.CUSTOMER_NUMBER;     23540000
       END;                                                             23550000
     ELSE                                                               23560000
       DO;                                                              23570000
         IF ((((SUBSTR(RCB051S.CUSTOMER_NUMBER,1,2) = 'CI')             23580000
            |  (SUBSTR(RCB051S.CUSTOMER_NUMBER,1,2) = 'CC')             23590000
            |  (SUBSTR(RCB051S.CUSTOMER_NUMBER,1,2) = 'EP')             23600000
            |  (SUBSTR(RCB051S.CUSTOMER_NUMBER,1,2) = 'ES'))            23610000
            &  (RCB051S.SOURCE_INDICATOR   = 'S'))                      23620000
            |  (RCB051S.SOURCE_INDICATOR   = 'O')) THEN                 23630000
                                                                        23640000
              FILE_RCBBIB0.CUSTOMER_NUMBER =                            23650000
                                        RCB051S.CUSTOMER_NUMBER;        23660000
       END;                                                             23670000
                                                                        23680000
     IF (RCB051S.CUSTOMER_NUMBER ¬= '' &                                23690000
         RCB051S.DEALER_NUMBER = '' &                                   23700000
         RCB051S.SOURCE_INDICATOR   = 'O') THEN                         23710000
                                                                        23720000
         FILE_RCBBIB0.CUSTOMER_NUMBER = RCB051S.CUSTOMER_NUMBER;        23730000
   END;                                               /* EOC RB01289 */ 23740000
                                                 /* EOC CEDS00000473 */ 23741000
 FILE_RCBBIB0.CUSTOMER_NR_EXTEND = '000';                               23750000
 FILE_RCBBIB0.OU_CODE            = RCBBIF0_MACH.OU_NUMBER;              23760000
 FILE_RCBBIB0.DEALER_NUMBER      = RCBBIF0_MACH.CUSTOMER_NUMBER;        23770000
 FILE_RCBBIB0.SOURCE_INDICATOR   = 'S';                                 23780000
                                                       /* SOC *RC01191*/23790000
                               /* FILL IN DEFAULT WARRANTY CONDITIONS */23800000
 FILE_RCBBIB0.SERVICE_LVL_CODE_1 = '';                                  23810000
 FILE_RCBBIB0.WARRANTY_SPLT_DATE = '';                                  23820000
 FILE_RCBBIB0.SERVICE_LVL_CODE_2 = '';                                  23830000
 FILE_RCBBIB0.SERVICE_LVL_CODE_C = '';                                  23840000
                                                                        23850000
 CALL RCBBIFM_HANDLE_RCB023M;                          /* EOC *RC01191*/23860000
                                                       /* SOC RB01281 */23870000
 FILE_RCBBIB0.F_TYPE_OF_WARRANTY= '';                                   23880000
 SWITCH_FLEXIBLE_WARRANTY        = FALSE;                               23890000
                                                                        23900000
 IF G_WRK_INSTALL_DATE ¬= '' THEN                /* SOC CEDS00000336 */ 23910000
 DO;                                             /* EOC CEDS00000336 */ 23920000
   IF SWITCH_EMPTY_T690 = FALSE THEN                      /* RB01298 */ 23930000
   DO;                                                    /* RB01298 */ 23940000
     CALL RCBBIFM_RETRIEVE_FLEXIBLE;                                    23950000
     IF SWITCH_FLEXIBLE_WARRANTY     = TRUE THEN                        23960000
     DO;                                                                23970000
                                                      /* SOC RB01298 */ 23980000
    /* FILE_RCBBIB0.F_TYPE_OF_WARRANTY =                                23990000
                       SUBSTR(RCB063.F_WARRANTY_MACHINE,1,1); */        24000000
       SELECT (WRK_RULE);                                               24010000
          WHEN ('FW')                                                   24020000
          DO;                                                           24030000
              FILE_RCBBIB0.F_TYPE_OF_WARRANTY = WRK_F_TOW;              24040000
          END;                                                          24050000
          WHEN ('HB')                                                   24060000
          DO;                                                           24070000
              FILE_RCBBIB0.F_TYPE_OF_WARRANTY = WRK_HB_TOM;             24080000
          END;                                                          24090000
          OTHERWISE;                                                    24100000
       END;                                                             24110000
                                                                        24120000
     /*FILE_RCBBIB0.WARRANTY_SPLT_DATE  = RCBBIFM_CALC_DATE             24130000
               (G_WRK_INSTALL_DATE,'M',TB_RCBV690.BRAND_WARRANTY_MNT);  24140000
       IF (FILE_RCBBIB0.WARRANTY_SPLT_DATE <=    /* SOC CEDS00000357 */ 24150000
     /*                FILE_RCBBIB0.WARRANTY_EXP_DATE &                 24160000
                       TB_RCBV690.SERVICE_LVL_CODE ¬= ' ')  THEN        24170000
       DO;                                                              24180000
        FILE_RCBBIB0.SERVICE_LVL_CODE_1 = TB_RCBV690.SERVICE_LVL_CODE;  24190000
        FILE_RCBBIB0.SERVICE_LVL_CODE_2 = TB_RCBV690.SERVICE_LVL_CODE;  24200000
       END;               */                                            24210000
       FILE_RCBBIB0.WARRANTY_SPLT_DATE  = RCBBIFM_CALC_DATE             24220000
                    (G_WRK_INSTALL_DATE,'M',T690_ARRAY.A_B_W_MNTHS(I)); 24230000
                                                                        24230100
                                                      /* SOC RB01312 */ 24230200
     IF T690_ARRAY.A_SLC(I) ¬= ' ' THEN                                 24230400
      FILE_RCBBIB0.SERVICE_LVL_CODE_1 = T690_ARRAY.A_SLC(I);            24231000
                                                      /* EOC RB01312 */ 24232000
     IF ((FILE_RCBBIB0.WARRANTY_SPLT_DATE <=                            24250000
        FILE_RCBBIB0.WARRANTY_EXP_DATE) & T690_ARRAY.A_SLC(I) ¬= ' ')   24260000
       THEN DO;                                                         24270000
                                                      /* SOC RB01312 */ 24271000
     /*       FILE_RCBBIB0.SERVICE_LVL_CODE_1 = T690_ARRAY.A_SLC(I);    24272000
                                                      /* EOC RB01312 */ 24273000
            /*FILE_RCBBIB0.SERVICE_LVL_CODE_2 = T690_ARRAY.A_SLC(I);*/  24300000
              SELECT (WRK_RULE);                                        24310000
              WHEN ('FW')                                               24320000
              DO;                                                       24330000
                FILE_RCBBIB0.SERVICE_LVL_CODE_2 = T690_ARRAY.A_SLC(I);  24340000
              END;                                                      24350000
              WHEN ('HB')                                               24360000
              DO;                                                       24370000
                IF T690_ARRAY.A_SLC2(I) ¬= '' THEN                      24371000
                 FILE_RCBBIB0.SERVICE_LVL_CODE_2 = T690_ARRAY.A_SLC2(I);24380000
              END;                                                      24390000
              OTHERWISE;                                                24400000
              END;                                                      24410000
            END;                                                        24420000
                                                       /* EOC RB01298 */24430000
       IF FILE_RCBBIB0.WARRANTY_SPLT_DATE >                             24440000
          FILE_RCBBIB0.WARRANTY_EXP_DATE                                24450000
       THEN DO;                                                         24460000
              FILE_RCBBIB0.WARRANTY_SPLT_DATE = '';                     24470000
              FILE_RCBBIB0.F_TYPE_OF_WARRANTY = '';                     24480000
            END;                                                        24490000
                                                 /* EOC CEDS00000357 */ 24500000
     END;                                                               24510000
     ELSE                                                               24520000
     IF FILE_RCBBIB0.WARRANTY_SPLT_DATE ¬= ''  THEN                     24530000
      FILE_RCBBIB0.F_TYPE_OF_WARRANTY  = FILE_RCBBIB0.TYPE_OF_WARRANTY; 24540000
     ELSE                                                               24550000
       FILE_RCBBIB0.F_TYPE_OF_WARRANTY = '';                            24560000
   END;                                                    /* RB01298 */24570000
 END;                                          /* SOC CEDS00000336 */   24580000
  ELSE                                                                  24590000
   DO;                                                                  24600000
    IF FILE_RCBBIB0.WARRANTY_SPLT_DATE ¬= ''  THEN                      24610000
       FILE_RCBBIB0.F_TYPE_OF_WARRANTY  = FILE_RCBBIB0.TYPE_OF_WARRANTY;24620000
    ELSE                                                                24630000
       FILE_RCBBIB0.F_TYPE_OF_WARRANTY = '';                            24640000
   END;                                       /* EOC CEDS00000336 */    24650000
                                                                        24660000
 /* IF (SWITCH_FLEXIBLE_WARRANTY    = TRUE  &                           24670000
     TB_RCBV690.SERVICE_LVL_CODE ¬= ' ')  THEN                          24680000
    DO;                                                                 24690000
     FILE_RCBBIB0.SERVICE_LVL_CODE_1 = TB_RCBV690.SERVICE_LVL_CODE;     24700000
     FILE_RCBBIB0.SERVICE_LVL_CODE_2 = TB_RCBV690.SERVICE_LVL_CODE;     24710000
    END; */                                        /* EOC RB01281  */   24720000
                                                                        24730000
 IF SWITCH_VENDOR_SERVICE = TRUE THEN                 /* SOC RB01278 */ 24740000
    DO;                                                                 24750000
      CALL RCBBIFM_PROD_REVENUE_DIV;                                    24760000
 /*   IF ((G_WRK_INSTALL_DATE   >=   WRK_LENOVO_DATE  |   SOC RB01283 */24770000
 /*      SUBSTR(WRK_ORIGIN,1,1) =   'L')             &                */24780000
 /*        TB_RCBV400.PROD_REVENUE_DIV = '44')    /* SOC CEDS00000363 */24790000
                                                       /* EOC RB01283 */24800000
      /* & SUBSTR(RCBBIF0_MACH.AUTHORISATION_CODE,1,3) = 'LEN' THEN */  24810000
                                                      /* CEDS00000321 */24820000
      IF (T051_FND & RCB051S.WARRANTY_LIABILITY = 'LEN') THEN           24830000
                                                          /* RB01283 */ 24840000
        DO;                                                             24850000
          FILE_RCBBIB0.TYPE_OF_WARRANTY = 'C';                          24860000
        END;                                                            24870000
                                                       /* SOC RC01362 */24871099
    /*IF SUBSTR(RCBBIF0_MACH.AUTHORISATION_CODE,1,3) = 'LEN' THEN       24880099
    /*  DO;                                                             24890099
    /*    FILE_RCBBIB0.TYPE_OF_MAINT = 'G';                             24900099
    /*  END;                                    *//* EOC CEDS00000363 */24910099
                                                       /* EOC RC01362 */24911099
    END;                                                                24920000
                                                      /* EOC RB01278 */ 24930000
   IF T051_FND = '1'B THEN                            /* SOC RB01283 */ 24940000
     FILE_RCBBIB0.WARRANTY_LIABILITY = WRK_T051_LIABILITY;              24950000
   ELSE                                                                 24960000
     FILE_RCBBIB0.WARRANTY_LIABILITY = ' ';           /* EOC RB01283 */ 24970000
                                                                        24980000
 END RCBBIFM_FILL_INVENTORY;                                            24990000
1/********************************************************************/ 24990100
 /*                                                   /* SOC RB01327 */ 24990200
 /* MODULE NAME      : RCBBIFM_VALIDATE_CUSTNUM                      */ 24990300
 /*                                                                  */ 24990400
 /* DESCRIPTION      : CUSTOMER NUMBER VALIDATION                    */ 24990500
 /*                                                                  */ 24990600
 /********************************************************************/ 24990700
 RCBBIFM_VALIDATE_CUSTNUM: PROC;                                        24991000
                                                                        24991100
  DCL TEMP_CUSTOMER_NBR       CHAR(8) VAR;                              24992000
  DCL LEN_TEMP_CUSTOMER_NBR   FIXED BIN(31);                            24993000
                                                                        24994000
  TEMP_CUSTOMER_NBR = ' ';                                              24995000
  TEMP_CUSTOMER_NBR = TRIM(RCBBIF0_MACH.CUSTOMER_NUMBER,' ',' ');       24996000
  LEN_TEMP_CUSTOMER_NBR   =   LENGTH(TEMP_CUSTOMER_NBR) ;               24997000
                                                                        24998000
   SELECT (LEN_TEMP_CUSTOMER_NBR);                                      24999100
      WHEN (7)                                                          24999200
       RCBBIF0_MACH.CUSTOMER_NUMBER =                                   24999300
                              '0' ||  TEMP_CUSTOMER_NBR;                24999400
      WHEN (6)                                                          24999500
       RCBBIF0_MACH.CUSTOMER_NUMBER =                                   24999600
                             '00' ||  TEMP_CUSTOMER_NBR;                24999700
      OTHERWISE;                                                        25000700
   END;                                                                 25001500
     FILE_RCBBIB0.CUSTOMER_NUMBER = RCBBIF0_MACH.CUSTOMER_NUMBER;       25001600
                                                                        25001700
  END RCBBIFM_VALIDATE_CUSTNUM;                       /* EOC RB01327 */ 25001899
1/********************************************************************/ 25002000
 /*                                                                  */ 25010000
 /* MODULE NAME      : RCBBIFM_FILL_CONTRACT                         */ 25020000
 /*                                                                  */ 25030000
 /* DESCRIPTION      : FILL RECORD FOR RCB CONTRACT FILE             */ 25040000
 /*                                                                  */ 25050000
 /********************************************************************/ 25060000
 RCBBIFM_FILL_CONTRACT: PROC;                                           25070000
                                                                        25080000
 FILE_RCBBIC0                    = '';                                  25090000
 FILE_RCBBIC0.PRODUCT_TYPE       = RCBBIF0_MACH.MACHINE_TYPE;           25100000
 FILE_RCBBIC0.ORIGIN             = WRK_ORIGIN;            /* PTM1158 */ 25110000
 FILE_RCBBIC0.SEQUENCE_NUMBER    = WRK_SEQUENCE_NUMBER;   /* PTM1158 */ 25120000
 FILE_RCBBIC0.COUNTRY_NUMBER     = WRK_CTRYNO;                          25130000
 FILE_RCBBIC0.ACTION_CODE        = 'A';                                 25140000
 FILE_RCBBIC0.HVP_QUANTITY       = 1;                                   25150000
 FILE_RCBBIC0.CONTRACT_NUMBER    = RCBBIF0_MACH.PARTS_NUMBER;           25160000
 FILE_RCBBIC0.EFFECTIVE_DATE     = G_WRK_SERV_START_DATE;               25170000
 FILE_RCBBIC0.END_DATE           = G_WRK_SERV_END_DATE;                 25180000
 FILE_RCBBIC0.SERVICE_TYPE       = RCBBIF0_MACH.SERV_TYPE_CODE;         25190000
 FILE_RCBBIC0.SERVICE_MODULE_1   = PARM.SERVICE_MODULES(1);             25200000
 FILE_RCBBIC0.SERVICE_MODULE_2   = PARM.SERVICE_MODULES(2);             25210000
 FILE_RCBBIC0.SERVICE_MODULE_3   = PARM.SERVICE_MODULES(3);             25220000
 FILE_RCBBIC0.SERVICE_MODULE_4   = PARM.SERVICE_MODULES(4);             25230000
 FILE_RCBBIC0.SERVICE_MODULE_5   = PARM.SERVICE_MODULES(5);             25240000
                                                                        25250000
 /*MONDAY*/                                                             25260000
 FILE_RCBBIC0.MONDAY_COVER_START    =                                   25270000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.MONDAY_COVER_ST );     25280000
 FILE_RCBBIC0.MONDAY_COVER_END      =                                   25290000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.MONDAY_COVER_END );    25300000
 /*TUESDAY*/                                                            25310000
 FILE_RCBBIC0.TUESDAY_COVER_START   =                                   25320000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.TUESDAY_COVER_ST );    25330000
 FILE_RCBBIC0.TUESDAY_COVER_END     =                                   25340000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.TUESDAY_COVER_END );   25350000
 /*WEDNESDAY*/                                                          25360000
 FILE_RCBBIC0.WEDNESDAY_COVER_START =                                   25370000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.WEDNESDAY_COVER_ST );  25380000
 FILE_RCBBIC0.WEDNESDAY_COVER_END   =                                   25390000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.WEDNESDAY_COVER_END ); 25400000
 /*THURSDAY*/                                                           25410000
 FILE_RCBBIC0.THURSDAY_COVER_START  =                                   25420000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.THURSDAY_COVER_ST );   25430000
 FILE_RCBBIC0.THURSDAY_COVER_END    =                                   25440000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.THURSDAY_COVER_END );  25450000
 /*FRIDAY*/                                                             25460000
 FILE_RCBBIC0.FRIDAY_COVER_START    =                                   25470000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.FRIDAY_COVER_ST );     25480000
 FILE_RCBBIC0.FRIDAY_COVER_END      =                                   25490000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.FRIDAY_COVER_END );    25500000
 /*SATURDAY*/                                                           25510000
 FILE_RCBBIC0.SATURDAY_COVER_START  =                                   25520000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.SATURDAY_COVER_ST );   25530000
 FILE_RCBBIC0.SATURDAY_COVER_END    =                                   25540000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.SATURDAY_COVER_END );  25550000
 /*SUNDAY*/                                                             25560000
 FILE_RCBBIC0.SUNDAY_COVER_START    =                                   25570000
              RCBBIFM_HHMM2ISOTIME( RCBBIF0_MACH.SUNDAY_COVER_ST );     25580000
 FILE_RCBBIC0.SUNDAY_COVER_END      =                                   25590000
              RCBBIFM_HHMM2ISOTIME(RCBBIF0_MACH.SUNDAY_COVER_END );     25600000
                                                                        25610000
 FILE_RCBBIC0.SOURCE_INDICATOR   = 'S';                                 25620000
                                                       /* SOC *RC01191*/25630000
 FILE_RCBBIC0.AUTHORISATION_CODE = RCBBIF0_MACH.AUTHORISATION_CODE;     25640000
 IF COUNTRY_AREA.PROC_ID ¬= 'UI33'                    /* SOC RB01327 */ 25641099
 THEN                                                 /* EOC RB01327 */ 25642099
 FILE_RCBBIC0.CUSTOMER_NUMBER    = FILE_RCBBIA0.CUSTOMER_NUMBER;        25650000
                                                      /* SOC RB01327 */ 25651099
                                 /* PROCESS VALID DSW CUSTOMER NUMBER */25651100
 ELSE                                                 /* DSW SOURCE  */ 25651299
 FILE_RCBBIC0.CUSTOMER_NUMBER    = RCBBIF0_MACH.CUSTOMER_NUMBER;        25652000
                                                      /* EOC RB01327 */ 25653099
                                                           /* RB01289 */25660000
                                                                        25670000
 CALL RCBBIFM_RETRIEVE_SLC;               /* RETRIEVE SLC IN RCBV630  */25680000
                                                                        25690000
 IF FOUND                                 /* ROW FOUND WITH VALID SLC */25700000
 THEN DO;                                                               25710000
   SW_COVERAGE_HOURS_FOUND       = FALSE;              /*     PTM1405 */25720000
   FILE_RCBBIC0.SERVICE_LVL_CODE = TB_RCBV630.SERVICE_LVL_CODE;         25730000
                                                       /* SOC PTM1173 */25740000
   IF WRK_DIST = 'SERVICE PAC         '               &                 25750000
      FILE_RCBBIC0.MONDAY_COVER_START    = '00.00.00' &                 25760000
      FILE_RCBBIC0.TUESDAY_COVER_START   = '00.00.00' &                 25770000
      FILE_RCBBIC0.WEDNESDAY_COVER_START = '00.00.00' &                 25780000
      FILE_RCBBIC0.THURSDAY_COVER_START  = '00.00.00' &                 25790000
      FILE_RCBBIC0.FRIDAY_COVER_START    = '00.00.00' &                 25800000
      FILE_RCBBIC0.SATURDAY_COVER_START  = '00.00.00' &                 25810000
      FILE_RCBBIC0.SUNDAY_COVER_START    = '00.00.00' &                 25820000
      FILE_RCBBIC0.MONDAY_COVER_END      = '00.00.00' &                 25830000
      FILE_RCBBIC0.TUESDAY_COVER_END     = '00.00.00' &                 25840000
      FILE_RCBBIC0.WEDNESDAY_COVER_END   = '00.00.00' &                 25850000
      FILE_RCBBIC0.THURSDAY_COVER_END    = '00.00.00' &                 25860000
      FILE_RCBBIC0.FRIDAY_COVER_END      = '00.00.00' &                 25870000
      FILE_RCBBIC0.SATURDAY_COVER_END    = '00.00.00' &                 25880000
      FILE_RCBBIC0.SUNDAY_COVER_END      = '00.00.00'                   25890000
   THEN DO;                                                             25900000
     CALL RCBBIFM_RETRIEVE_RCBV0470;                                    25910000
     IF SW_COVERAGE_HOURS_FOUND                                         25920000
     THEN DO;                                                           25930000
       FILE_RCBBIC0.MONDAY_COVER_START    = TB_RCBV470.COVERAGE_START_1;25940000
       FILE_RCBBIC0.TUESDAY_COVER_START   = TB_RCBV470.COVERAGE_START_2;25950000
       FILE_RCBBIC0.WEDNESDAY_COVER_START = TB_RCBV470.COVERAGE_START_3;25960000
       FILE_RCBBIC0.THURSDAY_COVER_START  = TB_RCBV470.COVERAGE_START_4;25970000
       FILE_RCBBIC0.FRIDAY_COVER_START    = TB_RCBV470.COVERAGE_START_5;25980000
       FILE_RCBBIC0.SATURDAY_COVER_START  = TB_RCBV470.COVERAGE_START_6;25990000
       FILE_RCBBIC0.SUNDAY_COVER_START    = TB_RCBV470.COVERAGE_START_7;26000000
       FILE_RCBBIC0.MONDAY_COVER_END      = TB_RCBV470.COVERAGE_END_1;  26010000
       FILE_RCBBIC0.TUESDAY_COVER_END     = TB_RCBV470.COVERAGE_END_2;  26020000
       FILE_RCBBIC0.WEDNESDAY_COVER_END   = TB_RCBV470.COVERAGE_END_3;  26030000
       FILE_RCBBIC0.THURSDAY_COVER_END    = TB_RCBV470.COVERAGE_END_4;  26040000
       FILE_RCBBIC0.FRIDAY_COVER_END      = TB_RCBV470.COVERAGE_END_5;  26050000
       FILE_RCBBIC0.SATURDAY_COVER_END    = TB_RCBV470.COVERAGE_END_6;  26060000
       FILE_RCBBIC0.SUNDAY_COVER_END      = TB_RCBV470.COVERAGE_END_7;  26070000
     END;                                                               26080000
   END;                                                /* EOC PTM1173 */26090000
                                                       /* SOC RC01234 */26100000
   IF FILE_RCBBIC0.SERVICE_TYPE = ''                                    26110000
   THEN DO;                                                             26120000
     IF ¬SW_COVERAGE_HOURS_FOUND THEN                                   26130000
       CALL RCBBIFM_RETRIEVE_RCBV0470;                                  26140000
     IF SW_COVERAGE_HOURS_FOUND                                         26150000
     THEN DO;                                                           26160000
       CALL RCBBIFM_RETRIEVE_RCBV0640;                                  26170000
       IF SW_640_FOUND = TRUE                     /*     SOC PTM1411 */ 26180000
       THEN                                                             26190000
         FILE_RCBBIC0.SERVICE_TYPE = TB_RCBV640.SERVICE_TYPE;           26200000
       ELSE DO;                                                         26210000
         WRK_COD_8 = 'SD';                        /* SDM MSG CODE    */ 26220000
         WRK_VAL_8 = TB_RCBV470.SERVICE_DLVR_METHD; /* SDM MSG VALUE */ 26230000
         CALL RCBBIFM_MSG('0231');                /* SDM NOT FOUND   */ 26240000
         RECORD_CORRECT = FALSE;                  /* RECORD NOT OK   */ 26250000
         CALL RCBBIFM_MSG('0033');                /* RECORD REJECTED */ 26260000
         G_CNTS.CNT.RCBBIF0_ACCEPT = G_CNTS.CNT.RCBBIF0_ACCEPT - 1;     26270000
       END;                                       /*     EOC PTM1411 */ 26280000
     END;                                                               26290000
   END;                                               /* EOC RC01234 */ 26300000
 END;                                                 /* EOC *RC01191*/ 26310000
 ELSE DO;                                         /*     SOC PTM1411 */ 26320000
   IF FILE_RCBBIC0.SERVICE_TYPE = ''                                    26330000
   THEN DO;                                                             26340000
     WRK_COD_8 = 'ST';                            /* ST MSG CODE     */ 26350000
     WRK_VAL_8 = 'BLANK, NOT ACCEPTED';           /* ST MSG VALUE    */ 26360000
     CALL RCBBIFM_MSG('0231');                    /* ST NOT CORRECT  */ 26370000
     RECORD_CORRECT = FALSE;                      /* RECORD NOT OK   */ 26380000
     CALL RCBBIFM_MSG('0033');                    /* RECORD REJECTED */ 26390000
     G_CNTS.CNT.RCBBIF0_ACCEPT = G_CNTS.CNT.RCBBIF0_ACCEPT - 1;         26400000
   END;                                                                 26410000
 END;                                             /*     EOC PTM1411 */ 26420000
                                                                        26430000
 END RCBBIFM_FILL_CONTRACT;                                             26440000
1/********************************************************************/ 26450000
 /*                                                                  */ 26460000
 /* MODULE NAME      : RCBBIFM_HANDLE_RCB023M                        */ 26470000
 /*                                                                  */ 26480000
 /* DESCRIPTION      :                                               */ 26490000
 /*                                                                  */ 26500000
 /* DETERMINE WARRANTY CONDITIONS VIA PROGRAM RCB023M. IF NO         */ 26510000
 /* SPECIFIC WARRANTY CONDITIONS CAN BE DETERMINED, THE DEFAULT      */ 26520000
 /* WARRANTY CONDITIONS OUT OF THE PARAMETER FILE RCBBIFR REMAIN     */ 26530000
 /* VALID, OTHERWISE THEY WILL BE OVERWRITTEN.               *RC01191*/ 26540000
 /********************************************************************/ 26550000
 RCBBIFM_HANDLE_RCB023M: PROC;                                          26560000
                               /* DETERMINE SPECIFIC WARR. CONDITIONS */26570000
 PARM_RCBZ32S                         = '';                             26580000
 PARM_RCBZ32S.INAREA.COUNTRY_NUMBER   = FILE_RCBBIB0.COUNTRY_NUMBER;    26590000
 PARM_RCBZ32S.INAREA.PRODUCT_TYPE     = FILE_RCBBIB0.PRODUCT_TYPE;      26600000
 PARM_RCBZ32S.INAREA.MODEL            = FILE_RCBBIB0.MODEL_NUMBER;      26610000
 PARM_RCBZ32S.INAREA.EFFECTIVE_DATE   = FILE_RCBBIB0.INSTALL_DATE;      26620000
                                                       /* SOC *PTM1127*/26630000
 PARM_RCBZ32S.INOUT.END_DATE          = FILE_RCBBIB0.WARRANTY_EXP_DATE; 26640000
                                                       /* EOC *PTM1127*/26650000
 PARM_RCBZ32S.INOUT.TYPE_OF_WARRANTY  = FILE_RCBBIB0.TYPE_OF_WARRANTY;  26660000
                                                                        26670000
 CALL RCB023M (ADDR(PARM_RCBZ32S),PTR_INT_AREA);                        26680000
                                                                        26690000
 SELECT;                                                                26700000
   WHEN(PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_1 ¬= HIGH(3) &            26710000
        PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_2 ¬= HIGH(3))             26720000
   DO;                     /* BOTH SERVICE LEVEL CODES ARE DETERMINED */26730000
     FILE_RCBBIB0.WARRANTY_EXP_DATE  = PARM_RCBZ32S.OUTAREA.END_DATE_2; 26740000
     FILE_RCBBIB0.TYPE_OF_WARRANTY   =                                  26750000
                           PARM_RCBZ32S.INOUT.TYPE_OF_WARRANTY;         26760000
     FILE_RCBBIB0.SERVICE_LVL_CODE_1 =                                  26770000
                           PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_1;     26780000
     FILE_RCBBIB0.WARRANTY_SPLT_DATE =                                  26790000
                           PARM_RCBZ32S.OUTAREA.START_DATE_2;           26800000
     FILE_RCBBIB0.SERVICE_LVL_CODE_2 =                                  26810000
                           PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_2;     26820000
   END;                                                                 26830000
   WHEN(PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_1 ¬= HIGH(3))             26840000
   DO;                     /* ONLY SERVICE LEVEL CODE 1 IS DETERMINED */26850000
     FILE_RCBBIB0.WARRANTY_EXP_DATE  = PARM_RCBZ32S.OUTAREA.END_DATE_1; 26860000
     FILE_RCBBIB0.TYPE_OF_WARRANTY   =                                  26870000
                           PARM_RCBZ32S.INOUT.TYPE_OF_WARRANTY;         26880000
     FILE_RCBBIB0.SERVICE_LVL_CODE_1 =                                  26890000
                           PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_1;     26900000
   END;                                                                 26910000
   WHEN(PARM_RCBZ32S.INOUT.TYPE_OF_WARRANTY > '')                       26920000
   DO;                     /* ONLY TYPE OF WARRANTY IS DETERMINED     */26930000
     FILE_RCBBIB0.WARRANTY_EXP_DATE  = PARM_RCBZ32S.OUTAREA.END_DATE_1; 26940000
     FILE_RCBBIB0.TYPE_OF_WARRANTY   =                                  26950000
                           PARM_RCBZ32S.INOUT.TYPE_OF_WARRANTY;         26960000
   END;                                                                 26970000
   OTHERWISE;            /* DEFAULT FROM PARAMETER FILE REMAINS VALID */26980000
 END;                                                                   26990000
 /************THIS CHANGE IS A PART OF PCR-051*************************/26990100
                                                       /* SOC RB01312 */26990200
 IF T051_FND = '1'B THEN DO;                                            26990300
                                                                        26990400
 TB_RCBV400           = '';                                             26990500
 TB_RCBV400_I         = '';                                             26990600
                                                                        26990700
   EXEC SQL                                                             26990800
    SELECT WARRANTY_DURATN_1                                            26990900
     INTO :TB_RCBV400.WARRANTY_DURATN_1                                 26991000
          :WRK_INDNULL                                                  26991100
     FROM RCBV0400_PO_MOD1                                              26991200
     WHERE COUNTRY_NUMBER = :WRK_CTRYNO                                 26991300
     AND PRODUCT_TYPE     = :WRK_PRODUCT_TYPE                           26991400
     AND MODEL_NUMBER     = :WRK_MODEL;                                 26991500
   SELECT(SQLCODE);                                                     26991600
    WHEN(0)                                                             26991700
    DO;                                                                 26991800
                                                 /* SOC CEDS00000779 */ 26991999
     /* IF ((TB_RCBV400.WARRANTY_DURATN_1 > '0') */                     26992099
     /*          & (WRK_INDNULL ¬= '-1'))  THEN  */                     26992199
        IF ((TB_RCBV400.WARRANTY_DURATN_1 >  0 )                        26992299
                 & (WRK_INDNULL ¬=  -1 ))  THEN                         26992399
                                                 /* EOC CEDS00000779 */ 26992499
          DO;                                                           26992599
           SELECT;                                                      26992699
            WHEN(PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_1 ¬= HIGH(3) &   26992799
                PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_2 ¬= HIGH(3))     26992899
            DO;                                                         26992999
            FILE_RCBBIB0.WARRANTY_EXP_DATE  =                           26993000
                                   PARM_RCBZ32S.OUTAREA.END_DATE_2;     26993100
            END;                                                        26993200
            WHEN(PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_1 ¬= HIGH(3))    26993300
            DO;                                                         26993400
            FILE_RCBBIB0.WARRANTY_EXP_DATE  =                           26993500
                                   PARM_RCBZ32S.OUTAREA.END_DATE_1;     26993600
            END;                                                        26993700
            OTHERWISE;                                /* CEDS00000779 */26993899
           END;                                                         26993900
          END;                                                          26994000
        ELSE DO;                                                        26994100
          FILE_RCBBIB0.WARRANTY_EXP_DATE = RCB051S.WARRANTY_EXP_DATE;   26994200
          CALL RCBBIFM_MSG('0266');                                     26994300
        END;                                                            26994400
    END;                                                                26994500
    WHEN(100);                                                          26994600
    OTHERWISE                                                           26994700
    DO;                                                                 26994800
       CALL RCBBIFM_ERROR (ADDR (SQLCA),                                26994900
                          'DB2',                                        26995000
                          '#031');                                      26995100
    END;                                                                26995200
   END;                                                                 26995300
                                                                        26995400
   IF (RCB051S.WARRANTY_LIABILITY = 'LEN') THEN                         26995500
    DO;                                                                 26995600
     FILE_RCBBIB0.WARRANTY_EXP_DATE = RCB051S.WARRANTY_EXP_DATE;        26995700
    END;                                                                26995900
 END;                                                  /* EOC RB01312 */26996000
                                                                        26997600
 IF PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_C ¬= HIGH(3)                  27000000
 THEN                                                                   27010000
   FILE_RCBBIB0.SERVICE_LVL_CODE_C =                                    27020000
                         PARM_RCBZ32S.OUTAREA.SERVICE_LVL_CODE_C;       27030000
                                                                        27040000
 END RCBBIFM_HANDLE_RCB023M;                                            27050000
1/********************************************************************/ 27060000
 /*                                                                  */ 27070000
 /* MODULE NAME      : RCBBIFM_XVALID_TIME                           */ 27080000
 /*                                                                  */ 27090000
 /* DESCRIPTION      : VALIDATE TIME-FIELD IN FORMAT HHMM            */ 27100000
 /*                    EXTENDED WITH MESSAGE REPORT                  */ 27110000
 /* RETURN           : BOOLEAN TRUE/FALSE                            */ 27120000
 /*                                                                  */ 27130000
 /********************************************************************/ 27140000
 RCBBIFM_XVALID_TIME: PROC(A_TIME, A_TIME_NAME) RETURNS(BIT(1));        27150000
                                                                        27160000
 DCL A_TIME               CHAR(04);                                     27170000
 DCL A_TIME_NAME          CHAR(25);                                     27180000
 DCL L_RET                BIT(1);                                       27190000
 DCL 1 L_TIME             BASED(ADDR(A_TIME)),                          27200000
     3 HOUR               CHAR(02),                                     27210000
     3 MINUTE             CHAR(02);                                     27220000
                                                                        27230000
 IF ( ( ( L_TIME.HOUR   >= '00') & (L_TIME.HOUR   <= '23') &            27240000
        ( L_TIME.MINUTE >= '00') & (L_TIME.MINUTE <= '59') ) |          27250000
      ( A_TIME = '2400' ) )                                             27260000
 THEN                                                                   27270000
   DO;                                                                  27280000
     /*TIME FORMAT IS OK        */                                      27290000
     L_RET = TRUE;                                                      27300000
   END;                                                                 27310000
 ELSE                                                                   27320000
   DO;                                                                  27330000
     L_RET = FALSE;                                                     27340000
     G_WRKMSG.TXTFIELD_1 = A_TIME;                                      27350000
     G_WRKMSG.TXTFIELD_2 = A_TIME_NAME;                                 27360000
     CALL RCBBIFM_MSG('0024');                                          27370000
   END;                                                                 27380000
                                                                        27390000
 RETURN (L_RET);                                                        27400000
 END RCBBIFM_XVALID_TIME;                                               27410000
1/********************************************************************/ 27420000
 /*                                                                  */ 27430000
 /* MODULE NAME      : RCBBIFM_HHMM2ISOTIME                          */ 27440000
 /*                                                                  */ 27450000
 /* DESCRIPTION      : CONVERT A TIMESTRING HHMM TO ISO FORMAT       */ 27460000
 /*                    HH.MM.SS (SECONDS ARE ZERO)                   */ 27470000
 /* ARGUMENT         : CHAR(4) TIME_IN  'HHMM'                       */ 27480000
 /* RETURNS          : CHAR(8) ISOTIME  'HH.MM.00'                   */ 27490000
 /*                                                                  */ 27500000
 /********************************************************************/ 27510000
 RCBBIFM_HHMM2ISOTIME: PROC(A_TIME_HHMM) RETURNS(CHAR(8));              27520000
 DCL A_TIME_HHMM CHAR(4);                                               27530000
 DCL 1 L_TIME    BASED(ADDR(A_TIME_HHMM)),                              27540000
     3 HOUR      CHAR(02),                                              27550000
     3 MINUTE    CHAR(02);                                              27560000
                                                                        27570000
 RETURN ( L_TIME.HOUR   || '.' ||                                       27580000
          L_TIME.MINUTE || '.00' );                                     27590000
 END RCBBIFM_HHMM2ISOTIME;                                              27600000
1/********************************************************************/ 27610000
 /*                                                                  */ 27620000
 /* MODULE NAME      : RCBBIFM_WRITE_CUSTOMER                        */ 27630000
 /*                                                                  */ 27640000
 /* DESCRIPTION      : FILL AND WRITE RECORD FOR RCB CUSTOMER FILE   */ 27650000
 /*                                                                  */ 27660000
 /********************************************************************/ 27670000
 RCBBIFM_WRITE_CUSTOMER: PROC;                                          27680000
                                                                        27690000
 WRITE FILE(RCBBIA0) FROM (FILE_RCBBIA0);                               27700000
 G_CNTS.CNT.RCBBIA0_WRITE = G_CNTS.CNT.RCBBIA0_WRITE + 1;               27710000
                                                                        27720000
 END RCBBIFM_WRITE_CUSTOMER;                                            27730000
1/********************************************************************/ 27740000
 /*                                                                  */ 27750000
 /* MODULE NAME      : RCBBIFM_WRITE_INVENTORY                       */ 27760000
 /*                                                                  */ 27770000
 /* DESCRIPTION      : FILL AND WRITE RECORD FOR RCB INVENTORY FILE  */ 27780000
 /*                                                                  */ 27790000
 /********************************************************************/ 27800000
 RCBBIFM_WRITE_INVENTORY: PROC;                                         27810000
                                                                        27820000
 WRITE FILE(RCBBIB0) FROM (FILE_RCBBIB0);                               27830000
 G_CNTS.CNT.RCBBIB0_WRITE = G_CNTS.CNT.RCBBIB0_WRITE + 1;               27840000
                                                                        27850000
 END RCBBIFM_WRITE_INVENTORY;                                           27860000
1/********************************************************************/ 27870000
 /*                                                                  */ 27880000
 /* MODULE NAME      : RCBBIFM_WRITE_CONTRACT                        */ 27890000
 /*                                                                  */ 27900000
 /* DESCRIPTION      : FILL AND WRITE RECORD FOR RCB CONTRACT FILE   */ 27910000
 /*                                                                  */ 27920000
 /********************************************************************/ 27930000
 RCBBIFM_WRITE_CONTRACT: PROC;                                          27940000
                                                                        27950000
 WRITE FILE(RCBBIC0) FROM (FILE_RCBBIC0);                               27960000
 G_CNTS.CNT.RCBBIC0_WRITE = G_CNTS.CNT.RCBBIC0_WRITE + 1;               27970000
                                                                        27980000
 END RCBBIFM_WRITE_CONTRACT;                                            27990000
1/********************************************************************/ 28000000
 /*                                                                  */ 28010000
 /* MODULE NAME      : RCBBIFM_SKIP_RECORD                           */ 28020000
 /*                                                                  */ 28030000
 /* DESCRIPTION      : SKIP RECORD FOR NON-PROCESSED COUNTRY         */ 28040000
 /*                                                                  */ 28050000
 /********************************************************************/ 28060000
 RCBBIFM_SKIP_RECORD: PROC;                                             28070000
                                                                        28080000
 G_CNTS.CNT.RCBBIF0_SKIP = G_CNTS.CNT.RCBBIF0_SKIP + 1;                 28090000
                                                                        28100000
 END RCBBIFM_SKIP_RECORD;                                               28110000
1/********************************************************************/ 28120000
 /*                                                                  */ 28130000
 /* MODULE NAME      : RCBBIFM_REJECT_CUST                           */ 28140000
 /*                                                                  */ 28150000
 /* DESCRIPTION      : WRITE CUST.RECORD TO REJECTED RECORDS FILE    */ 28160000
 /*                    WHEN RECORD SEQUENCE IS NOT CORRECT           */ 28170000
 /*                                                                  */ 28180000
 /********************************************************************/ 28190000
 RCBBIFM_REJECT_CUST: PROC;                                             28200000
                                                                        28210000
 WRITE FILE(RCBBIF1) FROM (G_SAVE_CUST_REC);                            28220000
 G_CNTS.CNT.RCBBIF0_REJECT = G_CNTS.CNT.RCBBIF0_REJECT + 1;             28230000
                                                                        28240000
 %IF ( RCBBIFM_DEBUG = 'Y' ) %THEN %DO;                                 28250000
   PUT SKIP LIST( '#DBG# '||'REJECT_CUST:'|| G_SAVE_CUST_REC );         28260000
 %END;                                                                  28270000
                                                                        28280000
 END RCBBIFM_REJECT_CUST;                                               28290000
1/********************************************************************/ 28300000
 /*                                                                  */ 28310000
 /* MODULE NAME      : RCBBIFM_REJECT_RECORD                         */ 28320000
 /*                                                                  */ 28330000
 /* DESCRIPTION      : WRITE INPUTRECORD TO REJECTED RECORDS FILE    */ 28340000
 /*                    WHEN VALIDATION IS NOT COMPLETELY CORRECT     */ 28350000
 /*                                                                  */ 28360000
 /********************************************************************/ 28370000
 RCBBIFM_REJECT_RECORD: PROC;                                           28380000
                                                                        28390000
 WRITE FILE(RCBBIF1) FROM (FILE_RCBBIF0);                               28400000
 G_CNTS.CNT.RCBBIF0_REJECT = G_CNTS.CNT.RCBBIF0_REJECT + 1;             28410000
                                                                        28420000
 %IF ( RCBBIFM_DEBUG = 'Y' ) %THEN %DO;                                 28430000
   PUT SKIP LIST( '#DBG# '||'REJECT_REC.:'|| RCBBIFM_GET_KEYSPEC() );   28440000
 %END;                                                                  28450000
                                                                        28460000
 END RCBBIFM_REJECT_RECORD;                                             28470000
1/********************************************************************/ 28480000
 /*                                                                  */ 28490000
 /* MODULE NAME      : RCBBIFM_PROCES_TRAILER                        */ 28500000
 /*                                                                  */ 28510000
 /* DESCRIPTION      : SKIP TRAILER RECORD.                          */ 28520000
 /*                                                                  */ 28530000
 /********************************************************************/ 28540000
 RCBBIFM_PROCES_TRAILER: PROC;                                          28550000
                                                                        28560000
 G_CNTS.TOT.RCBBIF0_READ   = G_CNTS.TOT.RCBBIF0_READ   + 1;             28570000
 G_CNTS.TOT.RCBBIF0_ACCEPT = G_CNTS.TOT.RCBBIF0_ACCEPT + 1;             28580000
 G_CNTS.TRAILER_SEQ        = G_CNTS.TOT.RCBBIF0_READ;                   28590000
 IF COUNTRY_AREA.PROC_ID   = 'UI23' THEN               /* SOC RA01236 */28600000
   G_CNTS.COMPARE_TOTAL    = RCBBIF0_CISCO_TRAIL.TOTAL_COUNT;           28610000
 ELSE                                                                   28620000
   G_CNTS.COMPARE_TOTAL    = RCBBIF0_TRAIL.TOTAL_COUNT;/* EOC RA01236 */28630000
                                                                        28640000
 CALL RCBBIFM_READ_RECORD;                   /* READ TO REACH EOF    */ 28650000
 IF (¬ EOF_RCBBIF0)                          /* RECORD AFTER TRAILER */ 28660000
 THEN                                                                   28670000
   DO;                                                                  28680000
     CALL RCBBIFM_MSG('0015');                                          28690000
     CALL RCBBIFM_ERROR (NULL, 'OTHER', '#021');              /*ABORT*/ 28700000
   END;                                                                 28710000
                                                                        28720000
 END RCBBIFM_PROCES_TRAILER;                                            28730000
1/********************************************************************/ 28740000
 /*                                                                  */ 28750000
 /* MODULE NAME      : RCBBIFM_CONTROL_COUNTERS                      */ 28760000
 /*                                                                  */ 28770000
 /* DESCRIPTION      : VALIDATE PROCES CONTROL COUNTERS              */ 28780000
 /*                                                                  */ 28790000
 /********************************************************************/ 28800000
 RCBBIFM_CONTROL_COUNTERS: PROC;                                        28810000
                                 /************************************/ 28820000
                                 /* VERIFY COUNTERS                  */ 28830000
                                 /************************************/ 28840000
 IF (G_CNTS.TRAILER_SEQ = 0)                 /* NO TRAILER RECORD    */ 28850000
 THEN                                                                   28860000
   DO;                                                                  28870000
     CALL RCBBIFM_MSG('0017');                                          28880000
     CALL RCBBIFM_ERROR (NULL, 'OTHER', '#022');              /*ABORT*/ 28890000
   END;                                                                 28900000
                                             /* CHECK RECORDCOUNT    */ 28910000
 IF (G_CNTS.COMPARE_TOTAL ¬= G_CNTS.TOT.RCBBIF0_READ)                   28920000
 THEN                                                                   28930000
   DO;                                                                  28940000
     CALL RCBBIFM_MSG('0007');                                          28950000
     CALL RCBBIFM_ERROR (NULL, 'OTHER', '#023');              /*ABORT*/ 28960000
   END;                                                                 28970000
                                                                        28980000
 END RCBBIFM_CONTROL_COUNTERS;                                          28990000
1/********************************************************************/ 29000000
 /*                                                       SOC RB01278*/ 29010000
 /* MODULE NAME      : RCBBIFM_PROD_REVENUE_DIV                      */ 29020000
 /*                                                                  */ 29030000
 /* DESCRIPTION      : RETRIVE PRODUCT REVENUE DIVISION FROM TABLE   */ 29040000
 /*                    400                                           */ 29050000
 /********************************************************************/ 29060000
 RCBBIFM_PROD_REVENUE_DIV: PROC;                                        29070000
                                                                        29080000
 TB_RCBV400           = '';                                             29090000
 TB_RCBV400_I         = '';                                             29100000
                                                                        29110000
 EXEC SQL                                                               29120000
   SELECT PROD_REVENUE_DIV                                              29130000
   INTO   :TB_RCBV400.PROD_REVENUE_DIV                                  29140000
          :WRK_INDNULL                                                  29150000
   FROM   RCBV0400_PO_MOD1 T400                                         29160000
   WHERE  T400.COUNTRY_NUMBER   = :WRK_CTRYNO                           29170000
   AND    T400.PRODUCT_TYPE     = :WRK_PRODUCT_TYPE                     29180000
   AND    T400.MODEL_NUMBER     = :WRK_MODEL                            29190000
   AND    :WRK_RUN_DATE BETWEEN                                         29200000
          T400.EFFECTIVE_DATE  AND T400.END_DATE;                       29210000
 SELECT(SQLCODE);                                                       29220000
   WHEN(0)                                                              29230000
     DO;                                                                29240000
     END;                                                               29250000
   WHEN(100)                                                            29260000
     DO;                                                                29270000
      EXEC SQL                                                          29280000
        SELECT PROD_REVENUE_DIV                                         29290000
        INTO :TB_RCBV400.PROD_REVENUE_DIV                               29300000
             :WRK_INDNULL                                               29310000
        FROM       RCBV0400_PO_MOD1 T400                                29320000
        WHERE T400.COUNTRY_NUMBER        = :WRK_CTRYNO                  29330000
        AND        T400.PRODUCT_TYPE     = :WRK_PRODUCT_TYPE            29340000
        AND        T400.MODEL_NUMBER     = ''                           29350000
        AND        :WRK_RUN_DATE BETWEEN                                29360000
               T400.EFFECTIVE_DATE AND T400.END_DATE;                   29370000
      SELECT(SQLCODE);                                                  29380000
        WHEN(0);                                                        29390000
        WHEN(100);                                                      29400000
        OTHERWISE                                                       29410000
          DO;                                                           29420000
            CALL RCBBIFM_ERROR (ADDR (SQLCA),                           29430000
                                'DB2',                                  29440000
                                '#025');                                29450000
          END;                                                          29460000
      END;                                                              29470000
     END;                                                               29480000
   OTHERWISE                                                            29490000
     DO;                                                                29500000
       CALL RCBBIFM_ERROR (ADDR (SQLCA),                                29510000
                           'DB2',                                       29520000
                           '#026');                                     29530000
     END;                                                               29540000
 END;                                                                   29550000
                                                                        29560000
                                                                        29570000
 END RCBBIFM_PROD_REVENUE_DIV;                        /* EOC RB01278 */ 29580000
 /********************************************************************/ 29590000
 /*                                                   /* SOC RB01281 */ 29600000
 /* MODULE NAME      : RCBBIFM_RETRIEVE_FLEXIBLE                     */ 29610000
 /*                                                                  */ 29620000
 /* DESCRIPTION      : RETRIEVE THE FLEXIBLE RECORD                  */ 29630000
 /*                                                                  */ 29640000
 /********************************************************************/ 29650000
 RCBBIFM_RETRIEVE_FLEXIBLE: PROC;                                       29660000
                                                                        29670000
 TB_RCBV400           = '';                                             29680000
 TB_RCBV400_I         = '';                                             29690000
                                                                        29700000
 WRK_RULE             = '';                            /* SOC RB01298 */29710000
                                                                        29720000
 /* EXEC SQL                                                            29730000
   SELECT T690.COUNTRY_NUMBER,                                          29740000
          T690.PRODUCT_TYPE,                                            29750000
          T690.MODEL_NUMBER,                                            29760000
          T690.BRAND_WARRANTY_MNT,                                      29770000
          T690.SERVICE_LVL_CODE,                                        29780000
          T690.EFFECTIVE_DATE,                                          29790000
          T690.END_DATE,                                                29800000
          T690.LAST_CHANGE_DATE                                         29810000
   INTO   :TB_RCBV690                                                   29820000
          :TB_RCBV690_I.INDNULL                                         29830000
   FROM   RCBV0400_PO_MOD1   T400,                                      29840000
          RCBV0690_FLEX_WARR T690                                       29850000
   WHERE  T400.COUNTRY_NUMBER   = :WRK_CTRYNO                           29860000
   AND    T400.PRODUCT_TYPE     = :WRK_PRODUCT_TYPE                     29870000
   AND    T400.MODEL_NUMBER     = :WRK_MODEL                            29880000
   AND    T690.COUNTRY_NUMBER   = T400.COUNTRY_NUMBER                   29890000
   AND    T690.PRODUCT_TYPE     = T400.PRODUCT_TYPE                     29900000
   AND    T690.MODEL_NUMBER     = T400.MODEL_NUMBER                     29910000
   AND    (:G_WRK_INSTALL_DATE BETWEEN                                  29920000
          T690.EFFECTIVE_DATE  AND T690.END_DATE)                       29930000
   AND    (:RUN_DATE_AREA.RUN_DATE BETWEEN                              29940000
          T400.EFFECTIVE_DATE  AND T400.END_DATE);                      29950000
                                                                        29960000
 SELECT (SQLCODE);                                                      29970000
   WHEN (0)                                                             29980000
         SWITCH_FLEXIBLE_WARRANTY = TRUE;                               29990000
   WHEN (100)                                                           30000000
   DO;                                                                  30010000
 EXEC SQL                                                               30020000
   SELECT T690.COUNTRY_NUMBER,                                          30030000
          T690.PRODUCT_TYPE,                                            30040000
          T690.MODEL_NUMBER,                                            30050000
          T690.BRAND_WARRANTY_MNT,                                      30060000
          T690.SERVICE_LVL_CODE,                                        30070000
          T690.EFFECTIVE_DATE,                                          30080000
          T690.END_DATE,                                                30090000
          T690.LAST_CHANGE_DATE                                         30100000
   INTO   :TB_RCBV690                                                   30110000
          :TB_RCBV690_I.INDNULL                                         30120000
   FROM   RCBV0400_PO_MOD1   T400,                                      30130000
          RCBV0690_FLEX_WARR T690                                       30140000
   WHERE  T400.COUNTRY_NUMBER   = :WRK_CTRYNO                           30150000
   AND    T400.PRODUCT_TYPE     = :WRK_PRODUCT_TYPE                     30160000
   AND    T400.MODEL_NUMBER     = ''                                    30170000
   AND    T690.COUNTRY_NUMBER   = T400.COUNTRY_NUMBER                   30180000
   AND    T690.PRODUCT_TYPE     = T400.PRODUCT_TYPE                     30190000
   AND    T690.MODEL_NUMBER     = '***'                                 30200000
   AND    (:G_WRK_INSTALL_DATE BETWEEN                                  30210000
          T690.EFFECTIVE_DATE  AND T690.END_DATE)                       30220000
   AND    (:RUN_DATE_AREA.RUN_DATE BETWEEN                              30230000
          T400.EFFECTIVE_DATE  AND T400.END_DATE);                      30240000
   END;                                                                 30250000
   OTHERWISE                                                            30260000
       DO;                                                              30270000
         CALL RCBBIFM_ERROR (ADDR (SQLCA),'DB2','#094');                30280000
       END;                                                             30290000
   END;                                                                 30300000
                                                                        30310000
 SELECT (SQLCODE);                                                      30320000
   WHEN (0)                                                             30330000
         SWITCH_FLEXIBLE_WARRANTY = TRUE;                               30340000
   WHEN (100)                                                           30350000
   DO;                                                                  30360000
 EXEC SQL                                                               30370000
   SELECT T690.COUNTRY_NUMBER,                                          30380000
          T690.PRODUCT_TYPE,                                            30390000
          T690.MODEL_NUMBER,                                            30400000
          T690.BRAND_WARRANTY_MNT,                                      30410000
          T690.SERVICE_LVL_CODE,                                        30420000
          T690.EFFECTIVE_DATE,                                          30430000
          T690.END_DATE,                                                30440000
          T690.LAST_CHANGE_DATE                                         30450000
   INTO   :TB_RCBV690                                                   30460000
          :TB_RCBV690_I.INDNULL                                         30470000
   FROM   RCBV0400_PO_MOD1   T400,                                      30480000
          RCBV0690_FLEX_WARR T690                                       30490000
   WHERE  T400.COUNTRY_NUMBER   = :WRK_CTRYNO                           30500000
   AND    T400.PRODUCT_TYPE     = :WRK_PRODUCT_TYPE                     30510000
   AND    T400.MODEL_NUMBER     = :WRK_MODEL                            30520000
   AND    T690.COUNTRY_NUMBER   = '***'                                 30530000
   AND    T690.PRODUCT_TYPE     = T400.PRODUCT_TYPE                     30540000
   AND    T690.MODEL_NUMBER     = T400.MODEL_NUMBER                     30550000
   AND    (:G_WRK_INSTALL_DATE BETWEEN                                  30560000
          T690.EFFECTIVE_DATE  AND T690.END_DATE)                       30570000
   AND    (:RUN_DATE_AREA.RUN_DATE BETWEEN                              30580000
          T400.EFFECTIVE_DATE  AND T400.END_DATE);                      30590000
   END;                                                                 30600000
   OTHERWISE                                                            30610000
       DO;                                                              30620000
         CALL RCBBIFM_ERROR (ADDR (SQLCA),'DB2','#093');                30630000
       END;                                                             30640000
   END;                                                                 30650000
                                                                        30660000
 SELECT (SQLCODE);                                                      30670000
   WHEN (0)                                                             30680000
         SWITCH_FLEXIBLE_WARRANTY = TRUE;                               30690000
   WHEN (100)                                                           30700000
   DO;                                                                  30710000
 EXEC SQL                                                               30720000
   SELECT T690.COUNTRY_NUMBER,                                          30730000
          T690.PRODUCT_TYPE,                                            30740000
          T690.MODEL_NUMBER,                                            30750000
          T690.BRAND_WARRANTY_MNT,                                      30760000
          T690.SERVICE_LVL_CODE,                                        30770000
          T690.EFFECTIVE_DATE,                                          30780000
          T690.END_DATE,                                                30790000
          T690.LAST_CHANGE_DATE                                         30800000
   INTO   :TB_RCBV690                                                   30810000
          :TB_RCBV690_I.INDNULL                                         30820000
   FROM   RCBV0400_PO_MOD1   T400,                                      30830000
          RCBV0690_FLEX_WARR T690                                       30840000
   WHERE  T400.COUNTRY_NUMBER   = :WRK_CTRYNO                           30850000
   AND    T400.PRODUCT_TYPE     = :WRK_PRODUCT_TYPE                     30860000
   AND    T400.MODEL_NUMBER     = ''                                    30870000
   AND    T690.COUNTRY_NUMBER   = '***'                                 30880000
   AND    T690.PRODUCT_TYPE     = T400.PRODUCT_TYPE                     30890000
   AND    T690.MODEL_NUMBER     = '***'                                 30900000
   AND    (:G_WRK_INSTALL_DATE BETWEEN                                  30910000
          T690.EFFECTIVE_DATE  AND T690.END_DATE)                       30920000
   AND    (:RUN_DATE_AREA.RUN_DATE BETWEEN                              30930000
          T400.EFFECTIVE_DATE  AND T400.END_DATE);                      30940000
   END;                                                                 30950000
   OTHERWISE                                                            30960000
       DO;                                                              30970000
         CALL RCBBIFM_ERROR (ADDR (SQLCA),'DB2','#092');                30980000
       END;                                                             30990000
   END;                                                                 31000000
  SELECT (SQLCODE);                                                     31010000
    WHEN (0)                                                            31020000
          SWITCH_FLEXIBLE_WARRANTY = TRUE;                              31030000
    WHEN (100)                                                          31040000
          SWITCH_FLEXIBLE_WARRANTY = FALSE;                             31050000
    OTHERWISE                                                           31060000
         CALL RCBBIFM_ERROR(ADDR(SQLCA),'DB2','#091');                  31070000
  END;  */                                                              31080000
                                                                        31090000
  DO J = 1 TO REC_COUNT BY 1;                                           31100000
      IF  T690_ARRAY.A_COUNTRY(J)   =  WRK_CTRYNO          &            31110000
          T690_ARRAY.A_TYPE(J)      =  WRK_PRODUCT_TYPE    &            31120000
          T690_ARRAY.A_MODEL(J)     =  WRK_MODEL           &            31130000
          T690_ARRAY.A_EFF_DATE(J) <=  G_WRK_INSTALL_DATE  &            31140000
          G_WRK_INSTALL_DATE       <=  T690_ARRAY.A_END_DATE(J)         31150000
      THEN DO;                                                          31160000
             SWITCH_FLEXIBLE_WARRANTY = TRUE;                           31170000
             WRK_RULE = T690_ARRAY.RULE(J);                             31180000
             I = J;                                                     31190000
             J = REC_COUNT;                                             31200000
           END;                                                         31210000
      ELSE                                                              31220000
        SWITCH_FLEXIBLE_WARRANTY = FALSE;                               31230000
  END;                                                                  31240000
                                                                        31250000
  IF SWITCH_FLEXIBLE_WARRANTY = FALSE THEN                              31260000
  DO J = 1 TO REC_COUNT BY 1;                                           31270000
      IF  T690_ARRAY.A_COUNTRY(J)   =  WRK_CTRYNO          &            31280000
          T690_ARRAY.A_TYPE(J)      =  WRK_PRODUCT_TYPE    &            31290000
          T690_ARRAY.A_MODEL(J)     =  '***'               &            31300000
          T690_ARRAY.A_EFF_DATE(J) <=  G_WRK_INSTALL_DATE  &            31310000
          G_WRK_INSTALL_DATE       <=  T690_ARRAY.A_END_DATE(J)         31320000
      THEN DO;                                                          31330000
             SWITCH_FLEXIBLE_WARRANTY = TRUE;                           31340000
             WRK_RULE = T690_ARRAY.RULE(J);                             31350000
             I = J;                                                     31360000
             J = REC_COUNT;                                             31370000
           END;                                                         31380000
      ELSE                                                              31390000
        SWITCH_FLEXIBLE_WARRANTY = FALSE;                               31400000
  END;                                                                  31410000
                                                                        31420000
  IF SWITCH_FLEXIBLE_WARRANTY = FALSE THEN                              31430000
  DO J = 1 TO REC_COUNT BY 1;                                           31440000
      IF  T690_ARRAY.A_COUNTRY(J)   =  '***'               &            31450000
          T690_ARRAY.A_TYPE(J)      =  WRK_PRODUCT_TYPE    &            31460000
          T690_ARRAY.A_MODEL(J)     =  WRK_MODEL           &            31470000
          T690_ARRAY.A_EFF_DATE(J) <=  G_WRK_INSTALL_DATE  &            31480000
          G_WRK_INSTALL_DATE       <=  T690_ARRAY.A_END_DATE(J)         31490000
      THEN DO;                                                          31500000
             SWITCH_FLEXIBLE_WARRANTY = TRUE;                           31510000
             WRK_RULE = T690_ARRAY.RULE(J);                             31520000
             I = J;                                                     31530000
             J = REC_COUNT;                                             31540000
           END;                                                         31550000
      ELSE                                                              31560000
        SWITCH_FLEXIBLE_WARRANTY = FALSE;                               31570000
  END;                                                                  31580000
                                                                        31590000
  IF SWITCH_FLEXIBLE_WARRANTY = FALSE THEN                              31600000
  DO J = 1 TO REC_COUNT BY 1;                                           31610000
      IF  T690_ARRAY.A_COUNTRY(J)   =  '***'               &            31620000
          T690_ARRAY.A_TYPE(J)      =  WRK_PRODUCT_TYPE    &            31630000
          T690_ARRAY.A_MODEL(J)     =  '***'               &            31640000
          T690_ARRAY.A_EFF_DATE(J) <=  G_WRK_INSTALL_DATE  &            31650000
          G_WRK_INSTALL_DATE       <=  T690_ARRAY.A_END_DATE(J)         31660000
      THEN DO;                                                          31670000
             SWITCH_FLEXIBLE_WARRANTY = TRUE;                           31680000
             WRK_RULE = T690_ARRAY.RULE(J);                             31690000
             I = J;                                                     31700000
             J = REC_COUNT;                                             31710000
           END;                                                         31720000
      ELSE                                                              31730000
        SWITCH_FLEXIBLE_WARRANTY = FALSE;                               31740000
  END;                                                                  31750000
                                                       /* EOC RB01298 */31760000
                                                                        31770000
 END RCBBIFM_RETRIEVE_FLEXIBLE;                                         31780000
                                                       /* SOC RB01298 */31781000
1/********************************************************************/ 31790000
 /*                                                                  */ 31800000
 /* MODULE NAME      : RCBBIFM_FILL_T690_ARRAY               RB01298 */ 31810000
 /*                                                                  */ 31820000
 /* DESCRIPTION      : GET THE FLEXIBLE WARRANTY AND MTS CONTRACT    */ 31830000
 /*                    RECORDS FROM T690 INTO T690 ARRAY             */ 31840000
 /********************************************************************/ 31850000
0RCBBIFM_FILL_T690_ARRAY: PROC;                                         31860000
                                                                        31870000
  DO  WHILE (¬EOF_RCBBIFB);                                             31880000
      READ FILE (RCBBIFB) INTO (FILE_RCBBIFB);                          31890000
      REC_COUNT = REC_COUNT + 1;                                        31900000
  END;                                                                  31910000
                                                                        31920000
  CLOSE  FILE (RCBBIFB);                                                31930000
  EOF_RCBBIFB   = FALSE;                                                31940000
                                                                        31950000
  IF REC_COUNT > 0 THEN                                                 31960000
   DO;                                                                  31970000
     ALLOCATE T690_ARRAY;                                               31980000
     OPEN FILE (RCBBIFB);                                               31990000
     DO K = 1 TO REC_COUNT BY 1;                                        32000000
      READ FILE (RCBBIFB) INTO (FILE_RCBBIFB);                          32010000
                                                                        32020000
      T690_ARRAY.A_COUNTRY(K)     = FILE_RCBBIFB.COUNTRY_NUMBER;        32030000
      T690_ARRAY.A_TYPE(K)        = FILE_RCBBIFB.PRODUCT_TYPE;          32040000
      T690_ARRAY.A_MODEL(K)       = FILE_RCBBIFB.MODEL_NUMBER;          32050000
      T690_ARRAY.A_B_W_MNTHS(K)   = FILE_RCBBIFB.BRAND_WARRANTY_MNT;    32060000
      T690_ARRAY.A_SLC_NULLIND(K) = FILE_RCBBIFB.NULL_SERVICE_LVL_CODE; 32070000
      T690_ARRAY.A_SLC(K)         = FILE_RCBBIFB.SERVICE_LVL_CODE;      32080000
      T690_ARRAY.A_EFF_DATE(K)    = FILE_RCBBIFB.EFFECTIVE_DATE;        32090000
      T690_ARRAY.A_END_DATE(K)    = FILE_RCBBIFB.END_DATE;              32100000
      T690_ARRAY.A_SLC2_NULLIND(K)= FILE_RCBBIFB.NULL_SERVICE_LVL_CODE2;32110000
      T690_ARRAY.A_SLC2(K)        = FILE_RCBBIFB.SERVICE_LVL_CODE_2;    32120000
      T690_ARRAY.RULE(K)          = FILE_RCBBIFB.RULE;                  32130000
     END;                                                               32140000
   END;                                                                 32150000
  ELSE                                                                  32160000
    SWITCH_EMPTY_T690 = TRUE;                                           32170000
                                                                        32180000
0END RCBBIFM_FILL_T690_ARRAY;                         /* EOC RB01298 */ 32190000
 /********************************************************************/ 32200000
 /*                                                                  */ 32210000
 /* MODULE NAME      : RCBBIFM_CALC_DATE                             */ 32220000
 /*                                                                  */ 32230000
 /* DESCRIPTION      : PROCESS DATE USING RCB004M                    */ 32240000
 /*                                                                  */ 32250000
 /********************************************************************/ 32260000
 RCBBIFM_CALC_DATE: PROC   (EFF_DATE,                                   32270000
                            CALC_TYPE,                                  32280000
                            CALC_VALUE) RETURNS(CHAR(10));              32290000
                                                                        32300000
 DCL EFF_DATE     CHAR(10);                                             32310000
 DCL CALC_TYPE    CHAR(1);                                              32320000
 DCL CALC_VALUE   FIXED DEC(3,0);                                       32330000
                                                                        32340000
 DATE_AREA.WD_IN_FORMAT   = 'ISO';                                      32350000
 DATE_AREA.WD_OUT_FORMAT  = 'ISO';                                      32360000
 DATE_AREA.WD_FUNCTION    = 'C';                                        32370000
 DATE_AREA.WD_PERIOD_TYPE = CALC_TYPE;                                  32380000
 DATE_AREA.WD_PERIOD      = CALC_VALUE;                                 32390000
 DATE_AREA.WD_IN_DATE     = EFF_DATE;                                   32400000
                                                                        32410000
 CALL RCB004M (ADDR (DATE_AREA));;                                      32420000
                                                                        32430000
 IF DATE_AREA.WD_STATUS  ¬= ' '                                         32440000
 THEN                                                                   32450000
   DO;                                                                  32460000
     CALL RCBBIFM_ERROR (NULL,                                          32470000
                         'OTHER',                                       32480000
                         '#030');                                       32490000
   END;                                                                 32500000
                                                                        32510000
 RETURN(DATE_AREA.WD_OUT_DATE);                                         32520000
                                                                        32530000
 END RCBBIFM_CALC_DATE;                                /* EOC RB01281*/ 32540000
1/********************************************************************/ 32550000
 /*                                                                  */ 32560000
 /* MODULE NAME      : RCBBIFM_TERM_COUNTRY                          */ 32570000
 /*                                                                  */ 32580000
 /* DESCRIPTION      : TERMINATE CURRENT COUNTRY                     */ 32590000
 /*                                                                  */ 32600000
 /********************************************************************/ 32610000
 RCBBIFM_TERM_COUNTRY: PROC;                                            32620000
                                                                        32630000
 IF SKIP_COUNTRY = '1'B                                                 32640000
 THEN DO;                                                               32650000
   PARM_INT_AREA.COUNTRY_NUMBER  = WRK_CTRY_FILE_PREV;                  32660000
 END;                                                                   32670000
 ELSE DO;                                                               32680000
   PARM_INT_AREA.COUNTRY_NUMBER  = WRK_CTRYNO;                          32690000
                           /******************************************/ 32700000
                           /* GIVE WARNING IF ALL COUNTS ZERO FOR    */ 32710000
                           /* A COUNTRY (MSG 184) -->COUNTRY MISSING */ 32720000
                           /******************************************/ 32730000
   IF G_CNTS.CNT.RCBBIF0_READ = 0                                       32740000
   THEN DO;                                                             32750000
     CALL RCBBIFM_MSG('0184');                                          32760000
   END;                                                                 32770000
 END;                                                                   32780000
                                 /************************************/ 32790000
                                 /* ADAPT THE COUNTERS               */ 32800000
                                 /************************************/ 32810000
 G_CNTS.TOT.RCBBIF0_READ   = G_CNTS.TOT.RCBBIF0_READ +                  32820000
                             G_CNTS.CNT.RCBBIF0_READ;                   32830000
 G_CNTS.TOT.RCBBIF0_SKIP   = G_CNTS.TOT.RCBBIF0_SKIP +                  32840000
                             G_CNTS.CNT.RCBBIF0_SKIP;                   32850000
 G_CNTS.TOT.RCBBIF0_REJECT = G_CNTS.TOT.RCBBIF0_REJECT +                32860000
                             G_CNTS.CNT.RCBBIF0_REJECT;                 32870000
 G_CNTS.TOT.RCBBIF0_ACCEPT = G_CNTS.TOT.RCBBIF0_ACCEPT +                32880000
                             G_CNTS.CNT.RCBBIF0_ACCEPT;                 32890000
 G_CNTS.TOT.RCBBIF0_BLOCK  = G_CNTS.TOT.RCBBIF0_BLOCK +                 32900000
                             G_CNTS.CNT.RCBBIF0_BLOCK;                  32910000
 G_CNTS.TOT.RCBBIA0_WRITE  = G_CNTS.TOT.RCBBIA0_WRITE +                 32920000
                             G_CNTS.CNT.RCBBIA0_WRITE;                  32930000
 G_CNTS.TOT.RCBBIB0_WRITE  = G_CNTS.TOT.RCBBIB0_WRITE +                 32940000
                             G_CNTS.CNT.RCBBIB0_WRITE;                  32950000
 G_CNTS.TOT.RCBBIC0_WRITE  = G_CNTS.TOT.RCBBIC0_WRITE +                 32960000
                             G_CNTS.CNT.RCBBIC0_WRITE;                  32970000
 G_CNTS.TOT.DOUBLE_CUST    = G_CNTS.TOT.DOUBLE_CUST +                   32980000
                             G_CNTS.CNT.DOUBLE_CUST;                    32990000
                                 /************************************/ 33000000
                                 /* WRITE COUNT MESSAGES             */ 33010000
                                 /************************************/ 33020000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.CNT.RCBBIF0_READ;                         33030000
 G_WRKMSG.NUMFIELD_3 = G_CNTS.CNT.RCBBIF0_ACCEPT;                       33040000
 G_WRKMSG.NUMFIELD_4 = G_CNTS.CNT.RCBBIF0_REJECT;                       33050000
 G_WRKMSG.NUMFIELD_5 = G_CNTS.CNT.RCBBIF0_SKIP;                         33060000
 G_WRKMSG.NUMFIELD_6 = G_CNTS.CNT.DOUBLE_CUST;                          33070000
                                                                        33080000
 CALL RCBBIFM_MSG('0003');                                              33090000
                                                                        33100000
 G_WRKMSG.TXTFIELD_1 = 'RCBBIA0';                                       33110000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.CNT.RCBBIA0_WRITE;                        33120000
 CALL RCBBIFM_MSG('0004');                                              33130000
                                                                        33140000
 G_WRKMSG.TXTFIELD_1 = 'RCBBIB0';                                       33150000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.CNT.RCBBIB0_WRITE;                        33160000
 CALL RCBBIFM_MSG('0004');                                              33170000
                                                                        33180000
 G_WRKMSG.TXTFIELD_1 = 'RCBBIC0';                                       33190000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.CNT.RCBBIC0_WRITE;                        33200000
 CALL RCBBIFM_MSG('0004');                                              33210000
                                                                        33220000
 G_WRKMSG.TXTFIELD_1 = 'RCBBIF1';                                       33230000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.CNT.RCBBIF0_REJECT;                       33240000
 CALL RCBBIFM_MSG('0004');                                              33250000
                                                                        33260000
 END RCBBIFM_TERM_COUNTRY;                                              33270000
1/********************************************************************/ 33280000
 /*                                                                  */ 33290000
 /* MODULE NAME      : RCBBIFM_TERM_PROGRAM                          */ 33300000
 /*                                                                  */ 33310000
 /* DESCRIPTION      : TERMINATE PROGRAM                             */ 33320000
 /*                                                                  */ 33330000
 /********************************************************************/ 33340000
 RCBBIFM_TERM_PROGRAM: PROC;                                            33350000
                                                                        33360000
                                                       /* SOC *RC01191*/33370000
 TB_RCBV500             = '';                                           33380000
 TB_RCBV500_I           = '';                                           33390000
                                            /* UPDATE FILE SEQ.NUMBER */33400000
 RCB035.FILE_SEQ_NUM_SC = WRK_FILE_SEQ;                                 33410000
 TB_RCB035              = RCB035 , BY NAME;                             33420000
                                                                        33430000
 CALL RCBG50M(PTR_RCBV500,                                              33440000
              PTR_RCBV500I,                                             33450000
              PTR_RETURN_AREA,                                          33460000
              PTR_INT_AREA);                                            33470000
                                                                        33480000
 SELECT (RETURN_AREA.RETURN_CODE);                                      33490000
   WHEN(0);                                                             33500000
   OTHERWISE                                                            33510000
     DO;                                                                33520000
       CALL RCBBIFM_ERROR(ADDR (RETURN_AREA.RETURN_SQL),                33530000
                         'DB2','#024');                                 33540000
     END;                                                               33550000
   END;                                                                 33560000
                                                       /* EOC *RC01191*/33570000
                                                                        33580000
 PARM_INT_AREA.COUNTRY_NUMBER  = '';                                    33590000
                                                                        33600000
                                 /************************************/ 33610000
                                 /* WRITE COUNT MESSAGES             */ 33620000
                                 /************************************/ 33630000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.TOT.RCBBIF0_READ;                         33640000
 G_WRKMSG.NUMFIELD_3 = G_CNTS.TOT.RCBBIF0_ACCEPT;                       33650000
 G_WRKMSG.NUMFIELD_4 = G_CNTS.TOT.RCBBIF0_REJECT;                       33660000
 G_WRKMSG.NUMFIELD_5 = G_CNTS.TOT.RCBBIF0_SKIP;                         33670000
 G_WRKMSG.NUMFIELD_6 = G_CNTS.TOT.DOUBLE_CUST;                          33680000
                                                                        33690000
 CALL RCBBIFM_MSG('0003');                                              33700000
                                                                        33710000
 G_WRKMSG.TXTFIELD_1 = 'RCBBIA0';                                       33720000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.TOT.RCBBIA0_WRITE;                        33730000
 CALL RCBBIFM_MSG('0004');                                              33740000
                                                                        33750000
 G_WRKMSG.TXTFIELD_1 = 'RCBBIB0';                                       33760000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.TOT.RCBBIB0_WRITE;                        33770000
 CALL RCBBIFM_MSG('0004');                                              33780000
                                                                        33790000
 G_WRKMSG.TXTFIELD_1 = 'RCBBIC0';                                       33800000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.TOT.RCBBIC0_WRITE;                        33810000
 CALL RCBBIFM_MSG('0004');                                              33820000
                                                                        33830000
 G_WRKMSG.TXTFIELD_1 = 'RCBBIF1';                                       33840000
 G_WRKMSG.NUMFIELD_2 = G_CNTS.TOT.RCBBIF0_REJECT;                       33850000
 CALL RCBBIFM_MSG('0004');                                              33860000
                                 /************************************/ 33870000
                                 /* CLOSE ALL FILES                  */ 33880000
                                 /************************************/ 33890000
 CLOSE FILE (RCBBIFB);                                    /* RB01298 */ 33900000
 CLOSE FILE (RCBBIF0);                                                  33910000
 CLOSE FILE (RCBBIF1);                                                  33920000
 CLOSE FILE (RCBBIA0);                                                  33930000
 CLOSE FILE (RCBBIB0);                                                  33940000
 CLOSE FILE (RCBBIC0);                                                  33950000
                                                                        33960000
 CALL RCBBIFM_MSG('9999');                                              33970000
                                                                        33980000
 /* CLOSE MESSAGE FILE  (ALWAYS LAST ACTION..!) */                      33990000
 PARM_INT_AREA.MSG_REQUEST    = 'C';                                    34000000
 CALL RCB0M1M(PTR_INT_AREA);                                            34010000
                                                                        34020000
 END RCBBIFM_TERM_PROGRAM;                                              34030000
1/********************************************************************/ 34040000
 /*                                                                  */ 34050000
 /* MODULE NAME      : RCBBIFM_MSG                                   */ 34060000
 /*                                                                  */ 34070000
 /* DESCRIPTION      : CALLS THE COMMON MESSAGE ROUTINE TO PRINT     */ 34080000
 /*                    THE RIGHT MESSAGE                             */ 34090000
 /*                                                                  */ 34100000
 /********************************************************************/ 34110000
0RCBBIFM_MSG: PROC (A_MSG_NR);                                          34120000
                                                                        34130000
 DCL A_MSG_NR          CHAR(04);                             /*RC01191*/34140000
 DCL L_CNT_PIC10       PIC 'Z,ZZZ,ZZZ,ZZ9';                             34150000
                                                                        34160000
 /*RESET COMMON FIELDS*/                                                34170000
 PARM_INT_AREA.MSG_VAR_CODES = ' ';                                     34180000
                                                                        34190000
 SELECT (A_MSG_NR);                                                     34200000
                                                                        34210000
   /* 0003: NUMBERS RECORDS READ,BLOCKED,ACCEPTED,REJECTED OR SKIPPED*/ 34220000
   WHEN ('0003') DO;                                                    34230000
                                                      /* SOC PTM1233 */ 34240000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             34250000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             34260000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCBBIF0';                        34270000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'C1';                             34280000
     L_CNT_PIC9                     = G_WRKMSG.NUMFIELD_2;              34290000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = L_CNT_PIC9;                       34300000
     PARM_INT_AREA.MSG_VAR_CODE_8   = 'C3';                             34310000
     L_CNT_PIC9                     = G_WRKMSG.NUMFIELD_3;              34320000
     PARM_INT_AREA.MSG_VAR_VALUE_8  = L_CNT_PIC9;                       34330000
     PARM_INT_AREA.MSG_VAR_CODE_9   = 'C4';                             34340000
     L_CNT_PIC9                     = G_WRKMSG.NUMFIELD_4;              34350000
     PARM_INT_AREA.MSG_VAR_VALUE_9  = L_CNT_PIC9;                       34360000
     PARM_INT_AREA.MSG_VAR_CODE_10  = 'C5';                             34370000
     L_CNT_PIC9                     = G_WRKMSG.NUMFIELD_5;              34380000
     PARM_INT_AREA.MSG_VAR_VALUE_10 = L_CNT_PIC9;                       34390000
     PARM_INT_AREA.MSG_VAR_CODE_11  = 'C7';                             34400000
     L_CNT_PIC9                     = G_WRKMSG.NUMFIELD_6;              34410000
     PARM_INT_AREA.MSG_VAR_VALUE_11 = L_CNT_PIC9;                       34420000
                                                      /* EOC PTM1233 */ 34430000
   END;                                                                 34440000
                                                                        34450000
   /* 0004: NUMBERS OF RECORDS WRITTEN */                               34460000
   WHEN ('0004') DO;                                                    34470000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             34480000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             34490000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = G_WRKMSG.TXTFIELD_1; /*FILENAME*/ 34500000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'C6';                             34510000
     L_CNT_PIC10                    = G_WRKMSG.NUMFIELD_2; /*NROF_REC*/ 34520000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = L_CNT_PIC10;                      34530000
   END;                                                                 34540000
                                                                        34550000
   /* 0005: NO COUNTRY FOUND FOR PROGRAM */                             34560000
   WHEN ('0005') DO;                                                    34570000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             34580000
   END;                                                                 34590000
                                                                        34600000
   /* 0007: NUMBERS OF RECORDS READ INCONSISTENT WITH TRAILERCOUNT */   34610000
   WHEN ('0007') DO;                                                    34620000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             34630000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             34640000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCBBIF0';                        34650000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'C7';                             34660000
     L_CNT_PIC10                    = G_CNTS.TOT.RCBBIF0_READ;          34670000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = L_CNT_PIC10;                      34680000
   END;                                                                 34690000
                                                                        34700000
   /* 0012: DATE INCORRECT */                                           34710000
   WHEN ('0012') DO;                                                    34720000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             34730000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'DT';                             34740000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = G_WRKMSG.TXTFIELD_1; /*DATE_1*/   34750000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'DN';                             34760000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = G_WRKMSG.TXTFIELD_2; /*DATE_2*/   34770000
     PARM_INT_AREA.MSG_VAR_CODE_8   = 'RC';                             34780000
     PARM_INT_AREA.MSG_VAR_VALUE_8  = DATE_AREA.WD_STATUS;              34790000
   END;                                                                 34800000
                                                                        34810000
   /* 0013: EMPTY FILE OR DATABASE */                                   34820000
   WHEN ('0013') DO;                                                    34830000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             34840000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             34850000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCBBIF0';                        34860000
   END;                                                                 34870000
                                                                        34880000
   /* 0014: INVALID HEADER FOUND */                                     34890000
   WHEN ('0014') DO;                                                    34900000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             34910000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             34920000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCBBIF0';                        34930000
   END;                                                                 34940000
                                                                        34950000
   /* 0015: RECORDS FOUND AFTER TRAILER */                              34960000
   WHEN ('0015') DO;                                                    34970000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             34980000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             34990000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCBBIF0';                        35000000
   END;                                                                 35010000
                                                                        35020000
   /* 0016: NO HEADER FOUND */                                          35030000
   WHEN ('0016') DO;                                                    35040000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             35050000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             35060000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCBBIF0';                        35070000
   END;                                                                 35080000
                                                                        35090000
   /* 0017: NO TRAILER FOUND */                                         35100000
   WHEN ('0017') DO;                                                    35110000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             35120000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             35130000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCBBIF0';                        35140000
   END;                                                                 35150000
                                                                        35160000
   /* 0024: TIME INCORRECT */                                           35170000
   WHEN ('0024') DO;                                                    35180000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             35190000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'TN';                             35200000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = G_WRKMSG.TXTFIELD_1; /*TIME*/     35210000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'TI';                             35220000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = G_WRKMSG.TXTFIELD_2; /*NAME*/     35230000
   END;                                                                 35240000
                                                  /*SOC  RB01272*/      35250000
   /* 0027: INCORRECT DATE SEQUENCE */                                  35260000
   /*WHEN ('0027') DO;                                                  35270000
   /*PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                             35280000
   /*PARM_INT_AREA.MSG_VAR_CODE_6   = 'D4';                             35290000
   /*PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.WARR_END_DATE;       35300000
   /*PARM_INT_AREA.MSG_VAR_CODE_7   = 'D5';                             35310000
   /*PARM_INT_AREA.MSG_VAR_VALUE_7  = RCBBIF0_MACH.PURCHASE_DATE;       35320000
   /*END;                                                               35330000
                                                                        35340000
   /* 0028: WARRANTY TYPE NOT FILLED IN DURING WARRANTY */              35350000
   /*WHEN ('0028') DO;                                                  35360000
   /*PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                             35370000
   /*END;                                                               35380000
                                                  /*EOC  RB01272*/      35390000
   /* 0031: BOTH TYPE OF MAINTENANCE AND TYPE OF WARRANTY ARE BLANC */  35400000
   WHEN ('0031') DO;                                                    35410000
     PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                             35420000
   END;                                                                 35430000
                                                                        35440000
   /* 0033: THE INPUT RECORD WAS REJECTED */                            35450000
   WHEN ('0033') DO;                                                    35460000
     PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                  /*RC01191*/35470000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'SK';                             35480000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIFM_GET_KEYSPEC();            35490000
   END;                                                                 35500000
                                                                        35510000
   /* 0035: IMPORTANT CUSTOMER DATA IS MISSING */                       35520000
   WHEN ('0035') DO;                                                    35530000
     PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                  /*RC01191*/35540000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FN';                             35550000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = G_WRKMSG.TXTFIELD_1;              35560000
   END;                                                                 35570000
                                                                        35580000
   /* 0036: NO CUSTOMER RECORD FOR CUSTOMER */                          35590000
   WHEN ('0036') DO;                                                    35600000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             35610000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'CU';                             35620000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = G_SAVE_KEY;                       35630000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'CY';                             35640000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = WRK_CTRYNO;                       35650000
   END;                                                                 35660000
                                                                        35670000
   /* 0037: NO INVENTORY RECORD FOR CUSTOMER */                         35680000
   WHEN ('0037') DO;                                                    35690000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             35700000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'CU';                             35710000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = G_SAVE_KEY;                       35720000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'CY';                             35730000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = WRK_CTRYNO;                       35740000
   END;                                                                 35750000
                                                                        35760000
   /* 0038: INCORRECT DATA SEQUENCE */                                  35770000
   WHEN ('0038') DO;                                                    35780000
     PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                             35790000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'D2';                             35800000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.SERV_END_DATE;       35810000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'D1';                             35820000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = RCBBIF0_MACH.SERV_START_DATE;     35830000
   END;                                                                 35840000
                                                                        35850000
   /* 0039: INVALID RECORD TYPE */                                      35860000
   WHEN ('0039') DO;                                                    35870000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             35880000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'RT';                             35890000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.RECORD_CODE;         35900000
   END;                                                                 35910000
                                                                        35920000
   /* 0040: MACH. SER. NUMB. NOT FOUND IN INVENTORY TABLE */            35930000
   WHEN ('0040') DO;                                                    35940000
     PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                             35950000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'HW';                             35960000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.MACHINE_TYPE ||      35970000
                                      RCBBIF0_MACH.ORIGIN       ||      35980000
                                      RCBBIF0_MACH.SERIAL_NUMBER;       35990000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'CY';                             36000000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = WRK_CTRYNO;                       36010000
   END;                                                                 36020000
                                                       /* SOC *RC01191*/36030000
   /* I050: RECORD NOT FOUND FOR PK PN ST */                            36040000
   WHEN('I050') DO;                                                     36050000
     PARM_INT_AREA.COUNTRY_NUMBER   = '';                               36060000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             36070000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'PN';                             36080000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = 'RCB035';                         36090000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'PK';                             36100000
     PARM_INT_AREA.MSG_VAR_VALUE_7  =  TB_RCBV500.PARAMETER_KEY;        36110000
   END;                                                                 36120000
                                                                        36130000
                                                      /* SOC RB01236  */36140000
   /* 0052: NUMBER OF CONTRACTS EXCEEDS ARRAY SIZE */                   36150000
   WHEN('0052') DO;                                                     36160000
     PARM_INT_AREA.MESSAGE_TYPE            = 'IS';                      36170000
     PARM_INT_AREA.MSG_AREA.MSG_VAR_CODES  = ' ';                       36180000
   END;                                                                 36190000
                                                      /* EOC RB01236  */36200000
                                                                        36210000
   /* 0180: RUNS ARE OUT OF SEQUENCE */                                 36220000
   WHEN ('0180') DO;                                                    36230000
     PARM_INT_AREA.COUNTRY_NUMBER   = '';                               36240000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             36250000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'FL';                             36260000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = G_WRKMSG.TXTFIELD_1;              36270000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'SQ';                             36280000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = WRK_FILE_SEQ;                     36290000
     PARM_INT_AREA.MSG_VAR_CODE_8   = 'SQ';                             36300000
     WRK_FILE_SEQ                   = RCB035.FILE_SEQ_NUM_SC + 1;       36310000
     PARM_INT_AREA.MSG_VAR_VALUE_8  = WRK_FILE_SEQ;                     36320000
   END;                                                                 36330000
                                                       /* EOC *RC01191*/36340000
   /* 0181: COUNTRY NUMBER SKIPPED */                                   36350000
   WHEN ('0181') DO;                                                    36360000
     PARM_INT_AREA.COUNTRY_NUMBER   = RCBBIF0_CUST.COUNTRY_NUMBER;      36370000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             36380000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'CY';                             36390000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_CUST.COUNTRY_NUMBER;      36400000
   END;                                                                 36410000
                                                                        36420000
   /* 0184: COUNTRY REAUESTED, BUT NOT PRESENT */                       36430000
   WHEN ('0184') DO;                                                    36440000
     PARM_INT_AREA.COUNTRY_NUMBER   = WRK_CTRYNO;                       36450000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             36460000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'CY';                             36470000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = WRK_CTRYNO;                       36480000
   END;                                                                 36490000
                                                                        36500000
   /* 0198: CUSTOMER NUMBER INVALID */                                  36510000
   WHEN ('0198') DO;                                                    36520000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             36530000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'CU';                             36540000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_CUST.CUSTOMER_NUMBER;     36550000
   END;                                                                 36560000
                                                                        36570000
   /* 0199: MACHINE SERIAL NUMBER INVALID */                            36580000
   WHEN ('0199') DO;                                                    36590000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             36600000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'HW';                             36610000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.MACHINE_TYPE ||      36620000
                                      RCBBIF0_MACH.ORIGIN ||            36630000
                                      RCBBIF0_MACH.SERIAL_NUMBER;       36640000
   END;                                                                 36650000
                                                                        36660000
   /* 0216: PROGRAM RUN DATE RETRIEVED */                               36670000
   WHEN ('0216') DO;                                                    36680000
       PARM_INT_AREA.MESSAGE_TYPE    = 'IS';                            36690000
       PARM_INT_AREA.MSG_VAR_CODE_6  = 'DT';                            36700000
       PARM_INT_AREA.MSG_VAR_VALUE_6 = WRK_RUN_DATE;                    36710000
       PARM_INT_AREA.MSG_VAR_CODE_7  = 'CY';                            36720000
       PARM_INT_AREA.MSG_VAR_VALUE_7 = WRK_CTRYNO;                      36730000
     END;                                                               36740000
                                                                        36750000
                                                       /* SOC RC01234 */36760000
   /* 0231: SERVICE TYPE / SERVICE DELIVERY METHOD NOT IN TABLE */      36770000
   WHEN ('0231') DO;                                                    36780000
     PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                             36790000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'HW';                             36800000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.MACHINE_TYPE ||      36810000
                                      RCBBIF0_MACH.ORIGIN       ||      36820000
                                      RCBBIF0_MACH.SERIAL_NUMBER;       36830000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'CY';                             36840000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = WRK_CTRYNO;                       36850000
                                                       /* SOC PTM1411 */36860000
     PARM_INT_AREA.MSG_VAR_CODE_8   = WRK_COD_8;                        36870000
     PARM_INT_AREA.MSG_VAR_VALUE_8  = WRK_VAL_8;                        36880000
                                                       /* EOC PTM1411 */36890000
   END;                                                                 36900000
                                                       /* EOC RC01234 */36910000
                                                       /* SOC RB01236 */36920000
   /* 0233: CONTRACT PERIOD OVERLAPS WITH EXISTING CONTRACT     */      36930000
   WHEN ('0233') DO;                                                    36940000
     PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                             36950000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'SK';                             36960000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.MACHINE_TYPE   ||    36970000
                                      RCBBIF0_MACH.ORIGIN         ||    36980000
                                      RCBBIF0_MACH.SERIAL_NUMBER  ||    36990000
                                      RCBBIF0_MACH.SERV_START_DATE;     37000000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'CY';                             37010000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = WRK_CTRYNO;                       37020000
   END;                                                                 37030000
                                                                        37040000
   /* 0234: CONTRACT ALREADY EXISTS, UPDATE VIA ONLINE ONLY     */      37050000
   WHEN ('0234') DO;                                                    37060000
     PARM_INT_AREA.MESSAGE_TYPE     = 'BU';                             37070000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'SK';                             37080000
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.MACHINE_TYPE   ||    37090000
                                      RCBBIF0_MACH.ORIGIN         ||    37100000
                                      RCBBIF0_MACH.SERIAL_NUMBER  ||    37110000
                                      RCBBIF0_MACH.SERV_START_DATE;     37120000
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'CY';                             37130000
     PARM_INT_AREA.MSG_VAR_VALUE_7  = WRK_CTRYNO;                       37140000
   END;                                                                 37150000
                                                       /* EOC RB01236 */37160000
   /**********THIS CHANGE IS A PART OF PCR-051*************************/37160100
                                                       /* SOC RB01312 */37160200
   /* 0266: NO CORRECT WARRANTY DURATION INFO AVAILABLE FOR MACHINE */  37160300
   WHEN ('0266') DO;                                                    37161000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             37162000
     PARM_INT_AREA.MSG_VAR_CODE_6   = 'SK';                             37162100
     PARM_INT_AREA.MSG_VAR_VALUE_6  = RCBBIF0_MACH.MACHINE_TYPE   ||    37162200
                                      RCBBIF0_MACH.ORIGIN         ||    37162300
                                      RCBBIF0_MACH.SERIAL_NUMBER;       37162400
     PARM_INT_AREA.MSG_VAR_CODE_7   = 'CY';                             37162700
     PARM_INT_AREA.MSG_VAR_VALUE_7  = WRK_CTRYNO;                       37162800
     PARM_INT_AREA.MSG_VAR_CODE_8   = 'WD';                             37162900
     PARM_INT_AREA.MSG_VAR_VALUE_8  = TB_RCBV400.WARRANTY_DURATN_1;     37163000
   END;                                                                 37163100
                                                       /* EOC RB01312 */37164000
   /* 9999: PROGRAM SUCCESFULLY ENDED */                                37170000
   WHEN ('9999') DO;                                                    37180000
     PARM_INT_AREA.MESSAGE_TYPE     = 'IS';                             37190000
   END;                                                                 37200000
                                                                        37210000
   OTHERWISE DO;                                                        37220000
     %IF (RCBBIFM_DEBUG = 'Y' ) %THEN %DO;                              37230000
       PUT SKIP LIST( '#DBG# '||'A_MSG_NR=' || A_MSG_NR);               37240000
     %END;                                                              37250000
     CALL RCBBIFM_ERROR (NULL, 'OTHER', '#025');              /*ABORT*/ 37260000
   END;                                                                 37270000
 END;                                                                   37280000
                                                                        37290000
 /* MESSAGE IS VALID, REPORT MESSAGE */                                 37300000
 PARM_INT_AREA.MESSAGE_NUMBER = A_MSG_NR;                    /*RC01191*/37310000
 CALL RCB0M1M(PTR_INT_AREA);                                            37320000
                                                                        37330000
 /* PREVENT PRINTING PREVIOUS MESSAGE WORK FIELDS */                    37340000
 G_WRKMSG = '';                                                         37350000
                                                                        37360000
 END RCBBIFM_MSG;                                                       37370000
1/********************************************************************/ 37380000
 /*                                                                  */ 37390000
 /* MODULE NAME      : RCBBIFM_ERROR                                 */ 37400000
 /*                                                                  */ 37410000
 /* DESCRIPTION      : CALLS THE COMMON ERROR ROUTINE                */ 37420000
 /*                                                                  */ 37430000
 /********************************************************************/ 37440000
 RCBBIFM_ERROR: PROC (PTR_ERROR,                                        37450000
                      ERR_TYPE,                                         37460000
                      CALL_ID);                                         37470000
                                                                        37480000
 DCL PTR_ERROR             PTR;                                         37490000
 DCL ERR_TYPE              CHAR (8);                                    37500000
 DCL CALL_ID               CHAR (4);                                    37510000
                                                                        37520000
 PARM_INT_AREA.PTR_ERROR = PTR_ERROR;                                   37530000
 PARM_INT_AREA.ERR_TYPE  = ERR_TYPE;                                    37540000
 PARM_INT_AREA.CALL_ID   = CALL_ID;                                     37550000
 CALL RCB0E1M (PTR_INT_AREA);                                           37560000
                                                                        37570000
 END RCBBIFM_ERROR;                                                     37580000
1/*******************************************************************/  37590000
 /*DO NOT CHANGE THIS PART, IT IS MEANT FOR ABR                     */  37600000
 /*******************************************************************/  37610000
0 %INCLUDE DAIFPLH ;                     /* COMPILE DATE/TIME STAMP */  37620000
 $DAIMOD (RCBBIFM);                      /* MODULE TO BE COMPILED   */  37630000
0/*******************************************************************/  37640000
 /* END OF ABR BLOCK                                                */  37650000
 /*******************************************************************/  37660000
 END RCBBIFM;                                                           37670000