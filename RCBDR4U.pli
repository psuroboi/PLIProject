1/* RCBDR4U - RCMS CUSTOMER EXTRACT USER EXIT                        */
 /********************************************************************/
 /*                                                                  */
 /* MODULE NAME      : RCBDR4U                                       */
 /*                                                                  */
 /* PROGRAM NAME     : RCBDRFP                                       */
 /*                                                                  */
 /* LANGUAGE         : PLISQL                                        */
 /*                                                                  */
 /* TYPE             : LINKABLE MODULE                               */
 /*                                                                  */
 /* DESCRIPTION      : USER EXIT FOR CUSTOMER INFORMATION            */
 /*                    TO BE USED IN THE RCMS - CU EXTRACT           */
 /*                                                                  */
 /* NOTE             : IF A CUSTOMER HAS NO HW AND NO SW ATTACHED    */
 /*                    THEN IODPDBU MUST BE FILLED VIA THIS EXIT.    */
 /*                    IODPDBU MUST NOT BE BLANK.                    */
 /*                                                                  */
 /* NOTE 1           : IF YOU WANT TO USE THIS EXIT BE SURE TO SET   */
 /*                    SWITCH_USER_EXIT TO TRUE                      */
 /*                                                                  */
 /* NOTE 2                                              SOC RC01158  */
 /* IN CASE THE DATA_ORIGIN IS SET TO '0'                            */
 /* PTR_FILE_RCBDRF1 WILL POINT TO A STRUCTURE FILLED WITH           */
 /* DATA FROM BAU CEDS                                               */
 /* AND PTR_FILE_PI TO AN EMPTY STRUCTURE.                           */
 /*                                                                  */
 /* IN CASE THE DATA_ORIGIN IS SET TO '1'                            */
 /* PTR_FILE_RCBDRF1 WILL POINT TO A STRUCTURE FILLED WITH           */
 /* DATA FROM PRIME INPUT                                            */
 /* AND PTR_FILE_PI TO AN EMPTY STRUCTURE.                           */
 /*                                                                  */
 /* IN CASE THE DATA_ORIGIN IS SET TO '2'                            */
 /* PTR_FILE_RCBDRF1 WILL POINT TO A STRUCTURE FILLED WITH BAU CEDS  */
 /* AND PTR_FILE_PI TO A STRUCTURE FILLED WITH PRIME INPUT DATA.     */
 /*                                                     EOC RC01158  */
 /*                                                                  */
 /* INPUT            : - PARAMETER INTERFACE (FROM CALLING MODULE)   */
 /*                    - DB2   :                                     */
 /*                                                                  */
 /* OUTPUT           : - PARAMETER INTERFACE (FROM CALLING MODULE)   */
 /*                  : - FILE : RCB0M10                              */
 /*                                                                  */
 /* EXTERNAL MODULES : - RCB0E1M   COMMON ERROR ROUTINE              */
 /*                                                                  */
 /* MESSAGES         : ----                                          */
 /*                                                                  */
 /* DEPENDENCIES     : NONE                                          */
 /*                                                                  */
 /* FREQUENCY        : ----                                          */
 /*                                                                  */
 /*  MAINTENANCE LOG :                                               */
 /*  ---------------                                                 */
 /*                                                                  */
 /*  DATE       | WORK-ITEMNO. | DESCRIPTION                         */
 /*  --------------------------------------------------------------  */
 /*  1992-01-24 | ----         | CEDS INITIAL DEVELOPMENT            */
 /*  1993-11-30 | CED0014      | CHANGE FETCH INTO CALL SEE PTM 374  */
 /*  1995-01-10 | RA01117      | LENGTH FROM PARM FILE REMOVED       */
 /*  1996-04-22 | RC01158      | PRIME INPUT                         */
 /*  1997-04-11 | PTM1036      | CORRECTED PROLOG                    */
 /*  1997-04-29 | PTM0892      | REMOVE DECLARES UNUSED EXT.ENTRIES  */
 /*                                                                  */
 /*  1999-11-02 | RUN ONCE NORD| ADD NORDIC SPECIFIC CODE - BG       */
 /*  1999-11-03 | ROSOUTH      | ADD SOUTHR SPECIFIC CODE - RG       */
 /*  1999-11-08 | RUN ONCE CNTL| ADD CENTRAL REGION RO CODE - SG     */
 /*  1999-11-09 | RONORTH      | ADD REGION NORTH RO CODE   - SG     */
 /*  2000-05-08 | RO NORDIC    | Revised Nordic Code        - BG     */
 /*  2000-11-02 | RO Central2  | Change No. C0022-0900      - TP     */
 /*  2001-02-13 | RO NORDIC-678| Change No. C0003-0201      - SR     */
 /*  2001-03-05 | RO North-788 | removal of check against blank OU   */
 /*             |              | code in the Netherlands code. (Niels*/
 /*  2001-05-15 | C0025-0501   | PART OF UK/IRE SPLIT        SR      */
 /*  2001-08-10 | C0035-0701   | amend zip code for 848 only  - DS   */
 /*  2001-08-24 | CHG097A      | LOGIC FOR CITY NAME IN COUNTRY 848  */
 /*             |              | WHEN ADDR LINE 5 STARTS WITH 'FL'-SR*/
 /*  2001-08-10 | C0043-1101   | allow '+' as a valid character for  */
 /*             |              | country 848 phone numbers in addr   */
 /*             |              | line 6 - TP                         */
 /*  2002-10-29 | C0073-1002   | 3 zero's concatenated in the BUCODE */
 /*             |              | assignment for country Germany is   */
 /*             |              | removed.  -  SR                     */
 /*  2003-04-28 | MN 13958412  | ERROR HANDLING FOR SQLCODE 100 IS   */
 /*             | MN 13978325  | CHANGED TO WORK 'ONLY FOR BATCH'.   */
 /*  2003-05-14 | C0085-0503   | Change the prime input logic for    */
 /*             |              | and 848.                            */
 /*  2003-06-26 | C0087-0603   | Change the tel number for 848 and   */
 /*             |              | cash on delivery for 618            */
 /*  2007-03-30 | Embargo code | Changed due to new embargo          */
 /*             | changes      | definition for Netherlands (788)    */
 /*             |              | Change code - 443A                  */
 /*  2007-11-02 | CHG0456A     | RCMS CU address defaults            */
 /*             |              | for South Africa(864)               */
 /*             |              | Change code - 456A                  */
 /*  2007-11-13 | CHG0459A     | CR 13 - new settings of ZIP code    */
 /*             |              | for south regions (cty 822,838,862) */
 /*  2009-07-13 | CHG0027B     | CEEMEA COUNTRY HANDLING CHANGES     */
 /*             |              | FOR 642,729,808,865                 */
 /*  2011-01-21 | CHG0031A     | Keep the data untouched for countries/
 /*             |              | 866,706,624,848 and 754             */
 /*                              while data_origin=1 */
 /* 2011-05-27  | RMT R09-0221 | CEEMEA COUNTRY HANDLING CHANGES(DS)  */
 /*             |   CHG0031A   | GMEA REGION
 /* 2011-08-22  | trec 80404   | if the phone numeb is not known then
 /*             |              | calaculate the phone num as
 /*             |              | "missing+4 charactersof cust num"
 /* 2011-10-13  | incident     |otherwise clause is missing for 832
 /*             | IN1358678    |while checking the data_origin value
 /*             |              |
 /* 2013-01-08  | PCEDSP-0294  | BH 1.0 Updates on Userexists for CI-FDB
 /*
 /* 2013-02-05  | TEMEA-T081177| BH 1.0 Wrong cust address layout for
 /*             |                RCMS
 /* 2013-02-08  | PCEDSP-0342  | BH 1.0 Improvements on address for RCMS
 /*             |              | layout
 /* 2013-06-25  | PCEDSP-0395  | BH 1.0 RCMS cust Embrago flag change
 /* 2013-08-14  | PCEDSP-0420  | PRE-BH W1 RCMS CUST ADDR CHANGE FOR UK
 /* 2013-09-05  | TEMEA-T081502| Addr lines with match in skip list
 /* 2013-09-05  | TEMEA-T081501| Address field contains text from
 /*             |              | previous fields/customers
 /* 2013-08-14  | PCEDSP-0428  | PCR ON PCR 420
 /* 2013-08-14  | PCEDSP-0420-A| WORD need to be repalce with ABBR
 /*             |              | PCR Update on PCR 420
 /* 2013-12-02  | PCEDSP-0439  | Addition of further values in
 /*             |              | RCMS Cust address for UK
 /* 2013-12-03  | PCEDSP-0440  | Further text changes in RCMS UK
 /*             |              | addresses
 /* 2015-09-08  | PCEDSP-0543  | LA PROJECT : RCMS INTERFACE
 /*             |              |
 /* 2016-02-09  | PCEDSP-0602  | LA project : Brazil deployment RCMS
 /* 2016-04-27  | PCEDSP-0610  | (L) CND : RCMS EXTRACT
 /* 2016-07-29  | PCEDSP-0662  | RCMS Embargo flag translation
 /*             |              | (RTC955444)
 /* 2017-07-14  | PCEDSP-0761  | LA SSA 8+ project : RCMS
 /* 2018-01-08  | S1413683     | Correct invalid Embargo flag
 /*             |              | check in RCBDR4U for Israel
 /* 2018-05-11  | S1527886     | Adjustment of logic for rcms extract
 /*             |              | Belgium
 /* 2018-11-30  | S1697635     | Change RCBDR4U in order to check the
 /*             |              | installation addressas default address
 /*             |              | for 846 and 702
 /* 2018-12-18  | S1710905     | Adding filter for removing VAT info
 /*             |              | during street determination
 /********************************************************************/
1RCBDR4U: PROC    (PTR_SWITCH_USER_EXIT,
                   PTR_DATA_ORIGIN,                       /* RC01158 */
                   PTR_FILE_RCBDRF1,
                   PTR_FILE_PI,                           /* RC01158 */
                   PTR_USER_EXTRA_INFO,
                   PTR_INT_AREA)
          REORDER;
0              @O04QUG: ENTRY;     DCL @SCHFIRST BIT(1)
               STATIC INIT('1'B); IF @SCHFIRST THEN DO;
               @SCHFIRST='0'B;        ON  UNDEFINEDFILE
               (SYSPRINT) GOTO @END; PUT FILE(SYSPRINT)
               EDIT    ('RCBDR4U  VERSION 2011.05.27' ,
               ' 15H43.06      MIT DEM VERSIONS-ENTRY',
               ' @O04QUG',' ')     (SKIP,A,A,A,SKIP,A);
               @END: ON UNDEFINEDFILE(SYSPRINT) SYSTEM;
               END;     /* ENDE DER VERSIONS-GRUPPE  */
 DEFAULT RANGE (*)        STATIC;
0/********************************************************************/
 /*  TESTHILFEN-AKTIVIERUNG                                          */
 /********************************************************************/
 %DECLARE TEST CHARACTER;                                         /*%*/
 %TEST = 'N';                                                     /*%*/
1/********************************************************************/
 /*  PARAMETERS                                                      */
 /********************************************************************/
 DCL PTR_SWITCH_USER_EXIT    PTR;
 DCL PTR_FILE_RCBDRF1        PTR;
 DCL PTR_DATA_ORIGIN         PTR;                         /* RC01158 */
 DCL PTR_FILE_PI             PTR;                         /* RC01158 */
 DCL PTR_USER_EXTRA_INFO     PTR;
 DCL PTR_INT_AREA            PTR;          /* INTERFACE AREA         */
1/********************************************************************/
 /*  EXTERNAL ENTRIES                                                */
 /********************************************************************/
 DCL RCB0E1M   ENTRY  EXTERNAL;            /* COMMON ERROR ROUTINE   */
 DCL RCB0M1M   ENTRY  EXTERNAL;            /* COMMON MSG ROUTINE     */
 /********************************************************************/
 /* ON ERROR CONDITIONS                                              */
 /********************************************************************/
 %INCLUDE (RCB0E0M);
  END;
 /********************************************************************/
 /*                                                                  */
 /* IN CASE AN UNEXPECTED ERROR OCCURS FILL THE FOLLOWING VARIABLES  */
 /* AND CALL THE ERROR ROUTINE:                                      */
 /*                                                                  */
 /*                                                                  */
 /* FIELD              IN CASE OF: DB2 ERROR --  -- OTHER ERROR --   */
 /*                                                                  */
 /* PARM_INT_AREA.PTR_ERROR         ADDR (SQLCA)     NULL            */
 /* PARM_INT_AREA.ERR_TYPE         'DB2'            'OTHER'          */
 /* PARM_INT_AREA.CALL_ID          '#NNN'           '#NNN'           */
 /* call RCB0E1M (PTR_INT_AREA)                                      */
 /*                                                                  */
 /* NOTE: NNN CAN BE A NUMBER FROM 001 TO 999                        */
 /*                                                                  */
 /********************************************************************/
 /********************************************************************/
 /* EXTERNAL PARAMETER INTERFACES                                    */
 /********************************************************************/
 DCL SWITCH_USER_EXIT        BIT (1) BASED(PTR_SWITCH_USER_EXIT);
 DCL 1 PARM_FILE_RCBDRF1   BASED(PTR_FILE_RCBDRF1),
       2 DATA,
      %INCLUDE (RCBDRFS);;
                                          /* SOC RC01158 */
 DCL DATA_ORIGIN             CHAR(1) BASED(PTR_DATA_ORIGIN);
 DCL 1 PARM_FILE_PI          BASED(PTR_FILE_PI),
       2 DATA,
      %INCLUDE (RCBDRFS);;
                                                      /* EOC RC01158 */
 DCL 1 PARM_USER_EXTRA_INFO BASED(PTR_USER_EXTRA_INFO),
      %INCLUDE (RCBDRFSU);;
 DCL 1 PARM_INT_AREA       BASED(PTR_INT_AREA),
      %INCLUDE (RCBZ01S);;
 DCL 1 UKOM(1:133),               /* PCEDSP-0439 */ /* 131+2 */
           3 STEXT       CHAR(30),
           3 SLENGTH     CHAR(2);
 UKOM.STEXT(1)    ='FOR ATTN:' ;
 UKOM.SLENGTH(1)  ='09' ;
 UKOM.STEXT(2)    ='FOR ATTEN' ;
 UKOM.SLENGTH(2)  ='09' ;
 UKOM.STEXT(3)    ='FOR ATTN ' ;   /* FOR ATTENTION OF + BLANK  */
 UKOM.SLENGTH(3)  ='09' ;
 UKOM.STEXT(4)    ='FOR ATT ' ;    /* FOR ATTENTION OF + BLANK */
 UKOM.SLENGTH(4)  ='08' ;
 UKOM.STEXT(5)    ='ATT:' ;
 UKOM.SLENGTH(5)  ='04' ;
 UKOM.STEXT(6)    ='ATT ' ;       /* FOR ATTENTION OF + BLANK*/
 UKOM.SLENGTH(6)  ='04' ;
 UKOM.STEXT(7)    ='ATTN ' ;      /* FOR ATTENTION OF + BLANK*/
 UKOM.SLENGTH(7)  ='05' ;
 UKOM.STEXT(8)    ='ATTN:' ;
 UKOM.SLENGTH(8)  ='05' ;
 UKOM.STEXT(9)    ='FAO ' ;       /* FOR ATTENTION OF + BLANK*/
 UKOM.SLENGTH(9)  ='04' ;
 UKOM.STEXT(10)   ='FAO:' ;
 UKOM.SLENGTH(10) ='04' ;
 UKOM.STEXT(11)   ='F.A.O.' ;
 UKOM.SLENGTH(11) ='06' ;
 UKOM.STEXT(12)   ='MR' ;         /* TITLE + BLANK */
 UKOM.SLENGTH(12) ='03' ;
 UKOM.STEXT(13)   ='MR.' ;
 UKOM.SLENGTH(13) ='03' ;
 UKOM.STEXT(14)   ='MRS ' ;        /* TITLE + BLANK */
 UKOM.SLENGTH(14) ='04' ;
 UKOM.STEXT(15)   ='MRS.' ;
 UKOM.SLENGTH(15) ='04' ;
 UKOM.STEXT(16)   ='ABERDEENSHIRE ' ;  /* COUNTY + BLANK */
 UKOM.SLENGTH(16) ='14' ;
 UKOM.STEXT(17)   ='AYRSHIRE ' ;        /* COUNTY + BLANK */
 UKOM.SLENGTH(17) ='09' ;
 UKOM.STEXT(18)   ='BANFFSHIRE ' ;      /* COUNTY + BLANK */
 UKOM.SLENGTH(18) ='11' ;
 UKOM.STEXT(19)   ='BEDFORDSHIRE ' ;    /* COUNTY + BLANK */
 UKOM.SLENGTH(19) ='13' ;
 UKOM.STEXT(20)   ='BEDS ' ;            /* COUNTY abbr + BLANK */
 UKOM.SLENGTH(20) ='05' ;
 UKOM.STEXT(21)   ='BERKS ' ;           /* COUNTY abbr + BLANK */
 UKOM.SLENGTH(21) ='06' ;
 UKOM.STEXT(22)   ='BERKSHIRE ' ;       /* COUNTY + BLANK */
 UKOM.SLENGTH(22) ='10' ;
 UKOM.STEXT(23)   ='BERWICKSHIRE ' ;    /* COUNTY + BLANK */
 UKOM.SLENGTH(23) ='13' ;
 UKOM.STEXT(24)   ='BRECKNOCKSHIRE ' ;
 UKOM.SLENGTH(24) ='15' ;
 UKOM.STEXT(25)   ='BUCKINGHAMSHIRE ' ;
 UKOM.SLENGTH(25) ='16' ;
 UKOM.STEXT(26)   ='BUCKS ' ;
 UKOM.SLENGTH(26) ='06' ;
 UKOM.STEXT(27)   ='CAERNARFONSHIRE ' ;
 UKOM.SLENGTH(27) ='16' ;
 UKOM.STEXT(28)   ='CAITHNESS ' ;
 UKOM.SLENGTH(28) ='10' ;
 UKOM.STEXT(29)   ='CAMBRIDGESHIRE ' ;
 UKOM.SLENGTH(29) ='15' ;
 UKOM.STEXT(30)   ='CAMBS ' ;
 UKOM.SLENGTH(30) ='06' ;
 UKOM.STEXT(31)   ='CARDIGANSHIRE ' ;
 UKOM.SLENGTH(31) ='14' ;
 UKOM.STEXT(32)   ='CARMARTHENSHIRE ' ;
 UKOM.SLENGTH(32) ='16' ;
 UKOM.STEXT(33)   ='CHESHIRE ' ;
 UKOM.SLENGTH(33) ='09' ;
 UKOM.STEXT(34)   ='CLACKMANNANSHIRE ' ;
 UKOM.SLENGTH(34) ='17' ;
 UKOM.STEXT(35)   ='CLWYD ' ;
 UKOM.SLENGTH(35) ='06' ;
 UKOM.STEXT(36)   ='CO DURHAM ' ;
 UKOM.SLENGTH(36) ='10' ;
 UKOM.STEXT(37)   ='CO. DURHAM ' ;
 UKOM.SLENGTH(37) ='11' ;
 UKOM.STEXT(38)   ='CORNWALL ' ;
 UKOM.SLENGTH(38) ='09' ;
 UKOM.STEXT(39)   ='COUNTY DURHAM ' ;
 UKOM.SLENGTH(39) ='14' ;
 UKOM.STEXT(40)   ='CROMARTYSHIRE ' ;
 UKOM.SLENGTH(40) ='14' ;
 UKOM.STEXT(41)   ='CUMBERLAND ' ;
 UKOM.SLENGTH(41) ='11' ;
 UKOM.STEXT(42)   ='DENBIGHSHIRE ' ;
 UKOM.SLENGTH(42) ='13' ;
 UKOM.STEXT(43)   ='DERBS ' ;
 UKOM.SLENGTH(43) ='06' ;
 UKOM.STEXT(44)   ='DERBYS ' ;
 UKOM.SLENGTH(44) ='07' ;
 UKOM.STEXT(45)   ='DERBYSHIRE ' ;
 UKOM.SLENGTH(45) ='11' ;
 UKOM.STEXT(46)   ='DEVON ' ;
 UKOM.SLENGTH(46) ='06' ;
 UKOM.STEXT(47)   ='DORSET ' ;
 UKOM.SLENGTH(47) ='07' ;
 UKOM.STEXT(48)   ='DUMFRIESSHIRE ' ;
 UKOM.SLENGTH(48) ='14' ;
 UKOM.STEXT(49)   ='DUNBARTONSHIRE ' ;
 UKOM.SLENGTH(49) ='15' ;
 UKOM.STEXT(50)   ='DYFED ' ;
 UKOM.SLENGTH(50) ='06' ;
 UKOM.STEXT(51)   ='E SUSSEX ' ;
 UKOM.SLENGTH(51) ='09' ;
 UKOM.STEXT(52)   ='E. SUSSEX ' ;
 UKOM.SLENGTH(52) ='10' ;
 UKOM.STEXT(53)   ='EAST SUSSEX ' ;
 UKOM.SLENGTH(53) ='12' ;
 UKOM.STEXT(54)   ='ELGINSHIRE ' ;
 UKOM.SLENGTH(54) ='11' ;
 UKOM.STEXT(55)   ='ESSEX ' ;
 UKOM.SLENGTH(55) ='06' ;
 UKOM.STEXT(56)   ='FLINTSHIRE ' ;
 UKOM.SLENGTH(56) ='11' ;
 UKOM.STEXT(57)   ='FORFARSHIRE ' ;
 UKOM.SLENGTH(57) ='12' ;
 UKOM.STEXT(58)   ='GLOUCESTERSHIRE ' ;
 UKOM.SLENGTH(58) ='16' ;
 UKOM.STEXT(59)   ='GWENT ' ;
 UKOM.SLENGTH(59) ='06' ;
 UKOM.STEXT(60)   ='GWYNEDD ' ;
 UKOM.SLENGTH(60) ='08' ;
 UKOM.STEXT(61)   ='HAMPSHIRE ' ;
 UKOM.SLENGTH(61) ='10' ;
 UKOM.STEXT(62)   ='HANTS ' ;
 UKOM.SLENGTH(62) ='06' ;
 UKOM.STEXT(63)   ='HEREFORDSHIRE ' ;
 UKOM.SLENGTH(63) ='14' ;
 UKOM.STEXT(64)   ='HERTFORDSHIRE ' ;
 UKOM.SLENGTH(64) ='14' ;
 UKOM.STEXT(65)   ='HERTS ' ;
 UKOM.SLENGTH(65) ='06' ;
 UKOM.STEXT(66)   ='HUNTINGDONSHIRE ' ;
 UKOM.SLENGTH(66) ='16' ;
 UKOM.STEXT(67)   ='HUNTS ' ;
 UKOM.SLENGTH(67) ='06' ;
 UKOM.STEXT(68)   ='INVERNESS-SHIRE ' ;
 UKOM.SLENGTH(68) ='16' ;
 UKOM.STEXT(69)   ='KENT ' ;
 UKOM.SLENGTH(69) ='05' ;
 UKOM.STEXT(70)   ='KINCARDINESHIRE ' ;
 UKOM.SLENGTH(70) ='16' ;
 UKOM.STEXT(71)   ='KINROSS-SHIRE ' ;
 UKOM.SLENGTH(71) ='14' ;
 UKOM.STEXT(72)   ='KIRKCUDBRIGHTSHIRE ' ;
 UKOM.SLENGTH(72) ='19' ;
 UKOM.STEXT(73)   ='LANARKSHIRE ' ;
 UKOM.SLENGTH(73) ='12' ;
 UKOM.STEXT(74)   ='LANCASHIRE ' ;
 UKOM.SLENGTH(74) ='11' ;
 UKOM.STEXT(75)   ='LANCS ' ;
 UKOM.SLENGTH(75) ='06' ;
 UKOM.STEXT(76)   ='LEICESTERSHIRE ' ;
 UKOM.SLENGTH(76) ='15' ;
 UKOM.STEXT(77)   ='LEICS ' ;
 UKOM.SLENGTH(77) ='06' ;
 UKOM.STEXT(78)   ='LINCOLNSHIRE ' ;
 UKOM.SLENGTH(78) ='13' ;
 UKOM.STEXT(79)   ='LINCS ' ;
 UKOM.SLENGTH(79) ='06' ;
 UKOM.STEXT(80)   ='MERIONETHSHIRE ' ;
 UKOM.SLENGTH(80) ='15' ;
 UKOM.STEXT(81)   ='MID GLAMORGAN ' ;
 UKOM.SLENGTH(81) ='14' ;
 UKOM.STEXT(82)   ='MIDDLESEX ' ;
 UKOM.SLENGTH(82) ='10' ;
 UKOM.STEXT(83)   ='MIDDX ' ;
 UKOM.SLENGTH(83) ='06' ;
 UKOM.STEXT(84)   ='MIDLOTHIAN ' ;
 UKOM.SLENGTH(84) ='11' ;
 UKOM.STEXT(85)   ='MONMOUTHSHIRE ' ;
 UKOM.SLENGTH(85) ='14' ;
 UKOM.STEXT(86)   ='MONTGOMERYSHIRE ' ;
 UKOM.SLENGTH(86) ='16' ;
 UKOM.STEXT(87)   ='MX ' ;
 UKOM.SLENGTH(87) ='03' ;
 UKOM.STEXT(88)   ='NAIRNSHIRE ' ;
 UKOM.SLENGTH(88) ='11' ;
 UKOM.STEXT(89)   ='NORFOLK ' ;
 UKOM.SLENGTH(89) ='08' ;
 UKOM.STEXT(90)   ='NORTHAMPTONSHIRE ' ;
 UKOM.SLENGTH(90) ='17' ;
 UKOM.STEXT(91)   ='NORTHANTS ' ;
 UKOM.SLENGTH(91) ='10' ;
 UKOM.STEXT(92)   ='NORTHUMB ' ;
 UKOM.SLENGTH(92) ='09' ;
 UKOM.STEXT(93)   ='NORTHUMBERLAND ' ;
 UKOM.SLENGTH(93) ='15' ;
 UKOM.STEXT(94)   ='NOTTINGHAMSHIRE ' ;
 UKOM.SLENGTH(94) ='16' ;
 UKOM.STEXT(95)   ='NOTTS ' ;
 UKOM.SLENGTH(95) ='06' ;
 UKOM.STEXT(96)   ='OXFORDSHIRE ' ;
 UKOM.SLENGTH(96) ='12' ;
 UKOM.STEXT(97)   ='OXON ' ;
 UKOM.SLENGTH(97) ='05' ;
 UKOM.STEXT(98)   ='PEEBLESSHIRE ' ;
 UKOM.SLENGTH(98) ='13' ;
 UKOM.STEXT(99)   ='PEMBROKESHIRE ' ;
 UKOM.SLENGTH(99) ='14' ;
 UKOM.STEXT(100)  ='PERTHSHIRE ' ;
 UKOM.SLENGTH(100)='11' ;
 UKOM.STEXT(101)  ='POWYS ' ;
 UKOM.SLENGTH(101)='06' ;
 UKOM.STEXT(102)  ='RADNORSHIRE ' ;
 UKOM.SLENGTH(102)='12' ;
 UKOM.STEXT(103)  ='RENFREWSHIRE ' ;
 UKOM.SLENGTH(103)='13' ;
 UKOM.STEXT(104)  ='ROXBURGHSHIRE ' ;
 UKOM.SLENGTH(104)='14' ;
 UKOM.STEXT(105)  ='RUTLAND ' ;
 UKOM.SLENGTH(105)='08' ;
 UKOM.STEXT(106)  ='SELKIRKSHIRE ' ;
 UKOM.SLENGTH(106)='13' ;
 UKOM.STEXT(107)  ='SHROPS ' ;
 UKOM.SLENGTH(107)='07' ;
 UKOM.STEXT(108)  ='SHROPSHIRE ' ;
 UKOM.SLENGTH(108)='11' ;
 UKOM.STEXT(109)  ='SOMERSET ' ;
 UKOM.SLENGTH(109)='09' ;
 UKOM.STEXT(110)  ='SOUTH GLAMORGAN ' ;
 UKOM.SLENGTH(110)='16' ;
 UKOM.STEXT(111)  ='STAFFORDSHIRE ' ;
 UKOM.SLENGTH(111)='14' ;
 UKOM.STEXT(112)  ='STAFFS ' ;
 UKOM.SLENGTH(112)='07' ;
 UKOM.STEXT(113)  ='STIRLINGSHIRE ' ;
 UKOM.SLENGTH(113)='14' ;
 UKOM.STEXT(114)  ='SUFFOLK ' ;
 UKOM.SLENGTH(114)='08' ;
 UKOM.STEXT(115)  ='SURREY ' ;
 UKOM.SLENGTH(115)='07' ;
 UKOM.STEXT(116)  ='SUSSEX ' ;
 UKOM.SLENGTH(116)='07' ;
 UKOM.STEXT(117)  ='W SUSSEX ' ;
 UKOM.SLENGTH(117)='09' ;
 UKOM.STEXT(118)  ='W. SUSSEX ' ;
 UKOM.SLENGTH(118)='10' ;
 UKOM.STEXT(119)  ='WARWICKSHIRE ' ;
 UKOM.SLENGTH(119)='13' ;
 UKOM.STEXT(120)  ='WEST GLAMORGAN ' ;
 UKOM.SLENGTH(120)='15' ;
 UKOM.STEXT(121)  ='WEST LOTHIAN ' ;
 UKOM.SLENGTH(121)='13' ;
 UKOM.STEXT(122)  ='WEST SUSSEX ' ;
 UKOM.SLENGTH(122)='12' ;
 UKOM.STEXT(123)  ='WEST YORKSHIRE ' ;
 UKOM.SLENGTH(123)='15' ;
 UKOM.STEXT(124)  ='WESTMORLAND ' ;
 UKOM.SLENGTH(124)='12' ;
 UKOM.STEXT(125)  ='WIGTOWNSHIRE ' ;
 UKOM.SLENGTH(125)='13' ;
 UKOM.STEXT(126)  ='WILTS ' ;
 UKOM.SLENGTH(126)='06' ;
 UKOM.STEXT(127)  ='WILTSHIRE ' ;
 UKOM.SLENGTH(127)='10' ;
 UKOM.STEXT(128)  ='WORCESTERSHIRE ' ;
 UKOM.SLENGTH(128)='15' ;
 UKOM.STEXT(129)  ='WORCS ' ;
 UKOM.SLENGTH(129)='06' ;
 UKOM.STEXT(130)  ='YORKS ' ;
 UKOM.SLENGTH(130)='06' ;
 UKOM.STEXT(131)  ='YORKSHIRE ' ;
 UKOM.SLENGTH(131)='10' ;
 UKOM.STEXT(132)  ='C/O ';        /* SOC PCEDSP-0439 */
 UKOM.SLENGTH(132)='04' ;
 UKOM.STEXT(133)  ='C/O:';
 UKOM.SLENGTH(133)='04' ;         /* EOC PCEDSP-0439 */
 /*DCL USTEOF BIT(1) INIT('0'B); */             /* PCEDSP-0420 */
 DCL TEMP_NCUSSTR CHAR(30);                           /* PCEDSP-0420 */
 DCL TEMP_ICUSCTY CHAR(30);                           /* PCEDSP-0420 */
1/********************************************************************/
 /* DB2 TABLE STRUCTURES                                             */
 /********************************************************************/
 /******************** LOCAL DECLARATION FOR REGION NORTH (NL)********/
 DCL RCBT0011_IND (08) FIXED BIN(15);
 %INCLUDE RCBT0011;
 /************ END OF LOCAL DECLARATION FOR REGION NORTH (NL)********/
 /*---------------------------------------- USER DEFINED PROCESS     */
 DCL 1 TAB_280,
       %INCLUDE RCB280S;;
 DCL 1 TAB_150,
       %INCLUDE RCB150S;;
 /*------------------------------------------------------------------*/
 %INCLUDE RCBT0280;
 %INCLUDE RCBT0150;
 /*---------------------------------------- END USER DEFINED PROCESS */
1/********************************************************************/
 /*  BIT SWITCHES                                                    */
 /********************************************************************/
 DCL TRUE     BIT (1) INIT ('1'B);
 DCL FALSE    BIT (1) INIT ('0'B);
 /********************************************************************/
 /*  ALL OTHER USED TEMPORARY FIELDS                                 */
 /********************************************************************/
 DCL 1 WORK_FIELDS,
       3 WRK_LEVEL      FIXED BIN (15),
       3 WRK_INDNULL    FIXED BIN (15);
 /***************** LOCAL DECLARATION FOR REGION NORTH (NL)***********/
 DCL CUSTOMER CHAR(8)         INIT ('');
 DCL C_LINE   CHAR(30)        INIT ('');
 DCL CAPSON   CHAR(26) STATIC INIT('ABCDEFGHIJKLMNOPQRSTUVWXYZ');
 DCL CAPSOFF  CHAR(26) STATIC INIT('abcdefghijklmnopqrstuvwxyz');
 DCL DATUM    CHAR(10)        INIT('');
 /*********** END OF LOCAL DECLARATION FOR REGION NORTH (NL)**********/
 /********************************************************************/
 /*  ROWEST DECLARATIONS                                             */
 /********************************************************************/
 DCL NUMERIC CHAR(10) INIT('0123456789') ;
 DCL WORK_BUCODE CHAR(07) INIT('');
 DCL VAR         CHAR(07) INIT('');
 /************************/
 /* ROSOUTH DECLARATIONS */
 DCL ZIP      CHAR(5) INIT (' ');
 DCL JJ       BIN FIXED(15);
 DCL K        BIN FIXED(15);
 DCL KK       BIN FIXED(15);
 DCL II       BIN FIXED(15);
 DCL III      BIN FIXED(15);
 /* ROSOUTH DECLARATIONS */
 /************************/
 /*---------------------------------------- USER DEFINED PROCESS     */
 DCL (DATE,MULTIPLY,DIVIDE,ROUND,TIME) BUILTIN;
 DCL (INDEX,STRING) BUILTIN; /* ROSOUTH */
 DCL 1 ZZZ_RCBDRFS_OLD,
      %INCLUDE (RCBDRFS);;

 DCL 1 ZZZ_RCBDRFS_NEW,
      %INCLUDE (RCBDRFS);;

 DCL ZZZ_FLAGGA                     CHAR(1);

 DCL C846_COUNTRY_SWEDEN            CHAR (03) INIT ('846');
 DCL C846_PARM_FILE_RCBDRF1_CUNOUSE CHAR(8);
 DCL C846_PARM_FILE_RCBDRF1_AAS_ADD CHAR(5);
 DCL C846_NUM                       BINARY FIXED (31,0);
 DCL C846_NUM_1                     BINARY FIXED (31,0);
 DCL C846_ADDRLINE                  CHAR (30);
 DCL C846_POS (30)                  CHAR (1) DEFINED C846_ADDRLINE;
 DCL C846_ADDR_LINE                 CHAR (30);
 DCL 1 C846_ADDR_LINE_DEF           DEFINED C846_ADDR_LINE,
      3 C846_LINE_1_11              CHAR (11),
      3 FILL_1                      CHAR (19);
 DCL C846_TEXT_RAD                  CHAR (30);
 DCL 1 C846_TEXT_RAD_DEF            DEFINED C846_TEXT_RAD,
      3 C846_TEXT_FALT              CHAR (02),
      3 FILL_3                      CHAR (28);
 DCL C846_CASE_1                    CHAR (01);
 DCL C846_CASE_2                    CHAR (01);
 DCL C846_VAT_NUM                   CHAR (12);   /*S1710905*/

 DCL C678_COUNTRY_DENMARK           CHAR (03) INIT ('678');
 DCL C678_PARM_FILE_RCBDRF1_CUNOUSE CHAR(8);
 DCL C678_PARM_FILE_RCBDRF1_AAS_ADD CHAR(5);
 DCL C678_NUM                       BINARY FIXED (31,0);
 DCL C678_NUM_1                     BINARY FIXED (31,0);
 DCL C678_ADDRLINE                  CHAR (30);
 DCL C678_POS (30)                  CHAR (1) DEFINED C678_ADDRLINE;
 DCL C678_ADDR_LINE                 CHAR (30);
 DCL 1 C678_ADDR_LINE_DEF           DEFINED C678_ADDR_LINE,
      3 C678_LINE_1_11              CHAR (11),
      3 FILL_1                      CHAR (19);
 DCL C678_TEXT_RAD                  CHAR (30);
 DCL 1 C678_TEXT_RAD_DEF            DEFINED C678_TEXT_RAD,
      3 C678_TEXT_FALT              CHAR (02),
      3 FILL_3                      CHAR (28);
 DCL C678_CASE_1                    CHAR (01);
 DCL C678_CASE_2                    CHAR (01);
 DCL C678_VAT_NUM                   CHAR (08);   /*S1710905*/

 DCL C806_COUNTRY_NORWAY            CHAR (03) INIT ('806');
 DCL C806_PARM_FILE_RCBDRF1_CUNOUSE CHAR(8);
 DCL C806_PARM_FILE_RCBDRF1_AAS_ADD CHAR(5);
 DCL C806_NUM                       BINARY FIXED (31,0);
 DCL C806_NUM_1                     BINARY FIXED (31,0);
 DCL C806_ADDRLINE                  CHAR (30);
 DCL C806_POS (30)                  CHAR (1) DEFINED C806_ADDRLINE;
 DCL C806_ADDR_LINE                 CHAR (30);
 DCL 1 C806_ADDR_LINE_DEF           DEFINED C806_ADDR_LINE,
      3 C806_LINE_1_11              CHAR (11),
      3 FILL_1                      CHAR (19);
 DCL C806_TEXT_RAD                  CHAR (30);
 DCL 1 C806_TEXT_RAD_DEF            DEFINED C806_TEXT_RAD,
      3 C806_TEXT_FALT              CHAR (02),
      3 FILL_3                      CHAR (28);
 DCL C806_CASE_1                    CHAR (01);
 DCL C806_CASE_2                    CHAR (01);
 DCL C806_VAT_NUM                   CHAR (09);   /*S1710905*/

 DCL C702_COUNTRY_FINLAND           CHAR (03) INIT ('702');
 DCL C702_PARM_FILE_RCBDRF1_CUNOUSE CHAR(8);
 DCL C702_NUM                       BINARY FIXED (31,0);
 DCL C702_NUM_1                     BINARY FIXED (31,0);
 DCL C702_ADDRLINE                  CHAR (30);
 DCL C702_POS (30)                  CHAR (1) DEFINED C702_ADDRLINE;
 DCL C702_ADDR_LINE                 CHAR (30);
 DCL 1 C702_ADDR_LINE_DEF           DEFINED C702_ADDR_LINE,
      3 C702_LINE_1_11              CHAR (11),
      3 FILL_1                      CHAR (19);
 DCL C702_TEXT_RAD                  CHAR (30);
 DCL 1 C702_TEXT_RAD_DEF            DEFINED C702_TEXT_RAD,
      3 C702_TEXT_FALT              CHAR (03),
      3 FILL_3                      CHAR (27);
 DCL C702_CASE_1                    CHAR (01);
 DCL C702_CASE_2                    CHAR (01);
 DCL C702_VAT_FIN                   CHAR (08);   /*S1710905*/
 DCL C702_VAT_EST                   CHAR (09);   /*S1710905*/
 DCL C702_VAT_LIT                   CHAR (09);   /*S1710905*/
 DCL C702_VAT_LAT                   CHAR (11);   /*S1710905*/
 /*---------------------------------------- END USER DEFINED PROCESS */
1/********************************************************************/
 /*  BUILTIN FUNCTIONS                                               */
 /********************************************************************/
 DCL (ADDR,
 /************ LOCAL DECLARATION FOR NL*******************************/
      DATETIME,
      TRANSLATE,
 /*********** END OF LOCAL DECLARATION FOR NL ************************/
      NULL)   BUILTIN;
1/********************************************************************/
 /* DB2/SQL SQLCA                                                    */
 /********************************************************************/
  EXEC SQL
    INCLUDE SQLCA
    ;
 /*********************************************************************/
 /***       LOKALE DECLARES       CENTRAL REGION START              ***/
 /***       LOKALE DECLARES       CENTRAL REGION START              ***/
 /***       LOKALE DECLARES       CENTRAL REGION START              ***/
 /*********************************************************************/
 /*-------------------------------------------------------------------*/
 /***   VARIABLES                                                   ***/
 /*-------------------------------------------------------------------*/
   DECLARE I BINARY FIXED(31) STATIC INITIAL(0);     /* LOOP VARIABLE */
   DECLARE J BINARY FIXED(31) STATIC INITIAL(0);     /* LOOP VARIABLE */
   DECLARE HELP30 CHAR(30) STATIC INIT(' ');    /* working variable   */
   DECLARE HELP30G CHAR(30) STATIC INIT(' ');   /* working variable   */
 /*-------------------------------------------------------------------*/
 /***   BUILTIN                                                     ***/
 /*-------------------------------------------------------------------*/
   DCL  SUBSTR     BUILTIN;
   DCL  VERIFY     BUILTIN;
   DCL  LENGTH     BUILTIN;      /* @HM0600 */
   DCL  HEX        BUILTIN;
 /*-------------------------------------------------------------------*/
 /***   FILES                                                       ***/
 /*-------------------------------------------------------------------*/
   DCL  SYSPRINT   FILE EXTERNAL PRINT;
 /*  DCL UKADR#OM FILE RECORD SEQUENTIAL INPUT ;*/ /* SOC PCEDSP-0420 */
 /*********************************************************************/
 /***       LOKALE DECLARES       CENTRAL REGION END                ***/
 /***       LOKALE DECLARES       CENTRAL REGION END                ***/
 /***       LOKALE DECLARES       CENTRAL REGION END                ***/
 /*********************************************************************/
1/********************************************************************/
 /*                 S T A R T   P R O C E S S I N G                  */
 /********************************************************************/
                                         /* SET LEVEL AND MOD NAME   */
 WRK_LEVEL = PARM_INT_AREA.ID_MOD_LEVEL + 1;
 PARM_INT_AREA.ID_MOD_LEVEL            = WRK_LEVEL;
 PARM_INT_AREA.ID_MOD_PATH (WRK_LEVEL) = 'RCBDR4U';
                                         /* USER DEFINED PROCESS     */
 SWITCH_USER_EXIT = TRUE;

 SELECT (PARM_INT_AREA.COUNTRY_NUMBER) ;
    WHEN ('846')      /*   SWEDEN   */
       DO ;
          CALL C846_PROC;
       END ;
    WHEN ('702')      /*   FINLAND  */
       DO ;
          CALL C702_PROC;
       END ;
    WHEN ('678')      /*   DENMARK  */
       DO ;
          CALL C678_PROC;
       END ;
    WHEN ('806')      /*   NORWAY   */
       DO ;
          CALL C806_PROC;
       END ;
    WHEN ('758') DO  ;         /* --- START COUNTRY "758" - 16/12/97 */
                       /* -------------------------------------------*/
       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'   ;
       IF PARM_FILE_RCBDRF1.FHSISOI ¬= 'A'
          THEN PARM_FILE_RCBDRF1.FHSISOI = 'B' ;
       IF PARM_FILE_RCBDRF1.BUCODE = ''
                            THEN PARM_FILE_RCBDRF1.BUCODE= '9001'     ;
                       /* -------------------------------------------*/
                       /* -------------------- "PRIME INP" HANDLING" */
                       /* -------------------------------------------*/
                       /* MOVE ALWAYS INDICATOR TO COUNTRY USE       */
                       /* -------------------------------------------*/
       PARM_FILE_RCBDRF1.UDTECUF  = DATA_ORIGIN                       ;
                             /* -------------     B.A.U. ONLY ....   */
                             /* ...MOVE DATA FROM ARRAY 4 E 5        */
       SELECT;                        /*  PCR662 - country 758 */
          WHEN (PARM_FILE_RCBDRF1.FCUSEMB <> '1')
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '0';
          END;
          OTHERWISE;
       END;                          /*  PCR662 - country 758 */
       IF DATA_ORIGIN = '0'
       THEN DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR   =
               PARM_USER_EXTRA_INFO.ADDR_LINES(4)                     ;
          PARM_FILE_RCBDRF1.ICUSCTY   =
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),7,24)        ;
          PARM_FILE_RCBDRF1.ICUSGZC   =
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,5) || '   ';
       END                                                            ;
                             /* ------------- OTHERWISE              */
                             /* ------------- ALSO  PRIME INPUT...   */
                             /* ...MOVE DATA FROM ARRAY 1-2-3-4      */
       ELSE DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUS3AD=PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,5) || '   ';
       END                                                            ;
                       /* -------------------------------------------*/
                       /* ----------------END  "PRIME INP" HANDLINg  */
                       /* -------------------------------------------*/
    END  ;                     /* --- END COUNTRY "758" --- 16/12/97 */
    WHEN ('838') DO  ;         /* --- START COUNTRY "838" - 09/02/99 */
                             /* ...PRENDE DATI DA ARRAY 4 E 5        */
       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'   ;
       IF PARM_FILE_RCBDRF1.FHSISOI ¬= 'A'
          THEN PARM_FILE_RCBDRF1.FHSISOI = 'B' ;

       PARM_FILE_RCBDRF1.ICUSGZC='';            /* CR-13 (CHG0459A)  */

       SELECT (PARM_FILE_RCBDRF1.FCUSEMB); /*  PCR662 - country 838 */
          WHEN ('E')
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '1';
          END;
          OTHERWISE
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = ' ';
          END;
       END;                                 /*  PCR662 - country 838 */
       IF DATA_ORIGIN = '1'
       THEN DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUS3AD=PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,5) || '   ';
       END                                                            ;
                       /* -------------------------------------------*/
                       /* -----------------FINE GESTIONE "PRIME INP" */
                       /* -------------------------------------------*/
    END  ;                     /* --- END COUNTRY "838" --- 09/02/99 */
    WHEN ('822') DO  ;         /* --- START COUNTRY "822" - 09/02/99 */
                             /* ...MOVE DATA FROM ARRAY 4 E 5        */
       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'   ;
       IF PARM_FILE_RCBDRF1.FHSISOI ¬= 'A'
          THEN PARM_FILE_RCBDRF1.FHSISOI = 'B' ;

       PARM_FILE_RCBDRF1.ICUSGZC='';            /* CR-13 (CHG0459A)  */

       SELECT (PARM_FILE_RCBDRF1.FCUSEMB); /*  PCR662 - country 822 */
          WHEN ('E')
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '1';
          END;
          OTHERWISE
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = ' ';
          END;
       END;                                 /*  PCR662 - country 822 */
       IF DATA_ORIGIN = '1'
       THEN DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUS3AD=PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,5) || '   ';
       END                                                            ;
    END  ;                     /* --- END COUNTRY "822" --- 09/02/99 */
    WHEN ('755') DO  ;         /* --- START COUNTRY "755" - 04/06/99 */
                             /* ...MOVE DATA FROM ARRAY 4 E 5        */
       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'   ;
       IF PARM_FILE_RCBDRF1.FHSISOI ¬= 'A'
          THEN PARM_FILE_RCBDRF1.FHSISOI = 'B' ;
       SELECT (PARM_FILE_RCBDRF1.FCUSEMB); /*  PCR662 - country 755 */
          WHEN ('D')                       /*  S1413683  */
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '1';
          END;
          OTHERWISE
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = ' ';
          END;
       END;                                 /*  PCR662 - country 755 */
       IF DATA_ORIGIN = '1'
       THEN DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUS3AD=PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,5) || '   ';
       END                                                            ;
       ELSE DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR   =
               PARM_USER_EXTRA_INFO.ADDR_LINES(2)                     ;
         K = 0  ;
         KK= 0  ;
         DCL P        PIC '9';
         P = 0  ;
         ZIP ='00755' ;
         DO J = 1 TO 10 ;                     /* FIND FIRST NUMERIC   */
            KK = INDEX(PARM_USER_EXTRA_INFO.ADDR_LINES(3),P) ;
                                              /*POSITION IN ADDR_LINE */
            P = P + 1 ;                       /* p = NUM. DA 0 A 9    */
            IF KK > 0 & K = 0 THEN K = KK ;   /* POSITION OF FIRST    */
            IF KK < K & KK > 0 THEN K = KK ;  /* NUMBER IN AREA       */
         END ;
         IF K > 0 THEN DO ;
           ZIP = SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(3),K,5) ;
           IF VERIFY(ZIP,'0123456789') ¬= 0
              THEN ZIP ='00755' ;
         END ;
         ELSE ZIP ='00755' ;
         PARM_FILE_RCBDRF1.ICUSGZC = ZIP || '   ' ;
         IF ZIP ¬= '00755' & ZIP ¬= ' '
         THEN DO ;
              II  = 30 -(K+4)  ;          /* LENGTH OF FIELD CITY     */
              III = K + 5      ;          /* POSITION OF FIELD CITY   */
              SUBSTR(PARM_FILE_RCBDRF1.ICUSCTY,III,II) =
              SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(3),III,II) ;
         END ;
         ELSE PARM_FILE_RCBDRF1.ICUSCTY =
                PARM_USER_EXTRA_INFO.ADDR_LINES(3) ;

       END ;
                       /* -------------------------------------------*/
                       /* -----------------END  "PRIME INP" HANDLINg */
                       /* -------------------------------------------*/
    END  ;                     /* --- END COUNTRY "755" --- 04/06/99 */
    WHEN ('726') DO  ;         /* --- START COUNTRY "726" - 11/05/99 */
                             /* ...MOVE DATA FROM ARRAY 4 E 5        */
       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'   ;
       IF PARM_FILE_RCBDRF1.FHSISOI ¬= 'A'
          THEN PARM_FILE_RCBDRF1.FHSISOI = 'B' ;
       SELECT (PARM_FILE_RCBDRF1.FCUSEMB);   /*  PCR662 - country 726 */
          WHEN ('Y')
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '1';
          END;
          OTHERWISE
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = ' ';
          END;                               /*  PCR662 - country 726 */
       END;
       IF DATA_ORIGIN = '1'
       THEN DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUS3AD=PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,6) || '  ' ;
       END                                                            ;
       ELSE DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR   =
               PARM_USER_EXTRA_INFO.ADDR_LINES(4)                     ;
          PARM_FILE_RCBDRF1.ICUSCTY   =
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),8,23)        ;
          PARM_FILE_RCBDRF1.ICUSGZC   =
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,6) || '  ' ;
       END                                                            ;
                       /* -------------------------------------------*/
                       /* -----------------END  "PRIME INP" HANDLINg */
                       /* -------------------------------------------*/
    END  ;                     /* --- END COUNTRY "726" --- 11/05/99 */
    WHEN ('808','865')         /* --- START COUNTRY 808,865-23/07/09 */
    DO  ;                      /*CHG0027B*/
      IF PARM_FILE_RCBDRF1.BUDIV  = ''
         THEN PARM_FILE_RCBDRF1.BUDIV = '2'     ;
      IF PARM_FILE_RCBDRF1.BUCODE = ''
         THEN PARM_FILE_RCBDRF1.BUCODE= '9001'  ;
      PARM_FILE_RCBDRF1.UDTECUF  = DATA_ORIGIN  ;
      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);
         WHEN ('E','1')
         DO;
            PARM_FILE_RCBDRF1.FCUSEMB = '1';
         END;
         OTHERWISE
         DO;
            PARM_FILE_RCBDRF1.FCUSEMB = '0';
         END;
      END;

       IF DATA_ORIGIN = '1'
       THEN DO;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUS3AD=PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,5) ;
       END;
       ELSE DO ;
           IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,5),
             '0123456789')  =  0 THEN
           DO; /*trim the spaces for countrty*/
              PARM_FILE_RCBDRF1.ICUSCTY   =
              TRIM(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),7,24),' ');
              PARM_FILE_RCBDRF1.ICUSGZC   =
              SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,5)  ;
           END;
           ELSE
           DO;
              PARM_FILE_RCBDRF1.ICUSCTY   =
              PARM_USER_EXTRA_INFO.ADDR_LINES(5);
           END;
   /* COMMENTED AS PART OF TREC - 96 */
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(4);
   /*     PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(5);
   */
       END;
                       /* -------------------------------------------*/
                       /* -----------------END  "PRIME INP" HANDLINg */
                       /* -------------------------------------------*/
    END  ;                     /* --- END   COUNTRY 808,865-23/07/09 */
    WHEN ('666') DO  ;         /* --- START COUNTRY "666" - 11/05/99 */
                             /* ...MOVE DATA FROM ARRAY 4 E 5        */
       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'   ;
       IF PARM_FILE_RCBDRF1.FHSISOI ¬= 'A'
          THEN PARM_FILE_RCBDRF1.FHSISOI = 'B' ;
       SELECT (PARM_FILE_RCBDRF1.FCUSEMB);   /*  PCR662 - country 666 */
          WHEN ('Y')
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '1';
          END;
          OTHERWISE
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = ' ';
          END;                               /*  PCR662 - country 666 */
       END;
       IF DATA_ORIGIN = '1'
       THEN DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUS3AD=PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,5) || '  ' ;
       END                                                            ;
       ELSE DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR   =
               PARM_USER_EXTRA_INFO.ADDR_LINES(4)                     ;
          PARM_FILE_RCBDRF1.ICUSCTY   =
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),8,23)        ;
          PARM_FILE_RCBDRF1.ICUSGZC   =
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,5) || '  ' ;
       END                                                            ;
                       /* -------------------------------------------*/
                       /* -----------------END  "PRIME INP" HANDLING */
                       /* -------------------------------------------*/
    END  ;                     /* --- END COUNTRY "666" --- 11/05/99 */
    WHEN ('862') DO  ;         /* --- START COUNTRY "862" - 04/07/00 */

       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'   ;
       IF PARM_FILE_RCBDRF1.FHSISOI ¬= 'A'
          THEN PARM_FILE_RCBDRF1.FHSISOI = 'B' ;
       IF PARM_FILE_RCBDRF1.BUCODE = ''
                            THEN PARM_FILE_RCBDRF1.BUCODE= '9001'     ;

       PARM_FILE_RCBDRF1.ICUSGZC='';            /* CR-13 (CHG0459A)  */

       SELECT (PARM_FILE_RCBDRF1.FCUSEMB); /*  PCR662 - country 862 */
          WHEN ('E')
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '1';
          END;
          OTHERWISE
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = ' ';
          END;
       END;                                 /*  PCR662 - country 862 */
       IF DATA_ORIGIN = '1'
       THEN DO                                                        ;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUS3AD=PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,5) || '  ' ;
       END                                                            ;
   /*  ELSE DO  CODICE TOLTO IN DATA 20/01/01                         ;
          PARM_FILE_RCBDRF1.NCUSSTR=PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          PARM_FILE_RCBDRF1.ICUSCTY=PARM_USER_EXTRA_INFO.ADDR_LINES(2);
          PARM_FILE_RCBDRF1.ICUSGZC=
               SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(3),1,5) || '  ' ;
       'NCUSSTR' LO PRENDI DALL'ARRAY(1),
       'ICUSCTY' LO PRENDI DALL'ARRAY(2),
       'ICUSGZT' LO PRENDI DALL'ARRAY(3) -> PRIME 5 POSIZIONI.
       END                                                            ;
   */
                       /* -------------------------------------------*/
                       /* -----------------END  "PRIME INP" HANDLING */
                       /* -------------------------------------------*/
    END  ;                     /* --- END COUNTRY "862" --- 04/07/00 */
    /* ROSOUTH */

    /* ROWEST  */
    WHEN ('706') DO ;
       IF DATA_ORIGIN ¬= '1'
       THEN DO;
       %INCLUDE (RCBMK3HE);            /* USER EXIT CODE *02/12/97*/
       END;

    END ;
    WHEN ('624') DO ;  /* INSERT REST OF WESTERN REGION HERE!!! */ /**/
    /* *************************************************
    /* AJOUT MODIF POUR CLIENTS B/L SANS INVENTAIRE - CEDS 3.0 - 0599
    /* *************************************************
    IF PARM_FILE_RCBDRF1.FHSISOI = 'A' THEN
       PARM_FILE_RCBDRF1.DATA.IODPDBU = '2230XX';
    /* *************************************************
    IF PARM_FILE_RCBDRF1.DATA.CUNOUSE = '00000132' THEN
    DO;
       PUT SKIP LIST ('======= EXTRACT RCMS CUST ==============');
       PUT SKIP LIST (PARM_FILE_RCBDRF1.ICUSANO);
       PUT SKIP LIST (PARM_FILE_RCBDRF1.CUNAME );
       PUT SKIP LIST (PARM_FILE_RCBDRF1.NCUSSTR);
       PUT SKIP LIST (PARM_FILE_RCBDRF1.ICUSCTY);
       PUT SKIP LIST (PARM_FILE_RCBDRF1.ICUS3AD);
       PUT SKIP LIST (PARM_FILE_RCBDRF1.ICUSGZC);
       PUT SKIP LIST ('======= EXTRA INFO =====================');
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.HW_ADDR_FLAG );
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(1));
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(2));
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(3));
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(4));
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(5));
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(6));
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(7));
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(8));
       PUT SKIP LIST (PARM_USER_EXTRA_INFO.ADDR_LINES(9));
  ********************************************************* */
   /* -------------      ---------------    -----------     */
   /* IMPLEMENTATION ADDRESS LINES                          */
   /* CUSTOMER STREET = LINE 2                              */
   /* POST CODE + CITY= LINE 3                              */
   /* ZIPCODE         = LINE 4                              */
   /* PHONE NUMBER    = LINE 6                              */
   /* -------------      ---------------    -----------     */

   /*  DATA.NCUSSTR = PARM_USER_EXTRA_INFO.ADDR_LINES(2) ;
       DATA.ICUSCTY = PARM_USER_EXTRA_INFO.ADDR_LINES(3) ;
       DATA.ICUSGZC = PARM_USER_EXTRA_INFO.ADDR_LINES(4) ;
       DATA.ICUS3AD = PARM_USER_EXTRA_INFO.ADDR_LINES(6) ;  */

   IF DATA_ORIGIN ¬= '1'
   THEN DO;
 /*PARM_FILE_RCBDRF1.DATA.NCUSSTR = PARM_USER_EXTRA_INFO.ADDR_LINES(2) ;
   PARM_FILE_RCBDRF1.DATA.ICUSCTY = PARM_USER_EXTRA_INFO.ADDR_LINES(3) ;
   PARM_FILE_RCBDRF1.DATA.ICUSGZC = PARM_USER_EXTRA_INFO.ADDR_LINES(4) ;
   PARM_FILE_RCBDRF1.DATA.ICUS3AD = PARM_USER_EXTRA_INFO.ADDR_LINES(6) ;
                                                                      */
     CALL RCBDR4U_BAU_FROM_CIFDB;                          /* S1527886*/
   END;
    END;
    /* ROWEST  */

 /* CENTRAL REGION START   */
   WHEN ('724') DO;          /**** START COUNTRY 724 = DEUTSCHLAND ****/

 %IF TEST = 'Y' %THEN %DO;                                        /*%*/
 PUT SKIP EDIT ('RCBDR4U  POS. 01')(A);                           /*%*/
 %END;                                                            /*%*/

    /*----------------------------------------------------------------*/
    /***          BUDIV  VON BLANK AUF DEFAULTWERT '2' SETZEN       ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV = ' '
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';
    /*----------------------------------------------------------------*/
    /***          BUCODE BEI KUNDEN OHNE INVENTORY UMSETZEN         ***/
    /*----------------------------------------------------------------*/

 %IF TEST = 'Y' %THEN %DO;                                        /*%*/
 PUT SKIP EDIT ('RCBDR4U  POS. 02')(A);                           /*%*/
 %END;                                                            /*%*/

 %IF TEST = 'Y' %THEN %DO;                                        /*%*/
 PUT SKIP EDIT ('RCBDR4U  POS. 03')(A);                           /*%*/
 %END;                                                            /*%*/

    /*----------------------------------------------------------------*/
    /***          AUFBEREITEN ADRESSE                               ***/
    /*----------------------------------------------------------------*/
      SELECT(DATA_ORIGIN);
  /*------------------------------------------------------------------*/
  /*    old code
        WHEN ('0','2')                    /* CEDS BAU VORHANDEN
          DO;

 %IF TEST = 'Y' %THEN %DO;
 PUT SKIP EDIT ('RCBDR4U  POS. 04')(A);
 %END;

            PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /*TELEFONNUMMER
                                                   /* AUSBLANKEN
                                                   /* VON BRIDGE NICHT
                                                   /* VORHANDEN
            PARM_FILE_RCBDRF1.NCUSSTR =
                   PARM_USER_EXTRA_INFO.ADDR_LINES(4);

            PARM_FILE_RCBDRF1.ICUSGZC =
                  SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,5);

            PARM_FILE_RCBDRF1.ICUSCTY =
              SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),7,24);
          END;
  /**   old code   */
  /* ---------------------------------------------------------------*/
  /*    PCEDSP-0294:BH 1.0 Updates on Userexists for CI-FDB  */
  /*  --------------------------------------------------------------*/
          WHEN ('0','2')                    /* CEDS BAU IS AVAILABLE
    */
             DO;
              CALL RCBDR4U_BAU_FROM_CIFDB;
             END;              /**** END    WHEN ('0','2') DO
    */
    /*    PCEDSP-0294:BH 1.0 Updates on Userexists for CI-FDB  */
    /* ------------------------------------------------------  */
        WHEN ('1')                        /* PRIME INPUT              */
          DO;                          /* KUNDENDATEN VON PRIME INPUT */

 %IF TEST = 'Y' %THEN %DO;                                        /*%*/
 PUT SKIP EDIT ('RCBDR4U  POS. 05')(A);                           /*%*/
 %END;                                                            /*%*/

       /* KUNDENDATEN VON PRIME INPUT, DANN STEHT PLZ AUCH IN ADR.LIN3*/
                                                       /*PLZ+ORT ???  */
            PARM_FILE_RCBDRF1.NCUSSTR =
             PARM_USER_EXTRA_INFO.ADDR_LINES(4);       /*STRASSE*/

            PARM_FILE_RCBDRF1.ICUS3AD = '';    /*TELEFONNUMMER    */

            HELP30G=  PARM_USER_EXTRA_INFO.ADDR_LINES(5);
   LOOP724O1:
             DO I = 1 BY 1 WHILE (I <= 30);
                J = VERIFY(SUBSTR(HELP30G,I,1),'1234567890');
                IF J = 0 THEN LEAVE LOOP724O1;
             END;
             HELP30G = SUBSTR(HELP30G,I);
   LOOP724O2:
             DO K = 1 BY 1 WHILE (K <= 31 - I);
                J = VERIFY(SUBSTR(HELP30G,K,1),' ');
                IF J = 0 THEN LEAVE LOOP724O2;
             END;
                PARM_FILE_RCBDRF1.ICUSGZC =
                SUBSTR(HELP30G,1,K-1);

                PARM_FILE_RCBDRF1.ICUSCTY =
                 SUBSTR(HELP30G,K+1);
          END;
        OTHERWISE;                        /* UNKOWN                   */
                                          /* UNVERAENDERT LASSEN      */
      END; /*SELECT*/
                                          /* BEGINN FI01 */
                                          /* EMBARGOKENNZEICHEN */
                                          /*START PCR 395 */
 /*   IF PARM_FILE_RCBDRF1.FCUSEMB = 'Y'      /* EMBARGOKUNDE       */
      IF PARM_FILE_RCBDRF1.FCUSEMB = 'X'      /* EMBARGOKUNDE       */
                                          /*END PCR 395  */
                                          /* BEI PI INPUT ????? */
      THEN PARM_FILE_RCBDRF1.FCUSEMB='1';
      ELSE PARM_FILE_RCBDRF1.FCUSEMB='0';
                                         /* ENDE   FI01 */

 %IF TEST = 'Y' %THEN %DO;                                        /*%*/
 PUT SKIP EDIT ('RCBDR4U  POS. 07')(A);                           /*%*/
 %END;                                                            /*%*/

   END;                      /**** END   COUNTRY 724 = DEUTSCHLAND ****/
 /*********************************************************************/
   WHEN ('740')              /**** START COUNTRY 740 = UNGARN      ****/
     do;
    /*----------------------------------------------------------------*/
    /*** WENN IODPDBU.BUDIV UNGLEICH '2', DANN  IODPDBU.BUDIV = '2' ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

    /*---------------------------------------------------------------*/
    /* WENN DATA_ORIGIN = '0' ODER '2', DANN DURCHSUCHEN DER         */
    /* ADRESSZEILEN, STARTEND VON DER LETZTEN ADRESSZEILE:           */
    /* - ICUS3AD = ' '                                               */
    /* - WENN SUBSTR(ADRESSZEILE,1,4) = NUMERISCH DANN UEBERNEHME    */
    /*   SUBSTR(ADRESSZEILE,1,4) IN ICUSGZC                          */
    /*   UND SUBSTR(ADRESSZEILE,6,REST) IN ICUSCTY                   */
    /*  ANDERNFALLS                                                  */
    /*   WENN SUBSTR(ADRESSZEILE,3,4) = NUMERISCH DANN UEBERNEHME    */
    /*   SUBSTR(ADRESSZEILE,3,4) IN ICUSGZC                          */
    /*   UND SUBSTR(ADRESSZEILE,8,REST) IN ICUSCTY                   */
    /* - DIE ADRESSZEILE, DIE VOR DER O.G. ADRESSZEILE (ORT) LIEGT,  */
    /*   IST DIE STRASSE UND SOLL IN DAS FELD NCUSSTR EINGESTELLT    */
    /*   WERDEN.                                                     */
    /* - TRIFFT O.G. LOGIK NICHT ZU (ALSO ORTSZEILE NICHT GEFUNDEN), */
    /*   DANN SOLL FOLGENDES EINGESTELLT WERDEN:                     */
    /*     ICUS3AD = 'Incorrect/Missing address'                     */
    /*     ICUSGZC = BLANK                                           */
    /*     ICUSCTY = 'Please correct in SOF'                         */
    /* ADRESSZEILE 1 WIRD IMMER IN CUSNAME ABGEFUELLT.               */
    /*---------------------------------------------------------------*/

      SELECT(DATA_ORIGIN);
        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* TELEFONNUMMER    */
                                                  /*  AUSBLANKEN      */
 LOOP740:  DO I = 9 TO 2 BY -1;     /* LOOP THRU ADDRESS-LINES 9 TO 2 */
                                    /* SEARCH FOR ZIP-CODE            */
              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4),
                        '0123456789') = 0 THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),6,25);
                 LEAVE LOOP740;
                 END;
              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,4),
                        '0123456789') = 0 THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),8,23);
                 LEAVE LOOP740;
                 END;
           END loop740;      /**** END    DO I = 9 TO 2 BY -1         */
           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN DO;
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        OTHERWISE;                      /* DATA_ORIGIN NOT "0" OR "2" */
                                        /*   DO NOT CHANGE ANYTHING   */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);               /* C0022-0900 */
         WHEN ('E')                                     /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '1';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
         OTHERWISE                                      /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '0';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
      END;                                              /* C0022-0900 */
                                                        /* C0022-0900 */
   END;                      /**** END   COUNTRY 740 = UNGARN      ****/
 /*********************************************************************/
   WHEN ('708')              /**** START COUNTRY 708 = SLOWENIEN   ****/
     do;
    /*----------------------------------------------------------------*/
    /*** WENN IODPDBU.BUDIV UNGLEICH '2', DANN  IODPDBU.BUDIV = '2' ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

      SELECT(DATA_ORIGIN);
        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* TELEFONNUMMER    */
                                                  /*  AUSBLANKEN      */
 LOOP708:  DO I = 9 TO 2 BY -1;     /* LOOP THRU ADDRESS-LINES 9 TO 2 */
                                    /* SEARCH FOR ZIP-CODE            */
              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4),
                        '0123456789') = 0 THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),6,25);
                 LEAVE LOOP708;
                 END;
              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,4),
                        '0123456789') = 0 THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),8,23);
                 LEAVE LOOP708;
                 END;
              IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,3) = 'SLO'
               & VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),5,4),
                        '0123456789') = 0 THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),5,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),10,21);
                 LEAVE LOOP708;
                 END;
           END;              /**** END    DO I = 9 TO 2 BY -1         */
           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN do;
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        OTHERWISE;                      /* DATA_ORIGIN NOT "0" OR "2" */
                                        /*   DO NOT CHANGE ANYTHING   */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);               /* C0022-0900 */
         WHEN ('E')                                     /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '1';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
         OTHERWISE                                      /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '0';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
      END;                                              /* C0022-0900 */
                                                        /* C0022-0900 */
   END;                      /**** END   COUNTRY 708 = SLOWENIEN   ****/
 /*********************************************************************/
   WHEN ('668','693')        /**** START COUNTRY 668 = tschechei   ****/
     do;                     /**** und   693 slowakei              ****/
    /*----------------------------------------------------------------*/
    /*** WENN IODPDBU.BUDIV UNGLEICH '2', DANN  IODPDBU.BUDIV = '2' ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

    /*---------------------------------------------------------------*/
    /* WENN DATA_ORIGIN = '0' ODER '2', DANN DURCHSUCHEN DER         */
    /* ADRESSZEILEN, STARTEND VON DER LETZTEN ADRESSZEILE:           */
    /* - ICUS3AD = ' '                                               */
    /* - WENN SUBSTR(ADRESSZEILE,1,3) = NUMERISCH und                */
    /*        SUBSTR(ADRESSZEILE,5,2) = NUMERISCH und                */
    /*        SUBSTR(ADRESSZEILE,4,1) = blank     DANN UEBERNEHME    */
    /*   SUBSTR(ADRESSZEILE,1,6) IN ICUSGZC                          */
    /*   UND SUBSTR(ADRESSZEILE,8,REST) IN ICUSCTY                   */
    /* - TRIFFT O.G. LOGIK NICHT ZU (ALSO ORTSZEILE NICHT GEFUNDEN), */
    /*   DANN SOLL FOLGENDES EINGESTELLT WERDEN:                     */
    /*     ICUS3AD = 'Incorrect/Missing address'                     */
    /*     ICUSGZC = BLANK                                           */
    /*     ICUSCTY = 'Please correct in SOF'                         */
    /* ADRESSZEILE 1 WIRD IMMER IN CUSNAME ABGEFUELLT.               */
    /*---------------------------------------------------------------*/

      SELECT(DATA_ORIGIN);
        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* TELEFONNUMMER    */
                                                  /*  AUSBLANKEN      */
 LOOP668:  DO I = 9 TO 2 BY -1;     /* LOOP THRU ADDRESS-LINES 9 TO 2 */
                                    /* SEARCH FOR ZIP-CODE            */
              IF (VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,3),
                        '0123456789') = 0 &
                  VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),5,2),
                        '0123456789') = 0 &
                 SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),4,1) = ' ')
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,6);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),8,23);
                 LEAVE LOOP668;
               END;
           END;              /**** END    DO I = 9 TO 2 BY -1         */
           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN DO;              /* ZIP-CODE not found       */
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        OTHERWISE;                      /* DATA_ORIGIN NOT "0" OR "2" */
                                        /*   DO NOT CHANGE ANYTHING   */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);               /* C0022-0900 */
         WHEN ('E')                                     /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '1';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
         OTHERWISE                                      /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '0';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
      END;                                              /* C0022-0900 */
                                                        /* C0022-0900 */
   END;                      /**** END   COUNTRY 668 = TSCHECHEI   ****/
                             /**** UND   COUNTRY 693 = SLOWAKEI    ****/
 /*********************************************************************/
   WHEN ('820') DO;          /**** START COUNTRY 820 = POLAND      ****/

    /*----------------------------------------------------------------*/
    /*** If IODPDBU.BUDIV not equal '2', then  IODPDBU.BUDIV = '2 ' ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

      SELECT(DATA_ORIGIN);
    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '0' or '2':                                */
    /* - ICUS3AD = ' ' (set phone number to blank)                   */
    /* - search thru the address-lines starting with the address-    */
    /*   line (9.) until the third (3.) looking for the ZIP-code:    */
    /*   if   SUBSTR(address-line,1,2) = numeric   AND               */
    /*        SUBSTR(address-line,4,3) = numeric   AND               */
    /*        SUBSTR(address-line,3,1) = '-'       THEN              */
    /*      copy SUBSTR(address-line,1,6) into ICUSGZC               */
    /*      and SUBSTR(address-line,8,rest) into ICUSCTY             */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,1,5) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,5) into ICUSGZC               */
    /*      and SUBSTR(address-line,7,rest) into ICUSCTY             */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,1,4) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,4) into ICUSGZC               */
    /*      and SUBSTR(address-line,6,rest) into ICUSCTY             */
    /* - if address-line with ZIP-code found then take the line      */
    /*   before and copy this line into NCUSSTR.                     */
    /* - if address-line with ZIP-code could not be found then       */
    /*   insert the folowing text into the respective fields:        */
    /*     ICUS3AD = 'Incorrect/Missing address'                     */
    /*     ICUSGZC = BLANK                                           */
    /*     ICUSCTY = 'Please correct in SOF'                         */
    /* - address-line 1 will always be copied to CUSNAME.            */
    /*---------------------------------------------------------------*/

        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* blank out phone  */
                                                  /*  number field    */
 LOOP820:  DO I = 9 TO 2 BY -1;     /* Loop thru address-lines 9 to 2 */
                                    /* searching for ZIP-code         */
              IF (VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,2),
                        '0123456789') = 0 &
                  VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),4,3),
                        '0123456789') = 0 &
                  SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,1) = '-')
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,6);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),8,23);
                 LEAVE LOOP820;
               END;

              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,5),
                        '0123456789') = 0            /* (foreign ZIP) */
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,5);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),7,23);
                 LEAVE LOOP820;
               END;

              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4),
                        '0123456789') = 0            /* (foreign ZIP) */
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),6,25);
                 LEAVE LOOP820;
               END;
           END;              /**** END    DO I = 9 TO 2 BY -1         */
           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN DO;              /* ZIP-code not found       */
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        WHEN ('1') DO;       /**** PRIME INPUT AVAILABLE ...          */
           PARM_FILE_RCBDRF1.NCUSSTR =                    /*  STREET  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(1);
           PARM_FILE_RCBDRF1.ICUS3AD =             /*  phone number   */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(3);
           PARM_FILE_RCBDRF1.ICUSGZC =                    /* ZIP-LINE */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(4);
           PARM_FILE_RCBDRF1.ICUSCTY =                      /*  CITY  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(2);
           END;              /**** END    WHEN ('1') DO;              */

        OTHERWISE;           /* DATA_ORIGIN NOT ("0" OR "2") OR "1"   */
                             /*   THEN DO NOT CHANGE ANYTHING         */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);               /* C0022-0900 */
         WHEN ('E')                                     /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '1';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
         OTHERWISE                                      /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '0';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
      END;                                              /* C0022-0900 */
                                                        /* C0022-0900 */
   END;                      /**** END   COUNTRY 820 = POLAND      ****/
 /*********************************************************************/
 /*            GMEA CHG0031A CHANGE START                             */
 /* ----------------------------------------------------------------  */
     WHEN ('610','677','725','764'           /* GMEA REGION START  */
          ,'804','823','851')               /*  CHG0031A   */
   DO  ;
      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);
         WHEN ('E','Y')
         DO;
            PARM_FILE_RCBDRF1.FCUSEMB = '1';
         END;
         OTHERWISE
         DO;
            PARM_FILE_RCBDRF1.FCUSEMB = '0';
         END;
      END;                               /* GMEA REGION END    */
       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'     ;
       IF PARM_FILE_RCBDRF1.BUCODE = ''
          THEN PARM_FILE_RCBDRF1.BUCODE= '0100'  ;
       PARM_FILE_RCBDRF1.UDTECUF  = DATA_ORIGIN  ;
      SELECT(DATA_ORIGIN);
    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '0' or '2':                                */
    /* - ICUS3AD = ' ' (set phone number to blank)                   */
    /* - ICUSGZC = ' ' (set zip code to blank for these countries)   */
    /* - search thru the address-lines starting with the address-    */
    /*   line (9.) until the third(3) looking for last "not          */
    /*   empty" (filled in ) line. then                              */
    /*   copy the eniire address line into   ICUSCTY                 */
    /*   copy previous address line   into   NCUSSTR                 */
    /*   address line 1 will always  be copied to CUSNAME.           */
    /*                                                               */
    /*  otherwise (DATA-ORIGIN) = "1", Prime input source):          */
    /*     copy address line 1 to NCUSSTR                            */
    /*     copy address line 2 to ICUSCTY                            */
    /*     copy address line 3 to ICUS3AD                            */
    /*     copy address line 4 to ICUSGZC                            */
    /*                                                               */
    /*---------------------------------------------------------------*/

        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUSGZC = '';   /* blank out zip code   */
           PARM_FILE_RCBDRF1.ICUS3AD = '';       /* and phone number */

           DO I = 9 TO 3 BY -1      /* Loop thru address-lines 9 to 3 */
                                    /* searching for last addr line   */
  /*         WHILE (PARM_USER_EXTRA_INFO.ADDR_LINES(I) < X'80'); */
             WHILE (PARM_USER_EXTRA_INFO.ADDR_LINES(I) = '');
           END;
            IF I  > 3 THEN
            DO;
              PARM_FILE_RCBDRF1.NCUSSTR =
                    PARM_USER_EXTRA_INFO.ADDR_LINES(I-2);
              PARM_FILE_RCBDRF1.ICUSCTY =
                    PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
            END;
          ELSE
            DO;
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUSCTY = '';
            END;
         END; /*   END  WHEN ('0','2')  */
  /*-----------------------------------------------------------------*/

        WHEN ('1') DO;       /**** PRIME INPUT AVAILABLE ...          */
           PARM_FILE_RCBDRF1.NCUSSTR =                    /*  STREET  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(1);
           PARM_FILE_RCBDRF1.ICUS3AD =             /*  phone number   */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(3);
           PARM_FILE_RCBDRF1.ICUSGZC =                    /* ZIP-LINE */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(4);
           PARM_FILE_RCBDRF1.ICUSCTY =                      /*  CITY  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(2);
           END;              /**** END    WHEN ('1') DO;              */
        OTHERWISE;          /* DATA_ORIGIN NOT ("0" OR "2") NOR "1"   */
       END;
     END;                     /* END SELECT(DATA_ORIGIN)   */
 /*********************************************************************/
 /*********************************************************************/
                         /* GMEA CHG0031A CHANGE START                */
   WHEN ('832') DO;          /**** START COUNTRY 832 = SAUDI ARABIA   */
       SELECT (PARM_FILE_RCBDRF1.FCUSEMB);
          WHEN ('E')
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '1';
          END;
          OTHERWISE
          DO;
             PARM_FILE_RCBDRF1.FCUSEMB = '0';
          END;
       END;
       IF PARM_FILE_RCBDRF1.BUDIV  = ''
          THEN PARM_FILE_RCBDRF1.BUDIV = '2'     ;
       IF PARM_FILE_RCBDRF1.BUCODE = ''
          THEN PARM_FILE_RCBDRF1.BUCODE= '0100'  ;
       PARM_FILE_RCBDRF1.UDTECUF  = DATA_ORIGIN  ;
      SELECT(DATA_ORIGIN);
    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '0' or '2':                                */
    /* - ICUS3AD = ' ' (set phone number to blank)                   */
    /* - search thru the address-lines starting with the address-    */
    /*   line (9.) until the second(2.) looking for the ZIP-code:    */
    /*   made of 5 numeric digits wherever within the line.          */
    /*   if found, copy the zip code  into   ICUSGZC                 */
    /*   copy the eniire address line into   ICUSCTY                 */
    /*   copy previous address line   into   NCUSSTR                 */
    /*   address line 1 will always  be copied to CUSNAME.           */
    /*                                                               */
    /*  otherwise (DATA-ORIGIN) = "1", Prime input source):          */
    /*     copy address line 1 to NCUSSTR                            */
    /*     copy address line 2 to ICUSCTY                            */
    /*     copy address line 3 to ICUS3AD                            */
    /*     copy address line 4 to ICUSGZC                            */
    /*                                                               */
    /*---------------------------------------------------------------*/

        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* blank out phone  */
                                                  /*  number field    */
 LOOP832:  DO I = 9 TO 2 BY -1;     /* Loop thru address-lines 9 to 2 */
                                    /* searching for ZIP-code         */
            K = 0;
            KK= 0;
            II= 0;
                                      /*                  */
            DO J = 1 TO 10;         /* find the position in addr_line */
              KK = INDEX
                  (PARM_USER_EXTRA_INFO.ADDR_LINES(I),II);
               II = II + 1;                         /* II NUMB 0 TO 9 */
               IF KK > 0 & K = 0   THEN K = KK ;    /*   POS OF FIRST */
               IF KK < K & KK > 0  THEN K = KK ;    /* NUMBER IN AREA */
            END;
            IF K  > 0 THEN
            DO;
            IF  VERIFY((SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),K,5)),
                        '0123456789') = 0
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),K,5);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
            TRIM(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,30),' ');
                 LEAVE LOOP832;
                 END;
              END;
  /*-----------------------------------------------------------------*/
     END;                            /* END  DO I =  9 TO 2 BY  -1   */
           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN DO;              /* ZIP-code not found       */
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        WHEN ('1') DO;       /**** PRIME INPUT AVAILABLE ...          */
           PARM_FILE_RCBDRF1.NCUSSTR =                    /*  STREET  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(1);
           PARM_FILE_RCBDRF1.ICUS3AD =             /*  phone number   */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(3);
           PARM_FILE_RCBDRF1.ICUSGZC =                    /* ZIP-LINE */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(4);
           PARM_FILE_RCBDRF1.ICUSCTY =                      /*  CITY  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(2);
           END;              /**** END    WHEN ('1') DO;              */
        OTHERWISE;
      END;                   /* END SELECT DATA_ORIGIN                */
   END;                      /**** END   COUNTRY 832 SAUDI ARABIA     */
                             /* GMEA CHG0031A CHANGE END */
 /*********************************************************************/
 /*  WHEN ('642','729') DO;    /**** START COUNTRY 642,729    ****/
   WHEN ('642','707','729','889') DO;       /* GMEA CHG0031A ADDED */
      IF PARM_FILE_RCBDRF1.BUDIV  = ''
         THEN PARM_FILE_RCBDRF1.BUDIV = '2'     ;
      IF (PARM_INT_AREA.COUNTRY_NUMBER = '642'      /* CHG0031A ADDED */
         | PARM_INT_AREA.COUNTRY_NUMBER = '729' )   /* CHG0031A ADDED */
      THEN DO;
          IF PARM_FILE_RCBDRF1.BUCODE = ''
             THEN PARM_FILE_RCBDRF1.BUCODE= '9001'  ;
      END;                                          /* CHG0031A ADDED */
      ELSE DO;                                      /* CHG0031A ADDED */
         IF PARM_FILE_RCBDRF1.BUCODE = ''           /* CHG0031A ADDED */
            THEN PARM_FILE_RCBDRF1.BUCODE= '0100'  ;/* CHG0031A ADDED */
      END;                                          /* CHG0031A ADDED */
      PARM_FILE_RCBDRF1.UDTECUF  = DATA_ORIGIN  ;
      SELECT(DATA_ORIGIN);
    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '0' or '2':                                */
    /* - ICUS3AD = ' ' (set phone number to blank)                   */
    /* - search thru the address-lines starting with the address-    */
    /*   line (9.) until the third (3.) looking for the ZIP-code:    */
    /*   if   SUBSTR(address-line,1,2) = numeric   AND               */
    /*        SUBSTR(address-line,4,3) = numeric   AND               */
    /*        SUBSTR(address-line,3,1) = '-'       THEN              */
    /*      copy SUBSTR(address-line,1,6) into ICUSGZC               */
    /*      and SUBSTR(address-line,8,rest) into ICUSCTY             */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,1,5) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,5) into ICUSGZC               */
    /*      and SUBSTR(address-line,7,rest) into ICUSCTY             */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,1,4) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,4) into ICUSGZC               */
    /*      and SUBSTR(address-line,6,rest) into ICUSCTY             */
    /* - if address-line with ZIP-code found then take the line      */
    /*   before and copy this line into NCUSSTR.                     */
    /* - if address-line with ZIP-code could not be found then       */
    /*   insert the folowing text into the respective fields:        */
    /*     ICUS3AD = 'Incorrect/Missing address'                     */
    /*     ICUSGZC = BLANK                                           */
    /*     ICUSCTY = 'Please correct in SOF'                         */
    /* - address-line 1 will always be copied to CUSNAME.            */
    /*---------------------------------------------------------------*/

        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* blank out phone  */
                                                  /*  number field    */
 LOOP642:  DO I = 9 TO 2 BY -1;     /* Loop thru address-lines 9 to 2 */
                                    /* searching for ZIP-code         */
              IF (VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,2),
                        '0123456789') = 0 &
                  VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),4,3),
                        '0123456789') = 0 &
                  SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,1) = '-')
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,6);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
           TRIM(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),8,23),' ');
                 LEAVE LOOP642;
               END;

              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,5),
                        '0123456789') = 0            /* (foreign ZIP) */
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,5);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
            TRIM(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),7,24),' ');
                 LEAVE LOOP642;
               END;

              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4),
                        '0123456789') = 0            /* (foreign ZIP) */
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
            TRIM(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),6,25),' ');
                 LEAVE LOOP642;
               END;
           END;              /**** END    DO I = 9 TO 2 BY -1         */
           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN DO;              /* ZIP-code not found       */
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        WHEN ('1') DO;       /**** PRIME INPUT AVAILABLE ...          */
           PARM_FILE_RCBDRF1.NCUSSTR =                    /*  STREET  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(1);
           PARM_FILE_RCBDRF1.ICUS3AD =             /*  phone number   */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(3);
           PARM_FILE_RCBDRF1.ICUSGZC =                    /* ZIP-LINE */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(4);
           PARM_FILE_RCBDRF1.ICUSCTY =                      /*  CITY  */
                        TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(2),' ');
           END;              /**** END    WHEN ('1') DO;              */

        OTHERWISE;           /* DATA_ORIGIN NOT ("0" OR "2") OR "1"   */
                             /*   THEN DO NOT CHANGE ANYTHING         */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */
      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);               /* C0022-0900 */
         WHEN ('E','1')                                 /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '1';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
         OTHERWISE                                      /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '0';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
      END;                                              /* C0022-0900 */
                                                        /* C0022-0900 */
   END;                      /**** END   COUNTRY 642,729           ****/
 /*********************************************************************/
   WHEN ('821') DO;          /**** START COUNTRY 821 = Russia      ****/

    /*----------------------------------------------------------------*/
    /*** If IODPDBU.BUDIV not equal '2', then  IODPDBU.BUDIV = '2 ' ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

      SELECT(DATA_ORIGIN);
    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '0' or '2':                                */
    /* - ICUS3AD = ' ' (set phone number to blank)                   */
    /* - search thru the address-lines starting with the address-    */
    /*   line (9.) until the third (3.) looking for the ZIP-code:    */
    /*   if   SUBSTR(address-line,1,6) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,6) into ICUSGZC               */
    /*      and SUBSTR(address-line,8,rest) into ICUSCTY             */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,1,5) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,5) into ICUSGZC               */
    /*      and SUBSTR(address-line,7,rest) into ICUSCTY             */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,1,4) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,4) into ICUSGZC               */
    /*      and SUBSTR(address-line,6,rest) into ICUSCTY             */
    /* - if address-line with ZIP-code found then take the line      */
    /*   before and copy this line into NCUSSTR.                     */
    /* - if address-line with ZIP-code could not be found then       */
    /*   insert the folowing text into the respective fields:        */
    /*     ICUS3AD = 'Incorrect/Missing address'                     */
    /*     ICUSGZC = BLANK                                           */
    /*     ICUSCTY = 'Please correct in SOF'                         */
    /* - address-line 1 will always be copied to CUSNAME.            */
    /*---------------------------------------------------------------*/

        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* blank out phone  */
                                                  /*  number field    */
 LOOP821:  DO I = 9 TO 2 BY -1;     /* Loop thru address-lines 9 to 2 */
                                    /* searching for ZIP-code         */
              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,6),
                        '0123456789') = 0
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,6);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),8,23);
                 LEAVE LOOP821;
               END;

              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,5),
                        '0123456789') = 0            /* (foreign ZIP) */
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,5);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),7,24);
                 LEAVE LOOP821;
               END;

              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4),
                        '0123456789') = 0            /* (foreign ZIP) */
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),6,25);
                 LEAVE LOOP821;
               END;
           END;              /**** END    DO I = 9 TO 2 BY -1         */
           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN DO;              /* ZIP-code not found       */
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        WHEN ('1') DO;       /**** PRIME INPUT AVAILABLE ...          */
           PARM_FILE_RCBDRF1.NCUSSTR =                    /*  STREET  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(1);
           PARM_FILE_RCBDRF1.ICUS3AD =             /*  phone number   */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(3);
           PARM_FILE_RCBDRF1.ICUSGZC =                    /* ZIP-LINE */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(4);
           PARM_FILE_RCBDRF1.ICUSCTY =                      /*  CITY  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(2);
           END;              /**** END    WHEN ('1') DO;              */

        OTHERWISE;           /* DATA_ORIGIN NOT ("0" OR "2") OR "1"   */
                             /*   THEN DO NOT CHANGE ANYTHING         */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);               /* C0022-0900 */
         WHEN ('E')                                     /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '1';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
         OTHERWISE                                      /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '0';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
      END;                                              /* C0022-0900 */
                                                        /* C0022-0900 */
   END;                      /**** END   COUNTRY 821 = Russia      ****/
 /*********************************************************************/
   WHEN ('826',              /**** START COUNTRY 826 = Romania     ****/
                                   /* ZIP-code 4 or 5 digits          */
         '704',              /**** START COUNTRY 704 = Croatia     ****/
                                   /* ZIP-code 5 digits, foreign 4    */
         '644')              /**** START COUNTRY 644 = Bulgaria    ****/
                                   /* ZIP-code 4 digits, foreign 5    */
        DO;
    /*----------------------------------------------------------------*/
    /*** If IODPDBU.BUDIV not equal '2', then  IODPDBU.BUDIV = '2 ' ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

      SELECT(DATA_ORIGIN);
    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '0' or '2':                                */
    /* - ICUS3AD = ' ' (set phone number to blank)                   */
    /* - search thru the address-lines starting with the address-    */
    /*   line (9.) until the third (3.) looking for the ZIP-code:    */
    /*   if   SUBSTR(address-line,1,5) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,5) into ICUSGZC               */
    /*      and SUBSTR(address-line,7,rest) into ICUSCTY             */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,1,4) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,4) into ICUSGZC               */
    /*      and SUBSTR(address-line,6,rest) into ICUSCTY             */
    /* - if address-line with ZIP-code found then take the line      */
    /*   before and copy this line into NCUSSTR.                     */
    /* - if address-line with ZIP-code could not be found then       */
    /*   insert the folowing text into the respective fields:        */
    /*     ICUS3AD = 'Incorrect/Missing address'                     */
    /*     ICUSGZC = BLANK                                           */
    /*     ICUSCTY = 'Please correct in SOF'                         */
    /* - address-line 1 will always be copied to CUSNAME.            */
    /*---------------------------------------------------------------*/

        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* blank out phone  */
                                                  /*  number field    */
 LOOP826:  DO I = 9 TO 2 BY -1;     /* Loop thru address-lines 9 to 2 */
                                    /* searching for ZIP-code         */
              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,5),
                        '0123456789') = 0
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,5);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),7,24);
                 LEAVE LOOP826;
               END;

              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4),
                        '0123456789') = 0
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),6,25);
                 LEAVE LOOP826;
               END;
           END;              /**** END    DO I = 9 TO 2 BY -1         */
           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN DO;              /* ZIP-code not found       */
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        WHEN ('1') DO;       /**** PRIME INPUT AVAILABLE ...          */
           PARM_FILE_RCBDRF1.NCUSSTR =                    /*  STREET  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(1);
           PARM_FILE_RCBDRF1.ICUS3AD =             /*  phone number   */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(3);
           PARM_FILE_RCBDRF1.ICUSGZC =                    /* ZIP-LINE */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(4);
           PARM_FILE_RCBDRF1.ICUSCTY =                      /*  CITY  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(2);
           END;              /**** END    WHEN ('1') DO;              */

        OTHERWISE;           /* DATA_ORIGIN NOT ("0" OR "2") OR "1"   */
                             /*   THEN DO NOT CHANGE ANYTHING         */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);               /* C0022-0900 */
         WHEN ('E')                                     /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '1';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
         OTHERWISE                                      /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '0';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
      END;                                              /* C0022-0900 */
                                                        /* C0022-0900 */
   END;                      /**** END   COUNTRY 826 = Romania     ****/
                             /**** END   COUNTRY 704 = Croatia     ****/
                             /**** END   COUNTRY 644 = Bulgaria    ****/
 /*********************************************************************/
   WHEN ('618') DO;          /**** START COUNTRY 618 = Austria     ****/

    /*----------------------------------------------------------------*/
    /*** If IODPDBU.BUDIV not equal '2', then  IODPDBU.BUDIV = '2 ' ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

      SELECT(DATA_ORIGIN);
    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '0' or '2':                                */
    /* - ICUS3AD = ' ' (set phone number to blank)                   */
    /* - search thru the address-lines starting with the address-    */
    /*   line (9.) until the third (3.) looking for the ZIP-code:    */
    /*   if   SUBSTR(address-line,1,4) = numeric   THEN              */
    /*      copy SUBSTR(address-line,1,4) into ICUSGZC               */
    /*      and SUBSTR(address-line+1,1,rest) into ICUSCTY           */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,2,1) = '-'       AND               */
    /*        SUBSTR(address-line,3,5) = numeric   THEN (foreign ZIP)*/
    /*      copy SUBSTR(address-line,3,5) into ICUSGZC               */
    /*      and SUBSTR(address-line,9,rest) into ICUSCTY             */
    /*  otherwise                                                    */
    /*   if   SUBSTR(address-line,2,1) = '-'       AND               */
    /*        SUBSTR(address-line,3,4) = numeric   THEN              */
    /*      copy SUBSTR(address-line,3,4) into ICUSGZC               */
    /*      and SUBSTR(address-line,8,rest) into ICUSCTY             */
    /* - if address-line with ZIP-code found then take the line      */
    /*   before and copy this line into NCUSSTR.                     */
    /* - if address-line with ZIP-code could not be found then       */
    /*   insert the folowing text into the respective fields:        */
    /*     ICUS3AD = 'Incorrect/Missing address'                     */
    /*     ICUSGZC = BLANK                                           */
    /*     ICUSCTY = 'Please correct in SOF'                         */
    /* - address-line 1 will always be copied to CUSNAME.            */
    /*---------------------------------------------------------------*/

        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.ICUS3AD = ' ';       /* blank out phone  */
                                                  /*  number field    */
 LOOP618:  DO I = 9 TO 2 BY -1;     /* Loop thru address-lines 9 to 2 */
                                    /* searching for ZIP-code         */
              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4),
                        '0123456789') = 0
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     PARM_USER_EXTRA_INFO.ADDR_LINES(I+1);
                 LEAVE LOOP618;
               END;

              IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),2,1) = '-'
                 THEN DO;
                 IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),
                            3,5),'0123456789') = 0 THEN
                    DO;
                    PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE  */
                        SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,5);
                    PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME */
                        SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),9,22);
                    LEAVE LOOP618;
                    END;
                 IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),
                            3,4),'0123456789') = 0 THEN
                    DO;
                    PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE  */
                        SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,4);
                    PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME */
                        SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),8,23);
                    LEAVE LOOP618;
                    END;
               END;

           END;              /**** END    DO I = 9 TO 2 BY -1         */

           /* START @HM0600 */
           IF (LENGTH(STRIPF(PARM_USER_EXTRA_INFO.ADDR_LINES(1)))
           <=(LENGTH(PARM_FILE_RCBDRF1.CUNAME)-6)) & (I > 3)
           THEN DO;
           PARM_FILE_RCBDRF1.CUNAME =             /* CUSTOMER NAME    */
                       STRIPF(PARM_USER_EXTRA_INFO.ADDR_LINES(1))
             ||'/'||   STRIPF(PARM_USER_EXTRA_INFO.ADDR_LINES(2));
           END;
           ELSE
           /* END   @HM0600 */
           PARM_FILE_RCBDRF1.CUNAME =             /* Customer Name    */
           PARM_USER_EXTRA_INFO.ADDR_LINES(1);    /* @HM0300 */

           IF I > 2 THEN                  /* ZIP-CODE AND CITY FOUND  */
              PARM_FILE_RCBDRF1.NCUSSTR =
                  PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
           IF I = 2 THEN
              PARM_FILE_RCBDRF1.NCUSSTR = '';
           IF I < 2 THEN DO;              /* ZIP-code not found       */
              PARM_FILE_RCBDRF1.NCUSSTR = '';
              PARM_FILE_RCBDRF1.ICUS3AD = 'Incorrect/Missing Address';
              PARM_FILE_RCBDRF1.ICUSGZC = ' ';
              PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOF ';
              END;

           END;              /**** END    WHEN ('0','2') DO           */

        WHEN ('1') DO;       /**** PRIME INPUT AVAILABLE ...          */

     /*  change C0085 - 0504   begin  */

           PARM_FILE_RCBDRF1.ICUS3AD = '';         /*  phone number   */
 LOOP618O: DO I = 9 TO 2 BY -1;     /* Loop thru address-lines 9 to 2 */
                                    /* searching for ZIP-code         */
              IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4),
                        '0123456789') = 0
               THEN DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4);
                 PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME    */
                     PARM_USER_EXTRA_INFO.ADDR_LINES(I+1);
                 PARM_FILE_RCBDRF1.NCUSSTR =    /* FETCH STREET NAME  */
                     PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
                 LEAVE LOOP618O;
               END;

              IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),2,1) = '-'
                 THEN DO;
                 IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),
                            3,5),'0123456789') = 0 THEN
                    DO;
                    PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE  */
                        SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,5);
                    PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME */
                        SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),9,22);
                    PARM_FILE_RCBDRF1.NCUSSTR =  /* FETCH STREET NAME */
                        PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
                    LEAVE LOOP618O;
                    END;
                 IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),
                            3,4),'0123456789') = 0 THEN
                    DO;
                    PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE  */
                        SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),3,4);
                    PARM_FILE_RCBDRF1.ICUSCTY =    /* FETCH CITY NAME */
                        SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),8,23);
                    PARM_FILE_RCBDRF1.NCUSSTR =  /* FETCH STREET NAME */
                        PARM_USER_EXTRA_INFO.ADDR_LINES(I-1);
                    LEAVE LOOP618O;
                    END;
               END;
               /*  change C0085 - 0504   end    */

           END;              /**** END    DO I = 9 TO 2 BY -1         */
                             /*    PARM_USER_EXTRA_INFO.ADDR_LINES(3);*/
      /*   PARM_FILE_RCBDRF1.ICUSGZC =                 */ /* ZIP-LINE */
                            /*     PARM_USER_EXTRA_INFO.ADDR_LINES(4);*/
      /*   PARM_FILE_RCBDRF1.ICUSCTY =                 */   /*  CITY  */
      /*                           PARM_USER_EXTRA_INFO.ADDR_LINES(2);*/
           END;              /**** END    WHEN ('1') DO;              */

        OTHERWISE;           /* DATA_ORIGIN NOT ("0" OR "2") OR "1"   */
                             /*   THEN DO NOT CHANGE ANYTHING         */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB);               /* C0022-0900 */
         WHEN ('E')                                     /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '1';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
         OTHERWISE                                      /* C0022-0900 */
         DO;                                            /* C0022-0900 */
            PARM_FILE_RCBDRF1.FCUSEMB = '0';            /* C0022-0900 */
         END;                                           /* C0022-0900 */
      END;                                              /* C0022-0900 */
                                                        /* C0022-0900 */
      IF (INDEX(PARM_FILE_RCBDRF1.CCUSCLC,'A') > 0 |    /* C0087-0603 */
          INDEX(PARM_FILE_RCBDRF1.CCUSCLC,'K') > 0 |    /* C0087-0603 */
          INDEX(PARM_FILE_RCBDRF1.CCUSCLC,'R') > 0 |    /* C0087-0603 */
          INDEX(PARM_FILE_RCBDRF1.CCUSCLC,'S') > 0 )    /* C0087-0603 */
         THEN PARM_FILE_RCBDRF1.CCUACOD = 'Y';          /* C0087-0603 */
   END;                      /**** END   COUNTRY 618 = Austria     ****/
 /*********************************************************************/
   WHEN ('848') DO;          /**** START COUNTRY 848 = Switzerland ****/

     IF DATA_ORIGIN ¬= '1'
     THEN DO;
    /*----------------------------------------------------------------*/
    /*** If IODPDBU.BUDIV not equal '2', then  IODPDBU.BUDIV = '2 ' ***/
    /*----------------------------------------------------------------*/
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

      SELECT(DATA_ORIGIN);
    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '0' or '2':                                */
    /* - copy    address-line 3                into NCUSSTR          */
    /*   copy    SUBSTR(address-line 5,1,4)    into ICUSGZC          */
    /*   copy    SUBSTR(address-line 5,6,rest) into ICUSCTY          */
    /*   copy    address-line 6                into ICUS3AD          */
    /* - address-line 1 will always be copied to CUSNAME.            */
    /*---------------------------------------------------------------*/

        WHEN ('0','2') DO;

           PARM_FILE_RCBDRF1.CUNAME =             /* Customer Name    */
           PARM_USER_EXTRA_INFO.ADDR_LINES(1);    /* @HM0400 */

           PARM_FILE_RCBDRF1.NCUSSTR =          /*  STREET            */
                     PARM_USER_EXTRA_INFO.ADDR_LINES(3);
   /* commented out for change c-0035-0701                            */
   /*      PARM_FILE_RCBDRF1.ICUSGZC =             FETCH ZIP-CODE     */
   /*                SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,4)   */
          /************       BEGIN CHG0097A             **********/
           IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,2) = 'FL'
           THEN DO;
                PARM_FILE_RCBDRF1.ICUSCTY =        /* FETCH CITY NAME */
                  SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),9,22);
           END;
           ELSE DO;
          /************       END   CHG0097A             **********/
                PARM_FILE_RCBDRF1.ICUSCTY =        /* FETCH CITY NAME */
                  SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),6,25);
           END;
           HELP30 =  PARM_USER_EXTRA_INFO.ADDR_LINES(6);
 LOOP848A:
           DO I = 1 BY 1;
    /*----------          START OF C0043-1101              ----------*/
              J = VERIFY(HELP30,'1234567890+');
    /*        J = VERIFY(HELP30,'1234567890');                       */
    /*----------           END OF C0043-1101               ----------*/
              IF J = 0 THEN LEAVE LOOP848A;
              IF SUBSTR(HELP30,J) = ' ' THEN LEAVE LOOP848A;
              SUBSTR(HELP30,J) = SUBSTR(HELP30,J+1);
           END;
      /*  CHANGE C0087 - 0603   BEGIN  */
           IF PARM_FILE_RCBDRF1.FCUSEMB = '1' THEN
              PARM_FILE_RCBDRF1.ICUS3AD =
                                  '123-                          ';
           ELSE DO;
              IF HELP30  = '' THEN
                 PARM_FILE_RCBDRF1.ICUS3AD =
                  'MISSING'||SUBSTR(PARM_FILE_RCBDRF1.CUNOUSE,1,4);
              ELSE
                 PARM_FILE_RCBDRF1.ICUS3AD = HELP30; /* phone number */
           END;
      /*  CHANGE C0087 - 0603   END    */

           END;              /**** END    WHEN ('0','2') DO           */

    /*---------------------------------------------------------------*/
    /* If   DATA_ORIGIN = '1'  --- Prime Input                       */
    /* - copy    address-line 1 (street)       into NCUSSTR          */
    /*   copy    address-line 3 (phone)        into ICUS3AD          */
    /*   copy    address-line 4 (ZIP)          into ICUSGZC          */
    /*   copy    address-line 2 (City)         into ICUSCTY          */
    /*---------------------------------------------------------------*/
        WHEN ('1') DO;       /**** PRIME INPUT AVAILABLE ...          */

      /*  change C0085 - 0504   begin  */

           PARM_FILE_RCBDRF1.NCUSSTR =                    /*  STREET  */
                                   PARM_USER_EXTRA_INFO.ADDR_LINES(3);
 /*        HELP30 = PARM_USER_EXTRA_INFO.ADDR_LINES(3);*/
 /*LOOP848B:
           DO I = 1 BY 1;
              J = VERIFY(HELP30,'1234567890');
              IF J = 0 THEN LEAVE LOOP848B;
              IF SUBSTR(HELP30,J) = ' ' THEN LEAVE LOOP848B;
              SUBSTR(HELP30,J) = SUBSTR(HELP30,J+1);
           END; */
 /*        PARM_FILE_RCBDRF1.ICUS3AD = HELP30;  */ /*  phone number   */
           PARM_FILE_RCBDRF1.ICUS3AD =
                           PARM_USER_EXTRA_INFO.ADDR_LINES(6);
  /* commented out for change c-0035-0701                             */
  /*       PARM_FILE_RCBDRF1.ICUSGZC =                     ZIP-LINE   */
  /*                              PARM_USER_EXTRA_INFO.ADDR_LINES(4)  */
           IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,3) = 'FL-'
           THEN DO;
             IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),4,4),
                          '0123456789') = 0
               THEN
                 PARM_FILE_RCBDRF1.ICUSGZC =    /* FETCH ZIP-CODE     */
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),4,4);
               ELSE
                 PARM_FILE_RCBDRF1.ICUSGZC = '';/* FETCH ZIP-CODE     */
             PARM_FILE_RCBDRF1.ICUSCTY =
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),9,22);
           END;
           ELSE DO;
             IF VERIFY(SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,4),
                        '0123456789') = 0
               THEN
                 PARM_FILE_RCBDRF1.ICUSGZC =
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,4);
               ELSE
                 PARM_FILE_RCBDRF1.ICUSGZC = '';/* FETCH ZIP-CODE     */
             PARM_FILE_RCBDRF1.ICUSCTY =
                     SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),6,25);
           END;
           /*  change C0085 - 0504   end    */
        END;              /**** END    WHEN ('1') DO;              */

        OTHERWISE;           /* DATA_ORIGIN NOT ("0" OR "2") OR "1"   */
                             /*   THEN DO NOT CHANGE ANYTHING         */
      END;                   /**** END    SELECT(DATA_ORIGIN)         */

    END;

   END;                      /**** END   COUNTRY 848 = Switzerland ****/
 /* CENTRAL REGION END   */
 /*********************************************************************/
 /**** START CRBN REGION ****/                     /* SOC PCEDSP-0610 */
   WHEN ('619','621','627','640','647','759','791','839','843','859')
     DO;
      IF PARM_FILE_RCBDRF1.IODPDBU.BUDIV ¬= '2'
         THEN PARM_FILE_RCBDRF1.IODPDBU.BUDIV  = '2';

      SELECT(DATA_ORIGIN);
        WHEN ('0','2')                                    /* CEDS BAU */
         DO;
          CALL RCBDR4U_BAU_FROM_CIFDB;
         END;
        WHEN ('1')                                    /* PRIME INPUT  */
         DO;
          PARM_FILE_RCBDRF1.NCUSSTR =
          PARM_USER_EXTRA_INFO.ADDR_LINES(4);               /* STREET */
          PARM_FILE_RCBDRF1.ICUSCTY =
          PARM_USER_EXTRA_INFO.ADDR_LINES(5);                 /* CITY */
          PARM_FILE_RCBDRF1.ICUS3AD = '';                    /* PHONE */
         END;
         OTHERWISE;
      END;
      IF PARM_FILE_RCBDRF1.FCUSEMB = 'X'                   /* EMBARGO */
      THEN PARM_FILE_RCBDRF1.FCUSEMB='1';
      ELSE PARM_FILE_RCBDRF1.FCUSEMB='0';
     END;
 /* CRBN REGION END   */                           /* EOC PCEDSP-0610 */
 /*********************************************************************/

 /* REGION NORTH START   */

    WHEN('754') DO;                      /* IRELAND  */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB); /*  PCR662 - country 754 */
         WHEN ('C','E','V','W')
         DO;
            PARM_FILE_RCBDRF1.FCUSEMB = '1';
         END;
         OTHERWISE
         DO;
            PARM_FILE_RCBDRF1.FCUSEMB = ' ';
         END;
      END;                                 /*  PCR662 - country 754 */
      IF DATA_ORIGIN ¬= '1'
       THEN DO;
       DO I = 20 TO 1 BY -1 WHILE(SUBSTR(ADDR_LINES(2),I,1) = '');
       END;
       PARM_FILE_RCBDRF1.NCUSSTR =
                            SUBSTR(ADDR_LINES(2),1,I)  ||
                            ' ' ||
                            PARM_USER_EXTRA_INFO.ADDR_LINES(3);

       DO I = 20 TO 1 BY -1 WHILE(SUBSTR(ADDR_LINES(4),I,1) = '');
       END;
       PARM_FILE_RCBDRF1.ICUSCTY =
                            SUBSTR(ADDR_LINES(4),1,I)  ||
                            ' ' ||
                            PARM_USER_EXTRA_INFO.ADDR_LINES(5);

       PARM_FILE_RCBDRF1.ICUS3AD = '';
       PARM_FILE_RCBDRF1.ICUSGZC = '';
       PARM_FILE_RCBDRF1.CCUSCLC = '';               /*  C0025-0501*/
       PARM_FILE_RCBDRF1.AAGRCLA = 0 ;               /*  C0025-0501*/

      END;

    END;

    WHEN('788') DO;                      /* NETHERLANDS */

       DATUM = SUBSTR(DATETIME,1,4) || '-' ||
               SUBSTR(DATETIME,5,2) || '-' ||
               SUBSTR(DATETIME,7,2);

       CUSTOMER = PARM_FILE_RCBDRF1.CUNOUSE;

       EXEC SQL SELECT *
                INTO :DCLRCBT0011_LOC_CUST:RCBT0011_IND
                FROM RCBT0011_LOC_CUST
                WHERE COUNTRY_NUMBER = '788'
                AND CUSTOMER_NUMBER = :CUSTOMER;

       SELECT (SQLCA.SQLCODE);
          WHEN (0)
          DO;
             PARM_FILE_RCBDRF1.IODPDBU.BUDIV = '2';
         /*  IF PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '       '
             THEN DO;                                      CD010305 */
                IF PARM_FILE_RCBDRF1.FHSISOI = 'A'
                THEN DO;
                IF SUBSTR(DCLRCBT0011_LOC_CUST.CUST_BU_CODE,2,3) = '   '
                   THEN DO;
                      PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '411    ';
                   END;
                   ELSE DO;
                      PARM_FILE_RCBDRF1.IODPDBU.BUCODE =
         /*        SUBSTR(DCLRCBT0011_LOC_CUST.CUST_BU_CODE,2,3) || */
                         '411'                                   ||
                         'A'                                     ||
                        SUBSTR(DCLRCBT0011_LOC_CUST.GEO_ZIP_CODE,1,2) ||
                         ' ';
                   END;
                END;
          /* END;                                         CD010305   */

             PARM_FILE_RCBDRF1.ICUS3AD =
                             DCLRCBT0011_LOC_CUST.PHONE_NUMBER;
             PARM_FILE_RCBDRF1.ICUSGZC =
                          SUBSTR(DCLRCBT0011_LOC_CUST.GEO_ZIP_CODE,1,4);
             SUBSTR(PARM_FILE_RCBDRF1.UDTECUF,1,13) =
                             DCLRCBT0011_LOC_CUST.BRANCH_OFFICE ||
                             DCLRCBT0011_LOC_CUST.SALES_ORGANIZATION;
          END;
          WHEN (100)
          DO;
             PARM_FILE_RCBDRF1.IODPDBU.BUDIV = '2';

             IF PARM_FILE_RCBDRF1.FHSISOI = 'A'
             THEN DO;
                PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '411    ';
             END;

             PARM_INT_AREA.RUN_DATE  = DATUM;
             PARM_INT_AREA.MSG_VAR_CODES = '';
             PARM_INT_AREA.MESSAGE_TYPE = 'LO';
             PARM_INT_AREA.MESSAGE_NUMBER = '0002';
             PARM_INT_AREA.MSG_VAR_CODE_1 = 'CU';
             PARM_INT_AREA.MSG_VAR_VALUE_1 =
                PARM_FILE_RCBDRF1.CUNOUSE;
             IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
             CALL RCB0M1M(PTR_INT_AREA);
          END;
          OTHERWISE
          DO;
             PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
             PARM_INT_AREA.ERR_TYPE = 'DB2';
             PARM_INT_AREA.CALL_ID = '#001';
             IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
             CALL RCB0E1M (PTR_INT_AREA);
          END;
       END;

        /* CREATE ADRES LINES WITHOUT PO BOX, BUT WITH GEOZIPCODE ****/

        DO I = 1 TO 9 WHILE (PARM_USER_EXTRA_INFO.ADDR_LINES(I) ¬= '');
           PARM_USER_EXTRA_INFO.ADDR_LINES(I) =
           TRANSLATE(PARM_USER_EXTRA_INFO.ADDR_LINES(I),CAPSON,CAPSOFF);
           C_LINE                       =
              PARM_USER_EXTRA_INFO.ADDR_LINES(I);
        END;

       SELECT(DATA_ORIGIN);
          WHEN ('0') DO;
             /*** FILL CITY LINE *******/
             IF VERIFY(SUBSTR(C_LINE,1,4),'0123456789') = 0
             THEN DO;
                IF SUBSTR(C_LINE,9,1) ¬= ' '
                THEN DO;
                   PARM_FILE_RCBDRF1.ICUSCTY =
                      SUBSTR(C_LINE,1,8) || ' '|| SUBSTR(C_LINE,9);
                END;
                IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I-2),1,7) =
                                                               'POSTBUS'
                THEN DO;
                   SUBSTR(PARM_FILE_RCBDRF1.ICUSCTY,1,7) =
                 SUBSTR(DCLRCBT0011_LOC_CUST.GEO_ZIP_CODE,1,4) || ' ' ||
                      SUBSTR(DCLRCBT0011_LOC_CUST.GEO_ZIP_CODE,5,2);
                END;
             END;

            /*** FILL ADDRESS LINE ******/

         IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I-2),1,7) = 'POSTBUS'
             THEN DO;
                PARM_FILE_RCBDRF1.NCUSSTR =
                   PARM_USER_EXTRA_INFO.ADDR_LINES(I-3);
             END;
             ELSE DO;
                PARM_FILE_RCBDRF1.NCUSSTR =
                   PARM_USER_EXTRA_INFO.ADDR_LINES(I-2);
             END;
          END;
          WHEN ('1') DO;
             PARM_FILE_RCBDRF1.CUNAME =
             TRANSLATE(PARM_FILE_RCBDRF1.CUNAME,CAPSON,CAPSOFF);
             PARM_FILE_RCBDRF1.NCUSSTR =
           TRANSLATE(PARM_USER_EXTRA_INFO.ADDR_LINES(1),CAPSON,CAPSOFF);
             PARM_FILE_RCBDRF1.ICUSCTY =
           TRANSLATE(PARM_USER_EXTRA_INFO.ADDR_LINES(2),CAPSON,CAPSOFF);
             IF SUBSTR(CUSTOMER,1,2) = 'SH' /* SHRINKWRAP */
             THEN DO;
                PARM_FILE_RCBDRF1.ICUS3AD =
           TRANSLATE(PARM_USER_EXTRA_INFO.ADDR_LINES(3),CAPSON,CAPSOFF);
             END;
             PARM_FILE_RCBDRF1.ICUSGZC =
             PARM_USER_EXTRA_INFO.ADDR_LINES(4);
          END;
          WHEN ('2') DO;
             /*** PARM_FILE_PI IS FILLED WITH PRIME INPUT DATA ***/
             PARM_FILE_RCBDRF1.CUNAME =
             TRANSLATE(PARM_FILE_PI.CUNAME,CAPSON,CAPSOFF);
             PARM_FILE_RCBDRF1.NCUSSTR =
             TRANSLATE(PARM_FILE_PI.NCUSSTR,CAPSON,CAPSOFF);
             PARM_FILE_RCBDRF1.ICUSCTY =
             TRANSLATE(PARM_FILE_PI.ICUSCTY,CAPSON,CAPSOFF);
             IF SUBSTR(CUSTOMER,1,2) = 'SH' /* SHRINKWRAP */
             THEN DO;
                PARM_FILE_RCBDRF1.ICUS3AD =
                TRANSLATE(PARM_FILE_PI.ICUS3AD,CAPSON,CAPSOFF);
             END;
             PARM_FILE_RCBDRF1.ICUSGZC =
             PARM_FILE_PI.ICUSGZC;
          END;
          OTHERWISE;
       END;

       IF PARM_INT_AREA.MSG_AREA.PROC_ID = '' THEN
           PARM_FILE_RCBDRF1.BUCODE =
           SUBSTR(PARM_FILE_RCBDRF1.BUCODE,1,4) ||'   ' ;



       /*** UPDATE EMBARGO CODE ****/

        SELECT (PARM_FILE_RCBDRF1.FCUSEMB);           /* SOC - 443A */
           WHEN ('0')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
         /*   PARM_FILE_RCBDRF1.CCUACOD = 'N';   */
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('1')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('2')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('3')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('4')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('5')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
      /*      PARM_FILE_RCBDRF1.CCUACOD = 'F';    */
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('6')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('7')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('8')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('9')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('E')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '1';
              PARM_FILE_RCBDRF1.CCUACOD = 'N';
           END;
           WHEN ('R')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'R';
           END;
           WHEN ('U')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('W')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           WHEN ('X')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'X';
           END;
           WHEN ('Y')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'D';
           END;
           WHEN ('Z')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Z';
           END;
           WHEN ('*')
           DO;
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'Y';
           END;
           OTHERWISE
           DO;
              PARM_INT_AREA.RUN_DATE  = DATUM;
              PARM_INT_AREA.MSG_VAR_CODES = '';
              PARM_INT_AREA.MESSAGE_TYPE = 'LO';
              PARM_INT_AREA.MESSAGE_NUMBER = '0003';
              PARM_INT_AREA.MSG_VAR_CODE_1 = 'CU';
              PARM_INT_AREA.MSG_VAR_VALUE_1 =
              PARM_FILE_RCBDRF1.CUNOUSE;
              PARM_INT_AREA.MSG_VAR_CODE_2 = 'EM';
              PARM_INT_AREA.MSG_VAR_VALUE_2 =
              PARM_FILE_RCBDRF1.FCUSEMB;
           /* CALL RCB0M1M(PTR_INT_AREA); TO MANY MESSAGES */
              PARM_FILE_RCBDRF1.FCUSEMB = '0';
              PARM_FILE_RCBDRF1.CCUACOD = 'N';
           END;
        END;                                          /* EOC - 443A */

    END;

    WHEN('864') DO;                      /* SOUTH AFRICA */

       IF PARM_FILE_RCBDRF1.ICUSANO = '000'
       THEN DO;                                       /*SOC - 456A*/
        /*PARM_FILE_RCBDRF1.CUNAME  = 'UNKNOWN ADDRESS';
          PARM_FILE_RCBDRF1.ICUS3AD = 'PLEASE OVERTYPE WITH THE';
          PARM_FILE_RCBDRF1.NCUSSTR = 'CORRECT ADDRESS DETAILS';
          PARM_FILE_RCBDRF1.ICUSCTY = 'FOR THIS MACHINE';
          PARM_FILE_RCBDRF1.ICUSGZC = 'UNKNOWN' ; */
       END;                                           /*EOC - 456A*/
       ELSE DO;

          IF PARM_USER_EXTRA_INFO.ADDR_LINES(1) = 'B'
          THEN DO;
             PARM_FILE_RCBDRF1.CUNAME  = '';
          END;
          ELSE DO;
             PARM_FILE_RCBDRF1.CUNAME =
                         PARM_USER_EXTRA_INFO.ADDR_LINES(1);
          END;


          IF PARM_USER_EXTRA_INFO.ADDR_LINES(2) = 'B'
          THEN DO;
             PARM_FILE_RCBDRF1.ICUSCTY =
                                     PARM_USER_EXTRA_INFO.ADDR_LINES(4);
          END;
          ELSE DO;
             IF PARM_USER_EXTRA_INFO.ADDR_LINES(4) = 'B'
             THEN DO;
                PARM_FILE_RCBDRF1.ICUSCTY =
                                     PARM_USER_EXTRA_INFO.ADDR_LINES(2);

             END;
             ELSE DO;

             DO I = 20 TO 1 BY -1 WHILE(SUBSTR(ADDR_LINES(2),I,1) = '');
             END;

             PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(ADDR_LINES(2),1,I)  ||
                                         ' ' ||
                                     PARM_USER_EXTRA_INFO.ADDR_LINES(4);
             END;
          END;

          IF PARM_FILE_RCBDRF1.ICUSCTY = 'B'
          THEN DO;
             PARM_FILE_RCBDRF1.ICUSCTY = '';
          END;


          IF PARM_USER_EXTRA_INFO.ADDR_LINES(3) = 'B'
          THEN DO;
             PARM_FILE_RCBDRF1.NCUSSTR = '';
          END;
          ELSE DO;
             PARM_FILE_RCBDRF1.NCUSSTR =
                                     PARM_USER_EXTRA_INFO.ADDR_LINES(3);
          END;


          IF PARM_USER_EXTRA_INFO.ADDR_LINES(5) = 'B'
          THEN DO;
             PARM_FILE_RCBDRF1.ICUSGZC = '';
          END;
          ELSE DO;
             PARM_FILE_RCBDRF1.ICUSGZC =
                                     PARM_USER_EXTRA_INFO.ADDR_LINES(5);
          END;


          IF PARM_USER_EXTRA_INFO.ADDR_LINES(6) = 'B'
          THEN DO;
             PARM_FILE_RCBDRF1.ICUS3AD = '';
          END;
          ELSE DO;
             PARM_FILE_RCBDRF1.ICUS3AD =
                                     PARM_USER_EXTRA_INFO.ADDR_LINES(6);
          END;

       END;  /*  ELSE ICUSANO ¬= '000'  */

    END;

    WHEN('866') DO;                      /* UK       */

      SELECT (PARM_FILE_RCBDRF1.FCUSEMB); /*  PCR662 - country 866 */
         WHEN ('C','E','V','W')
         DO;
            PARM_FILE_RCBDRF1.FCUSEMB = '1';
         END;
         OTHERWISE
         DO;
            PARM_FILE_RCBDRF1.FCUSEMB = ' ';
         END;
      END;                                 /*  PCR662 - country 866 */
      IF DATA_ORIGIN ¬= '1'
       THEN DO;
                                                 /*SOC PCEDSP-0420 */
       IF PARM_FILE_RCBDRF1.ICUSGZC = '' THEN
              PARM_FILE_RCBDRF1.ICUSGZC = '**** ***';

   /*  OPEN FILE(UKADR#OM);
       READ FILE(UKADR#OM) INTO (REC_UKADR#OM) ; */
       DCL U FIXED BIN(15) INIT(0);
       DCL V FIXED BIN(15) INIT(0);
  DO U  =  1 TO 133 BY 1;    /* PCEDSP  0439*/
    /* DO WHILE(¬USTEOF); */
    /*   IF SUBSTR(REC_UKADR#OM.STEXT,1,1) = '*' THEN
         READ FILE(UKADR#OM) INTO (REC_UKADR#OM) ;*/ /* SKIP RECORD */
     /*    ELSE */
         DO;
           DO N = 2 TO 5;
             IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(N),1,
         UKOM.SLENGTH(U)) = UKOM.STEXT(U)
             THEN DO;
                PARM_USER_EXTRA_INFO.ADDR_LINES(N) = '';
             END;
             IF PARM_USER_EXTRA_INFO.ADDR_LINES(N) =/*SOC PCEDSP-0428 */
                                             PARM_FILE_RCBDRF1.ICUSGZC
             THEN DO;
                PARM_USER_EXTRA_INFO.ADDR_LINES(N) = '';
             END;                                   /*EOC PCEDSP-0428 */
           END;
       /*  READ FILE(UKADR#OM) INTO (REC_UKADR#OM) ;*/
         END;
       END;
                                                    /*EOC PCEDSP-0420 */
       CALL RCBDR4U_WORD_TO_ABBR; /*PCEDSP-0420-A*/

       PARM_FILE_RCBDRF1.NCUSSTR = '';
       PARM_FILE_RCBDRF1.ICUSCTY = '';
  /*   PARM_FILE_RCBDRF1.ICUSGZC = '';                    PCEDSP-0420 */
       PARM_FILE_RCBDRF1.ICUS3AD = '';
                                             /* SOC PCEDSP-0420 */
      IF (PARM_USER_EXTRA_INFO.ADDR_LINES(4) = '') &
         (PARM_USER_EXTRA_INFO.ADDR_LINES(5) = '')  THEN
        DO;
         PARM_FILE_RCBDRF1.NCUSSTR = PARM_USER_EXTRA_INFO.ADDR_LINES(2);
         PARM_FILE_RCBDRF1.ICUSCTY = PARM_USER_EXTRA_INFO.ADDR_LINES(3);
        END;
      ELSE
        DO;
         PARM_FILE_RCBDRF1.NCUSSTR = ''; /*TEMEA-T081501*/
         TEMP_NCUSSTR =
                      TRIM(TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(2)) ||
                 ' ' ||TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(3)))      ;
         PARM_FILE_RCBDRF1.NCUSSTR = SUBSTR(TEMP_NCUSSTR,1,30);
         PARM_FILE_RCBDRF1.ICUSCTY = '';
         TEMP_ICUSCTY =                  /*TEMEA-T081501*/
                      TRIM(TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(4)) ||
                 ' ' ||TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(5)))      ;
         PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TEMP_ICUSCTY,1,30);
         END;
       END;
                                             /* EOC PCEDSP-0420 */
      END;
 /* REGION NORTH END     */

    WHEN('631') DO;                            /* SOC PCEDSP-0602 */

      DCL WK_NBR CHAR(02);
      EXEC SQL
       SELECT WEEK(CURRENT_DATE)
       INTO :WK_NBR
       FROM SYSIBM.SYSDUMMY1;
      /*TRANSLATE DATETIME NUMBERS INTO CHARACTER*/
      /*AND 12 CHARS COME FIRST IN THE ICUS3AD */
      DCL TRIM_DATETIME CHAR(12);
      TRIM_DATETIME =  SUBSTR(DATETIME,3,2)||
                       WK_NBR ||
                       SUBSTR(DATETIME,9,8);
      /*                             */
      PARM_FILE_RCBDRF1.IODPDBU.BUDIV = '2';
      PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '2      ';
      PARM_FILE_RCBDRF1.NCUSSTR = PARM_USER_EXTRA_INFO.ADDR_LINES(1);
      PARM_FILE_RCBDRF1.ICUSCTY = PARM_USER_EXTRA_INFO.ADDR_LINES(2);
      PARM_FILE_RCBDRF1.ICUS3AD =
              TRANSLATE(TRIM_DATETIME,'ABCDEFGHIJ','0123456789')
              || ' ' || SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(4),1,14)
              || ' ' || SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),1,2);
      PARM_FILE_RCBDRF1.UDTEUEX = ' ' ;
      PARM_FILE_RCBDRF1.UDTECUF =
              SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(7),1,14)
              || ' ' || PARM_USER_EXTRA_INFO.ADDR_LINES(8) ;
      PARM_FILE_RCBDRF1.CCUSTOC = ' ' ;
      PARM_FILE_RCBDRF1.AAS_ADD = ' ';
      PARM_FILE_RCBDRF1.FCUSCDC = 'N';
    END;                                       /* EOC PCEDSP-0602 */
                                               /* SOC PCEDSP-0543 */
                                               /* SOC PCEDSP-0761 */
    WHEN('781','613','655','661','683','813','815','869','871') DO;
                                               /* EOC PCEDSP-0761 */
      PARM_FILE_RCBDRF1.IODPDBU.BUDIV = '2';
      PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '1      ';
      PARM_FILE_RCBDRF1.NCUSSTR = PARM_USER_EXTRA_INFO.ADDR_LINES(1);

      IF PARM_USER_EXTRA_INFO.ADDR_LINES(3) = ' ' THEN
         PARM_FILE_RCBDRF1.ICUSCTY = '  ' ||
              SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),4,27);
      ELSE
         PARM_FILE_RCBDRF1.ICUSCTY =
              TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(3)) || ' ' ||
              SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(5),4,27);

      PARM_FILE_RCBDRF1.ICUS3AD = ' ' ;
      PARM_FILE_RCBDRF1.UDTEUEX = PARM_USER_EXTRA_INFO.ADDR_LINES(6);
      PARM_FILE_RCBDRF1.UDTECUF = ' ' ;
      PARM_FILE_RCBDRF1.ICUSGZC = ' ' ;
      PARM_FILE_RCBDRF1.AAS_ADD = ' ' ;
      PARM_FILE_RCBDRF1.FCUSCDC = 'N' ;
      PARM_FILE_RCBDRF1.CCUSTOC = ' ' ;
    END;                                     /* EOC PCEDSP-0543 */

    OTHERWISE DO;

    END;

 END ;   /*   SELECT COUNTRY NUMBER   */
 /* ----------------------------------------------------------------- */
 /* -                PCR 420 update(on 15th oct)   PCEDSP-0420-A      */
 /* ----------------------------------------------------------------- */
 RCBDR4U_WORD_TO_ABBR:PROC;

  DCL 1 UKAB(1:48),   /* 40+8 */ /*PCEDSP-0439 */
           3 WORD        CHAR(25),
           3 ABBR        CHAR(25);

 UKAB.WORD(1) = 'AVENUE' ;
 UKAB.ABBR(1) = 'AVE' ;

 UKAB.WORD(2) = 'BOULEVARD';
 UKAB.ABBR(2) = 'BLVD' ;

 UKAB.WORD(3) = 'BUILDING';
 UKAB.ABBR(3) = 'BLDG' ;

 UKAB.WORD(4)  ='BUSINESS';
 UKAB.ABBR(4)  ='BUS' ;

 UKAB.WORD(5)  ='CENTRE';
 UKAB.ABBR(5)  ='CTR' ;

 UKAB.WORD(6)  ='CLOSE';
 UKAB.ABBR(6)  ='CL' ;

 UKAB.WORD(7)  ='COLLEGE';
 UKAB.ABBR(7)  ='COLL' ;

 UKAB.WORD(8)  ='COMPANY';
 UKAB.ABBR(8)  ='CO' ;

 UKAB.WORD(9)  ='CORPORATION' ;
 UKAB.ABBR(9)  ='CORP' ;

 UKAB.WORD(10) ='CRESCENT';
 UKAB.ABBR(10) ='CRES' ;

 UKAB.WORD(11) ='DRIVE';
 UKAB.ABBR(11) ='DR' ;

 UKAB.WORD(12) ='ESTATE';
 UKAB.ABBR(12) ='EST' ;

 UKAB.WORD(13) ='FLOOR';
 UKAB.ABBR(13) ='FLR' ;

 UKAB.WORD(14) ='GARDEN';
 UKAB.ABBR(14) ='GDN' ;

 UKAB.WORD(15) ='GREAT';
 UKAB.ABBR(15) ='GT' ;

 UKAB.WORD(16) ='GREEN';
 UKAB.ABBR(16) ='GN' ;

 UKAB.WORD(17) ='GROUND';
 UKAB.ABBR(17) ='GRD' ;

 UKAB.WORD(18) ='HOUSE';
 UKAB.ABBR(18) ='HSE' ;

 UKAB.WORD(19) ='INDUSTRIAL' ;
 UKAB.ABBR(19) ='IND' ;

 UKAB.WORD(20) ='INFORMATION' ;
 UKAB.ABBR(20) ='INFO' ;

 UKAB.WORD(21) ='INSURANCE';
 UKAB.ABBR(21) ='INS' ;

 UKAB.WORD(22) ='INTERNATIONAL' ;
 UKAB.ABBR(22) ='INT' ;

 UKAB.WORD(23) ='LABORATORIES' ;
 UKAB.ABBR(23) ='LABS' ;

 UKAB.WORD(24) ='LANE';
 UKAB.ABBR(24) ='LN' ;

 UKAB.WORD(25) ='LIMITED';
 UKAB.ABBR(25) ='LTD' ;

 UKAB.WORD(26) ='NATIONAL';
 UKAB.ABBR(26) ='NAT' ;

 UKAB.WORD(27) ='OFFICE';
 UKAB.ABBR(27) ='OFF' ;

 UKAB.WORD(28) ='PARADE';
 UKAB.ABBR(28) ='PDE' ;

 UKAB.WORD(29) ='PARK';
 UKAB.ABBR(29) ='PK' ;

 UKAB.WORD(30) ='PLACE';
 UKAB.ABBR(30) ='PL' ;

 UKAB.WORD(31) ='ROAD';
 UKAB.ABBR(31) ='RD' ;

 UKAB.WORD(32) ='SERVICES';
 UKAB.ABBR(32) ='SVCS' ;

 UKAB.WORD(33) ='SOCIETY';
 UKAB.ABBR(33) ='SOC' ;

 UKAB.WORD(34) ='SQUARE';
 UKAB.ABBR(34) ='SQ' ;

 UKAB.WORD(35) ='STATION';
 UKAB.ABBR(35) ='STN' ;

 UKAB.WORD(36) ='STREET';
 UKAB.ABBR(36) ='ST' ;

 UKAB.WORD(37) ='TECHNICAL';
 UKAB.ABBR(37) ='TECH' ;

 UKAB.WORD(38) ='TRADING';
 UKAB.ABBR(38) ='TRAD' ;

 UKAB.WORD(39) ='UNIT';
 UKAB.ABBR(39) ='UN' ;

 UKAB.WORD(40) ='UNIVERSITY' ;
 UKAB.ABBR(40) ='UNI' ;

 UKAB.WORD(41) ='COMMUNITY' ;            /* SOC PCEDSP-0439 */
 UKAB.ABBR(41) ='COMM' ;

 UKAB.WORD(42) ='DISTRICT' ;
 UKAB.ABBR(42) ='DIST' ;

 UKAB.WORD(43) ='GARDENS' ;
 UKAB.ABBR(43) ='GDNS' ;

 UKAB.WORD(44) ='GENERAL' ;
 UKAB.ABBR(44) ='GEN' ;

 UKAB.WORD(45) ='HOSPITAL' ;
 UKAB.ABBR(45) ='HOS' ;

 UKAB.WORD(46) ='NORTH' ;
 UKAB.ABBR(46) ='N.' ;

 UKAB.WORD(47) ='ROOM' ;
 UKAB.ABBR(47) ='RM' ;

 UKAB.WORD(48) ='SAINT' ;
 UKAB.ABBR(48) ='ST' ;                      /* EOC PCEDSP-0439 */

 /*DCL 1 REC_UKADR#AB,
       %INCLUDE UKADR#AB; */
  /*DCL USTEOF1 BIT(1) INIT('0'B);*/
  DCL INDEX_VALUE FIXED BIN(15,0) INIT(0);
  DCL POS         FIXED BIN(15,0) INIT(1);
 /* DCL UKADR#AB FILE RECORD SEQUENTIAL INPUT   ; */
  DCL ADDR_ABR(7) CHAR(30);
  DCL WORD            CHAR(25);
  DCL ABBR            CHAR(25);
  DCL J        BIN FIXED(15) INIT (0);
  J = 2;
  DO J = 2 TO 5 BY 1;
       ADDR_ABR(J) = PARM_USER_EXTRA_INFO.ADDR_LINES(J);
       CALL RCBDR4U_COMMA_THE(ADDR_ABR(J));        /* PCEDSP-0440 */
    /* PUT SKIP LIST('ADDR_ABR('||J||')',ADDR_ABR(J)); */
       IF ADDR_ABR(J)  = '' THEN
       do;
       end;
       ELSE
       DO;
   /*  USTEOF1 = '0'B; */
       POS = 1;
   /*    OPEN FILE(UKADR#AB) ;
       READ FILE(UKADR#AB) INTO (REC_UKADR#AB) ;
       DO WHILE(¬USTEOF1); */
     DO V = 1 TO 48 BY 1;  /* PCEDSP 0439 */
         WORD = UKAB.WORD(V);
         ABBR = UKAB.ABBR(V);
    /*   IF SUBSTR(WORD,1,1) = '*' THEN
          do;
          REC_UKADR#AB = '';
          READ FILE(UKADR#AB) INTO (REC_UKADR#AB) ;*/ /* SKIP RECORD */
     /*   end; */
     /*  ELSE */                                 /* PROCESS RECORD */
         DO; /* SEARCH LOGIC starts */
      /* PUT SKIP LIST('START'); */
          INDEX_VALUE = INDEX(ADDR_ABR(J),TRIM(UKAB.WORD(V)));
       /*   put skip list('initial index',index_value);
       /* put skip list('init value',addr_abr(j));
          put skip list('trim word    ',trim(word)); */
          DO WHILE(INDEX_VALUE ¬= 0);
           SELECT;
           WHEN(INDEX_VALUE = 1)
           DO;                               /*FOUND IN FIRST POSITION*/
    IF (SUBSTR(TRIM(ADDR_ABR(J)),LENGTH(TRIM(UKAB.WORD(V)))+1,1) = ' ')
            THEN
            DO;
          ADDR_ABR(J)  = TRIM(UKAB.ABBR(V)) || ' ' ||
             SUBSTR(TRIM(ADDR_ABR(J)),LENGTH(TRIM(UKAB.WORD(V)))+2)
                        || '          ' ;
            END;
            POS = POS + LENGTH(TRIM(UKAB.WORD(V)));
           END;
           WHEN(INDEX_VALUE = LENGTH(TRIM(ADDR_ABR(J)))
                              -LENGTH(TRIM(UKAB.WORD(V)))+1)
           DO;                                /*FOUND IN LAST POSITION*/
            IF (SUBSTR(TRIM(ADDR_ABR(J)),INDEX_VALUE-1,1) = ' ') THEN
            DO;
            ADDR_ABR(J)  = SUBSTR(TRIM(ADDR_ABR(J)),1,INDEX_VALUE-1) ||
                           TRIM(UKAB.ABBR(V)) || '           ' ;
          /*INDEX_VALUE = 0 ; */
            END;
            else
            INDEX_VALUE = 0 ;
           END;
           OTHERWISE
           DO;                                /*FOUND IN-BETWEEN      */
 IF(SUBSTR(TRIM(ADDR_ABR(J)),INDEX_VALUE-1,LENGTH(TRIM(UKAB.WORD(V)))+2)
                =     ' ' || TRIM(UKAB.WORD(V)) || ' ') THEN
           DO;
           ADDR_ABR(J)  =  SUBSTR(TRIM(ADDR_ABR(J)),1,INDEX_VALUE-1) ||
                           TRIM(UKAB.ABBR(V)) ||
                           SUBSTR(ADDR_ABR(J),INDEX_VALUE +
                   LENGTH(TRIM(UKAB.WORD(V)))) || '                 ';
           POS = POS + LENGTH(TRIM(UKAB.WORD(V)));
           END;
           END;
           END;
           POS = POS + 1;
           INDEX_VALUE = INDEX(ADDR_ABR(J),TRIM(UKAB.WORD(V)),POS);
      /*   put skip list('index reset',index_value); */
          END;
    /* REC_UKADR#AB = ''; */
   /*  READ FILE(UKADR#AB) INTO (REC_UKADR#AB) ; */
         END;
       END;
      END;
       PARM_USER_EXTRA_INFO.ADDR_LINES(J) = '';
       PARM_USER_EXTRA_INFO.ADDR_LINES(J) = ADDR_ABR(J) ;
    /* PUT SKIP LIST('DATA',PARM_USER_EXTRA_INFO.ADDR_LINES(J)); */
  END;
  /* PUT SKIP LIST('AFTER',PARM_USER_EXTRA_INFO);*/
 END RCBDR4U_WORD_TO_ABBR;

 /* ***************     PCEDSP-0440    ************************** */
 /* PROC TO REPLACE THE STRING'S ','  AND 'THE'  WITH BLANK (' ') */
 /* comma with non-blank after -> 1 blank                         */
 /* comma with blank after  -> only 1 blank                       */
 /* 'THE' with blank after  -> only 1 blank                       */
 /* ***************     PCEDSP-0440    ************************** */
 RCBDR4U_COMMA_THE:PROC(ADDR_ABBR);
  DCL ADDR_ABBR CHAR(30);
  DCL INDEX_VAL1  FIXED BIN(15,0) INIT(0);
  DCL INDEX_VAL2  FIXED BIN(15,0) INIT(0);
  DCL INDEX_VAL3  FIXED BIN(15,0) INIT(0);
                        /* CASE ', ' COMA WITH BLANK AFTER */
  INDEX_VAL1 = INDEX(ADDR_ABBR,', ') ;
  DO WHILE(INDEX_VAL1 ¬= 0);
     ADDR_ABBR  = SUBSTR(ADDR_ABBR,1,INDEX_VAL1-1) || ' ' ||
                  SUBSTR(ADDR_ABBR,INDEX_VAL1+2) ;
     INDEX_VAL1 = INDEX(ADDR_ABBR,', ') ;
  END;
                        /* CASE ','  COMA WITH NON-BLANK AFTER*/
  INDEX_VAL2 = INDEX(ADDR_ABBR,',');
  DO WHILE(INDEX_VAL2 ¬= 0);
     ADDR_ABBR  = SUBSTR(ADDR_ABBR,1,INDEX_VAL2-1) || ' ' ||
                  SUBSTR(ADDR_ABBR,INDEX_VAL2+1) ;
     INDEX_VAL2 = INDEX(ADDR_ABBR,',') ;
  END;
                        /* CASE ' THE ' THE WITH BLANK AFTER */
  INDEX_VAL3 = INDEX(ADDR_ABBR,' THE ');
  DO WHILE(INDEX_VAL3 ¬= 0);
     ADDR_ABBR  = SUBSTR(ADDR_ABBR,1,INDEX_VAL3-1) || ' ' ||
                  SUBSTR(ADDR_ABBR,INDEX_VAL3+5) ;
     INDEX_VAL3 = INDEX(ADDR_ABBR,' THE ') ;
  END;
                        /* CASE 'THE ' THE WITH BLANK AFTER 1st wrd*/
  INDEX_VAL4 = INDEX(ADDR_ABBR,'THE ');
  DO WHILE(INDEX_VAL4 ¬= 0);
     IF INDEX_VAL4 = 1 then
     do;
     ADDR_ABBR  = SUBSTR(ADDR_ABBR,5);
     INDEX_VAL4 = INDEX(ADDR_ABBR,'THE ') ;
     end;
     else
     do;
     INDEX_VAL4 = 0 ;
     end;
  END;
 END RCBDR4U_COMMA_THE;
 /* ------------------------------------------------------------------*/
 /* -     PCEDSP-0294 :BH 1.0 Updates on Userexists for CI-FDB      -*/
 /* ------------------------------------------------------------------*/
  RCBDR4U_BAU_FROM_CIFDB: PROC;
  DCL (IZIP,ICTY) FIXED BINARY(15);
 /*******************************************************************/
   /*   WHEN PROVIDED BY CI-FDB STRUCTURE OF THE ADDRESS IS ASSUMED   */
   /*   TO BE IN THE FOLLOWING SEQUENCE                               */
   /* (1) CUSTOMER NAME                                  <-- MANDATORY*/
   /* (2) ADDITIONAL CUSOTMER NAME OR INTERNAL ADDRESS-1 <-- OPTIONAL */
   /* (3) ADDITIONAL CUSOTMER NAME OR INTERNAL ADDRESS-2 <-- OPTIONAL */
   /* (4) STREET + NR / POBOX + NR                       <-- MANDATORY*/
   /* (5) ZIP=ZIPCODE                                    <-- MANDATORY*/
   /* (6) CITY                                           <-- MANDATORY*/
   /* (7) CTY=ISO2. COUNTRY CODE   (OPTIONAL ONLY OUT OF COUNTRY      */
   /* (8)  .. ADDITIONAL LINE(S) CONTACT INFORMATION     <-- OPTIONAL */
  /****************************************************************/
  /*   MINIMUM ADDRESS EXPECTED                                      */
  /* (1) CUSTOMER NAME                                  <-- MANDATORY*/
  /* (2) STREET + NR / POBOX + NR                       <-- MANDATORY*/
  /* (3) ZIP=ZIPCODE                                    <-- MANDATORY*/
  /* (4) CITY                                           <-- MANDATORY*/
  /*******************************************************************/
  PARM_FILE_RCBDRF1.ICUS3AD = ' ';   /* NO PHONENUMBER       */
       IZIP =0;
       ICTY =0;
  DO I = 7 TO 2 BY -1 while (IZIP = ICTY);
                           /* LOOP THRU ADDRESS-LINES 7 TO 3 */
                           /* SEARCH FOR 'CTY=' or 'ZIP=     */
    SELECT
    WHEN (SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4)
             = 'CTY=') DO;
      ICTY= I;
      IF SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I-2),1,4)
                = 'ZIP='
      THEN IZIP = I-2;
      ELSE IZIP = 0;
      END;
     WHEN (SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(I),1,4)
             = 'ZIP=') DO;
      ICTY = 0;
      IZIP = I;
      END;
     OTHERWISE;
    END;
  END;            /**** END    DO I = 9 TO 5 BY -1         */
  SELECT;
    WHEN (ICTY <> 0) DO;                /* OUT OF COUNTRY      */
      PARM_FILE_RCBDRF1.ICUSGZC =      /* SET CTY to ZIP-CODE */
           SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(ICTY),5,2);

      SELECT (SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(ICTY),
               5,2));
                         /* COMBINE CITY AND ZIP       */
                         /* NO CHECK WHETHER IT FITS !!*/
                         /* THESE ARE ODD CASES        */
       WHEN ('GB')
        PARM_FILE_RCBDRF1.ICUSCTY =     /* CITY AND ZIPCODE   */
           TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP+1))
              || ' '
              ||TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP)) ;

       OTHERWISE
        PARM_FILE_RCBDRF1.ICUSCTY =     /* ZIPCODE AND CITY    */
          TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP))
             || ' '
             ||TRIM(PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP+1)) ;
      END;   /* END SELECT      */
    END;   /* END WHEN ICTY   */

    WHEN (IZIP > 2) DO;                 /* ZIPCODE FOUND       */
          PARM_FILE_RCBDRF1.NCUSSTR =       /* SET STREET/PO.BOX  */
                PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP-1);

      IF PARM_INT_AREA.COUNTRY_NUMBER = '624' THEN   /* SOC-S1527886 */
        DO;
          PARM_FILE_RCBDRF1.ICUSGZC = ' ';   /* SET  ZIP-CODE      */
          PARM_FILE_RCBDRF1.ICUSCTY =       /* SET CITY NAME      */
            SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP),5,6) ||' ' ||
            PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP+1);
        END;
          ELSE DO;
            PARM_FILE_RCBDRF1.ICUSGZC =       /* SET  ZIP-CODE      */
             SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP),5);
            PARM_FILE_RCBDRF1.ICUSCTY =       /* SET CITY NAME      */
             PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP+1);
               END;                           /* EOC-S1527886 */
    END;  /*  END WHEN IZIP > 2  */
                                      /* start PCEDSP-0342*/

    WHEN (IZIP = 2) DO;             /* ZIPCODE FOUND - NO STREET ?*/
        PARM_FILE_RCBDRF1.NCUSSTR = 'Incorrect/Missing Address';
     PARM_FILE_RCBDRF1.ICUSGZC =       /* SET  ZIP-CODE      */
             SUBSTR(PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP),5);
     PARM_FILE_RCBDRF1.ICUSCTY =       /* SET CITY NAME      */
             PARM_USER_EXTRA_INFO.ADDR_LINES(IZIP+1);

    END;  /*  END WHEN IZIP = 2  */

    OTHERWISE DO;                   /* WITH IZIP<=2 -INCOMPLETE*/
        PARM_FILE_RCBDRF1.NCUSSTR = 'Incorrect/Missing Address';
        PARM_FILE_RCBDRF1.ICUS3AD = ''; /* end PCEDSP-0342*/
        PARM_FILE_RCBDRF1.ICUSGZC = ' ';
        PARM_FILE_RCBDRF1.ICUSCTY = 'Please correct in SOURCE ';
    END;  /*  END OTHERWISE   */
  END;  /*  END SELECT      */
 END;  /*  END PROC        */
 /* ------------------------------------------------------------------*/
 /* -     PCEDSP-0294 :BH 1.0 Updates on Userexists for CI-FDB      -*/
 /* ------------------------------------------------------------------*/
 /*/*******************************************************************/
 /* CALLED FROM USER DEFINED PROCESS                                  */
 /*-------------------------------------------------------------------*/
 C846_PROC: PROCEDURE;
 C846_PARM_FILE_RCBDRF1_CUNOUSE = PARM_FILE_RCBDRF1.CUNOUSE;
 C846_PARM_FILE_RCBDRF1_AAS_ADD = PARM_FILE_RCBDRF1.AAS_ADD;

 PARM_FILE_RCBDRF1.IODPDBU.BUDIV = '2';
 IF (PARM_FILE_RCBDRF1.FCUSEMB = 'I' |
     PARM_FILE_RCBDRF1.FCUSEMB = 'K') THEN
 DO;
     PARM_FILE_RCBDRF1.FCUSEMB = ' ';
     PARM_FILE_RCBDRF1.CCUACOD = 'Y';
 END;

 /****************************************************************/
 /**       EMBARGO CODE                                         **/
 /****************************************************************/
 IF (PARM_FILE_RCBDRF1.FCUSEMB = 'L' |
     PARM_FILE_RCBDRF1.FCUSEMB = 'D' |        /* <=== 2000.03.20 */
     PARM_FILE_RCBDRF1.FCUSEMB = 'R') THEN
 DO;
     PARM_FILE_RCBDRF1.FCUSEMB = '1';
 END;
 ELSE PARM_FILE_RCBDRF1.FCUSEMB = ' ';
 /****************************************************************/
 /********  #NDRINGEN ENLIGT BEST#LLNINGEN AV K-G LINDGREN *******/
 /**                      FR$N 99.11.09                         **/
 /** OM CASH ON DELIVERY = 'R' I CEDS SKALL F#LTET S#TTAS TILL  **/
 /**     BLANKT I EXTRACT-FILEN                                 **/
 /****************************************************************/
 IF  PARM_FILE_RCBDRF1.CCUACOD = 'R'
     THEN
       DO;
          PARM_FILE_RCBDRF1.CCUACOD = ' ';
       END;
 /******                                                   ******/

 IF PARM_USER_EXTRA_INFO.HW_ADDR_FLAG = '1' THEN
    DO;
          CALL C846_INST_ADDR;                         /*SOC-S1697635*/
       END;
    ELSE
       DO;  /* INSTAL.ADRESS SAKNAS, H#MTA DEFAULT ELLER MAIL.ADDRES */
          CALL C846_DEFAULT_ADDR;
          CALL C846_CREATE_BU_CODE;
       END;

 END C846_PROC;                                        /*EOC-S1697635*/

 C846_INST_ADDR: PROC;
0/*------------------------------------------------------------------*/
 /*   @PPNA CURSOR F@R ADRESS TABELL                                 */
 /*------------------------------------------------------------------*/
      CALL C846_OPEN_ADDR_CURSOR;
0/*------------------------------------------------------------------*/
 /*   L#S ALLA AKTUELLA RECORD I ADDR_LINE TABELL VIA CURSOR         */
 /*------------------------------------------------------------------*/
      CALL C846_READ_ADDR_CURSOR;

      SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
        WHEN (0)
                                     /* INSTALLATIONSADRESS  */

            DO WHILE (SQLCA.SQLCODE = 0);

                CALL C846_KOLLA_ADDR_RAD;            /*SOC-S1697635*/
                CALL C846_CREATE_BU_CODE;
                CALL C846_READ_ADDR_CURSOR;
        END;
        WHEN(100);
        END;
           CALL C846_CLOSE_ADDR_CURSOR;
                                                     /*EOC-S1697635*/
 END C846_INST_ADDR;

 C846_KOLLA_ADDR_RAD:PROC;
         C846_VAT_NUM = SUBSTR(TAB_280.TEXT,3,12);
         IF (SUBSTR(TAB_280.TEXT,1,2)¬='SE' |  /*S1710905*/
            VERIFY(C846_VAT_NUM,'0123456789')¬='0')
         THEN
          DO;
               SELECT(LINE_NUMBER);
                 WHEN ('01')
                    DO;
                       PARM_FILE_RCBDRF1.CUNAME = TAB_280.TEXT;
                    END;
                 WHEN ('02')
                    DO;
                       PARM_FILE_RCBDRF1.NCUSSTR = TAB_280.TEXT;
                    END;
                 WHEN ('03')
                    DO;
                      CALL C846_RED_POST_NR;
                    END;
                 WHEN ('04')
                    DO;
                       PARM_FILE_RCBDRF1.NCUSSTR = TAB_280.TEXT;
                    END;
                 WHEN ('06')
                    DO;
                       CALL C846_RED_POST_NR;
                    END;
                 WHEN ('07')
                    DO;
                       CALL C846_RED_PHONE_NR;
                    END;

                 OTHER
                    DO;
                 END;
                END; /*Select*/
          END;
 END C846_KOLLA_ADDR_RAD;

 C846_DEFAULT_ADDR: PROC;                            /*SOC-S1697635*/

    CALL C846_OPEN_ADDR_2_CURSOR;
    C846_CASE_2 = '5';     /* SET WORST CASE VALUE  */

    CALL C846_READ_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE       */
       WHEN (0)

          DO WHILE (SQLCA.SQLCODE = 0);
             CALL C846_KOLLA_ADDR_RAD;
             CALL C846_READ_ADDR_2_CURSOR;
          END;

        WHEN (100)
           DO;

             CALL C846_CREATE_STREET_ADDR;

             CALL C846_CREATE_BU_CODE;

    END;
 END;

  CALL C846_CLOSE_ADDR_2_CURSOR;
  END C846_DEFAULT_ADDR;                              /*EOC-S1697635*/

1C846_OPEN_ADDR_2_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C846_ADDR_2_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT,
             B.ZIP_CODE
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C846_COUNTRY_SWEDEN AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C846_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),3,1) = '1'    /*SOC-S1697635*/
               AND   A.ADDRESS_NUMBER = (SELECT MIN(C.ADDRESS_NUMBER)
             FROM RCBT0280_ADDR_LINE C, RCBT0150_CUST_ADDR D
               WHERE C.COUNTRY_NUMBER  = :C846_COUNTRY_SWEDEN AND
               C.COUNTRY_NUMBER  = D.COUNTRY_NUMBER AND
               C.CUSTOMER_NUMBER = :C846_PARM_FILE_RCBDRF1_CUNOUSE AND
               C.CUSTOMER_NUMBER = D.CUSTOMER_NUMBER  AND
               C.ADDRESS_NUMBER  = D.ADDRESS_NUMBER   AND
               CURRENT DATE     >= D.EFFECTIVE_DATE   AND /*C0003-0201*/
               CURRENT DATE     <= D.END_DATE         AND /*C0003-0201*/
               SUBSTR((D.ADDRESS_MASK),3,1) = '1')
               ORDER BY LINE_NUMBER                  /*EOC-S1697635*/
              FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C846_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
           PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_2_CURSOR');
           PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           PUT SKIP LIST('FEL, ST{NGER CURSOR');
           CALL C846_CLOSE_ADDR_2_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C846_OPEN_ADDR_2_CURSOR;

1C846_CLOSE_ADDR_2_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C846_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_2_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C846_CLOSE_ADDR_2_CURSOR;

1C846_READ_ADDR_2_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/
    EXEC SQL
         FETCH C846_ADDR_2_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT,
           :TAB_150.ZIP_CODE;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH ADDR_2_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C846_CLOSE_ADDR_2_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C846_READ_ADDR_2_CURSOR;


1C846_CREATE_BU_CODE: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  SKAPA DEFAULT BU KOD OM BU = BLANK                   */
 /*                                                                 */
 /*******************************************************************/
    IF PARM_FILE_RCBDRF1.FHSISOI = 'A'  THEN
    DO;
       PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '9203000';
    END;
 END C846_CREATE_BU_CODE;

1C846_RED_PHONE_NR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  REDIGERA TELEFONUMMER                                */
 /*                                                                 */
 /*******************************************************************/
    C846_ADDR_LINE = ' ';

    IF SUBSTR(TEXT,1,3) = 'VX=' | /* FR$N SOF */
       SUBSTR(TEXT,1,3) = 'VX<'  /* FR$N SOF */
    THEN
       C846_LINE_1_11 = SUBSTR(TAB_280.TEXT,4,11);
    ELSE
       C846_LINE_1_11 = TEXT;

    C846_NUM = VERIFY(C846_LINE_1_11,' 0123456789');
    IF C846_NUM ¬= 0
    THEN
       SUBSTR(C846_LINE_1_11,C846_NUM,1) = ' ';

    PARM_FILE_RCBDRF1.ICUS3AD =
              C846_ADDR_LINE ;  /* NEW TELEPHONENUMBER */


 END C846_RED_PHONE_NR;

1C846_CREATE_STREET_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H#MTA ADRESS FR$N MAILING ADRESS                     */
 /*                                                                 */
 /*******************************************************************/
0/*------------------------------------------------------------------*/
 /*   @PPNA CURSOR F@R ADRESS TABELL  150 OCH 280                    */
 /*------------------------------------------------------------------*/
    CALL C846_OPEN_ADDR_3_CURSOR;
0/*------------------------------------------------------------------*/
 /*   L#S ALLA AKTUELLA RECORD I VIA CURSOR                          */
 /*------------------------------------------------------------------*/
    C846_CASE_2 = '5';     /* SET WORST CASE VALUE  */

    CALL C846_READ_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE       */
       WHEN (0)
          DO WHILE (SQLCA.SQLCODE = 0);
                                       /* MAILINGADRESS            */

 /*..........PARM_FILE_RCBDRF1.AAS_ADD = TAB_280.ADDRESS_NUMBER;......*/

             IF TAB_280.LINE_NUMBER = '01'
             THEN                      /* LINE 1 #R ALLTID KUNDENS */
                                       /* NAMN |||                 */
                PARM_FILE_RCBDRF1.CUNAME = TAB_280.TEXT;
             ELSE
                DO;
                   C846_TEXT_RAD = TAB_280.TEXT;
                   IF VERIFY(C846_TEXT_FALT,'0123456789') = '0' |
                      C846_TEXT_FALT = 'S-' |
                      C846_TEXT_FALT = 'S '
                                   /*  TROLIGT POSTNUMMER       */
                   THEN
                      DO;
                        CALL C846_RED_POST_NR;
                      END;

                   ELSE
                      DO;
                      C846_VAT_NUM = SUBSTR(TAB_280.TEXT,3,12);
                      IF (SUBSTR(TAB_280.TEXT,1,2)¬='SE' |  /*S1710905*/
                          VERIFY(C846_VAT_NUM,'0123456789')¬='0')
                       THEN
                        DO;
                          CALL C846_RED_STREET_ADRESS;
                        END;
                    END;
                END;

             CALL C846_READ_ADDR_3_CURSOR;

          END;

       WHEN (100)
           DO;
                  /* PUT SKIP LIST('CUSTOMER NOT FOUND ||| ');  */
         /*   PUT SKIP LIST('KUND NR INPUT = ' ||               */
         /*       PARM_FILE_RCBDRF1.CUNOUSE);                   */
         /*   PUT SKIP LIST('ADDR NR INPUT = ' ||               */
         /*       PARM_FILE_RCBDRF1.AAS_ADD);                   */
           END;

       END;

    CALL C846_CLOSE_ADDR_3_CURSOR;         /*ST#NG CURSOR */

                                         /* END USER DEFINED PROCESS */
                                         /* RESET LEVEL              */
 END C846_CREATE_STREET_ADDR;

1C846_RED_POST_NR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  REDIGERA POSTNUMMER                                  */
 /*                                                                 */
 /*******************************************************************/
    IF (SUBSTR(TAB_280.TEXT,1,2) = 'S-' |
       SUBSTR(TAB_280.TEXT,1,2) = 'S-')
    THEN
       DO;
          PARM_FILE_RCBDRF1.ICUSGZC = (SUBSTR(TAB_280.TEXT,3,3)||
                                       SUBSTR(TAB_280.TEXT,7,2));
          PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TAB_280.TEXT,10,20);
       END;
    ELSE
       DO;
          PARM_FILE_RCBDRF1.ICUSGZC = (SUBSTR(TAB_280.TEXT,1,3)||
                                       SUBSTR(TAB_280.TEXT,5,2));
          PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TAB_280.TEXT,8,22);
       END;

 END C846_RED_POST_NR;

1C846_RED_STREET_ADRESS: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  TA READ P$ B#STA GATUADRESS, DVS MED GATUNUMMER      */
 /*                                                                 */
 /*******************************************************************/
    SELECT(SUBSTR(TAB_280.TEXT,1,3));
        WHEN('   ')                   /* WORST CASE  */
            C846_CASE_1 = '5';

        WHEN(',  ')                   /* WORST CASE  */
            DO;
               SUBSTR(TAB_280.TEXT,1,1) = ' ';
               C846_CASE_1 = '5';
            END;
        WHEN('C/O')                   /* NEXT WORST CASE  */
            C846_CASE_1 = '4';
        WHEN('BOX')                   /* NEXT WORST CASE  */
            C846_CASE_1 = '3';
        OTHER DO;
                 C846_CASE_1 = '2';
                 DO C846_NUM_1 = 1 TO 30;
                    IF C846_POS(C846_NUM_1) >= '0' &
                       C846_POS(C846_NUM_1) <= '9'
                    THEN DO;            /* BEST CASE   */
                            C846_CASE_1 = '1';
                         END;
                 END;
              END; /* OTHER  */
        END; /* SELECT */

    IF C846_CASE_1 <= C846_CASE_2
    THEN DO;
            C846_CASE_2 = C846_CASE_1;
            PARM_FILE_RCBDRF1.NCUSSTR = TAB_280.TEXT;
         END;

 END C846_RED_STREET_ADRESS;

1C846_OPEN_ADDR_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C846_ADDR_CURSOR CURSOR FOR
         SELECT
             LINE_NUMBER,
             TEXT
         FROM RCBT0280_ADDR_LINE
         WHERE COUNTRY_NUMBER  = :C846_COUNTRY_SWEDEN AND
               CUSTOMER_NUMBER = :C846_PARM_FILE_RCBDRF1_CUNOUSE AND
               ADDRESS_NUMBER  = :C846_PARM_FILE_RCBDRF1_AAS_ADD
         ORDER BY LINE_NUMBER
         FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C846_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
           PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_CURSOR');
           PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           CALL C846_CLOSE_ADDR_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C846_OPEN_ADDR_CURSOR;

1C846_CLOSE_ADDR_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/

    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C846_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C846_CLOSE_ADDR_CURSOR;

1C846_READ_ADDR_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/

    EXEC SQL
         FETCH C846_ADDR_CURSOR
         INTO
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH CMT_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C846_CLOSE_ADDR_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C846_READ_ADDR_CURSOR;

1C846_OPEN_ADDR_3_CURSOR: PROC;                       /*SOC-S1697635*/
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C846_ADDR_3_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C846_COUNTRY_SWEDEN AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C846_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),1,1) = '1'
         FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C846_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
           PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_CURSOR');
           PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           CALL C846_CLOSE_ADDR_3_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C846_OPEN_ADDR_3_CURSOR;

1C846_CLOSE_ADDR_3_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C846_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C846_CLOSE_ADDR_3_CURSOR;

1C846_READ_ADDR_3_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/

    EXEC SQL
         FETCH C846_ADDR_3_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH CMT_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C846_CLOSE_ADDR_3_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C846_READ_ADDR_3_CURSOR;                          /*EOC-S1697635*/

1/*-------------------------------------------------------------------*/
 /* C678_PROC                                                         */
 /* CALLED FROM USER DEFINED PROCESS                                  */
 /*-------------------------------------------------------------------*/
 C678_PROC: PROCEDURE;
 C678_PARM_FILE_RCBDRF1_CUNOUSE = PARM_FILE_RCBDRF1.CUNOUSE;
 C678_PARM_FILE_RCBDRF1_AAS_ADD = PARM_FILE_RCBDRF1.AAS_ADD;

 PARM_FILE_RCBDRF1.IODPDBU.BUDIV = '2';

 /****************************************************************/
 /**       EMBARGO CODE                                         **/
 /****************************************************************/
 IF PARM_FILE_RCBDRF1.FCUSEMB = 'D' THEN
    DO;
       PARM_FILE_RCBDRF1.FCUSEMB = '1';
    END;
 ELSE PARM_FILE_RCBDRF1.FCUSEMB = ' ';

 /****************************************************************/
 /********  #NDRINGEN ENLIGT BEST#LLNINGEN AV K-G LINDGREN *******/
 /**                      FR$N 99.11.09                         **/
 /** OM CASH ON DELIVERY = 'R' I CEDS SKALL F#LTET S#TTAS TILL  **/
 /**     BLANKT I EXTRACT-FILEN                                 **/
 /****************************************************************/
 IF  PARM_FILE_RCBDRF1.CCUACOD = 'R'
     THEN
       DO;
          PARM_FILE_RCBDRF1.CCUACOD = ' ';
       END;
 /******                                                    ******/

 IF PARM_USER_EXTRA_INFO.HW_ADDR_FLAG = '1'
    THEN
       DO;  /* MASKINEN FINNS MED I TBL 340 --> INST.ADRESS FINNS    */
          CALL C678_INST_ADDR;
       END;
    ELSE
       DO;  /* INSTAL.ADRESS SAKNAS, H#MTA DEFAULT ELLER MAIL.ADDRES */
          CALL C678_DEFAULT_ADDR;
          CALL C678_CREATE_BU_CODE;
       END;

 END C678_PROC;

1C678_KOLLA_ADDR_RAD: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  HANTERA ADRESS-RADER                                 */
 /*                                                                 */
 /*******************************************************************/
   IF TAB_280.LINE_NUMBER = '01'
      THEN             /*        LINE 1 #R ALLTID KUNDENS NAMN |||  */
          PARM_FILE_RCBDRF1.CUNAME = TAB_280.TEXT;
      ELSE
        DO;
           C678_TEXT_RAD = TAB_280.TEXT;
           C678_VAT_NUM = SUBSTR(TAB_280.TEXT,3,8);      /*S1710905*/
           IF  SUBSTR(C678_TEXT_RAD,5,1) = ' ' &
             SUBSTR(C678_TEXT_RAD,1,4) = SUBSTR(TAB_150.ZIP_CODE,1,4)
                THEN
                  DO;
                     CALL C678_RED_POST_NR;
                  END;
                 ELSE
                     IF SUBSTR(C678_TEXT_RAD,1,2) = 'D:'
                      THEN
                         DO;
                              CALL C678_RED_PHONE_NR;
                         END;

                 ELSE
                   IF VERIFY(C678_TEXT_FALT,' 0123456789') ¬= '0'
                    & TAB_280.LINE_NUMBER > '01'
                    & TAB_280.LINE_NUMBER < '06'
                    & ( SUBSTR(TAB_280.TEXT,1,2)¬='DK'    /*S1710905*/
                    | VERIFY(C678_VAT_NUM,' 0123456789') ¬= '0')
                   THEN
                     DO;
                       CALL C678_RED_STREET_ADRESS;
                     END;
      END;
 END C678_KOLLA_ADDR_RAD;

1C678_CREATE_BU_CODE: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  SKAPA DEFAULT BU KOD OM BU = BLANK                   */
 /*                                                                 */
 /*******************************************************************/
    IF PARM_FILE_RCBDRF1.FHSISOI = 'A'  THEN
    DO;
       PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '9080000';
    END;
 END C678_CREATE_BU_CODE;

1C678_RED_PHONE_NR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  REDIGERA TELEFONNUMMER                                */
 /*                                                                 */
 /*******************************************************************/
    PARM_FILE_RCBDRF1.ICUS3AD = SUBSTR(TAB_280.TEXT,3,28);


 END C678_RED_PHONE_NR;

1C678_INST_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H#MTA INST. ADRESS FR}N TBL. 280                     */
 /*                                                                 */
 /*******************************************************************/
      CALL C678_OPEN_ADDR_CURSOR; /* @PPNA CURSOR F@R ADRESS TABELL  */
      CALL C678_READ_ADDR_CURSOR; /*   L#S ALLA AKTUELLA RECORD I    */
                                  /*  ADDR_LINE TABELL VIA CURSOR    */
      SELECT(SQLCA.SQLCODE);      /* CHECK SQL CODE                  */

         WHEN (0)                 /* INSTALLATIONSADRESS             */
            DO WHILE (SQLCA.SQLCODE = 0);
                 CALL C678_KOLLA_ADDR_RAD;
                 CALL C678_CREATE_BU_CODE;
                 CALL C678_READ_ADDR_CURSOR;
            END;                                     /* END DO WHILE */

         WHEN (100)
           DO;
          /*  PUT SKIP LIST('KUND SAKNADE INSTALLATIONADRESS |||, ' ||*/
          /*      PARM_FILE_RCBDRF1.CUNOUSE);                         */
           END;

      END; /* END SELECT */
      CALL C678_CLOSE_ADDR_CURSOR;   /* ST#NG CURSOR */
 END C678_INST_ADDR;

1C678_DEFAULT_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H#MTA ADRESS INST. ADRESS MED DEN L#GSTA ADRESS      */
 /*            NUMMER, OM SAKNAS - H#MTA MAILING ADRESS             */
 /*                                                                 */
 /*******************************************************************/
    CALL C678_OPEN_ADDR_2_CURSOR;  /* @PPNA CURSOR F@R ADRESS TABELL*/
                                   /* 150 OCH 280                   */
    C678_CASE_2 = '5';             /*  SET WORST CASE VALUE         */
    CALL C678_READ_ADDR_2_CURSOR;  /* L#S ALLA AKTUELLA RECORD I    */
                                   /* VIA CURSOR                    */
    SELECT(SQLCA.SQLCODE);         /* CHECK SQL CODE                */
       WHEN (0)                    /* HITTAT DEFAULT INST. ADRESS   */
          DO WHILE (SQLCA.SQLCODE = 0);
             CALL C678_KOLLA_ADDR_RAD;
             CALL C678_READ_ADDR_2_CURSOR;
          END;

       WHEN (100)
           CALL C678_MAIL_ADDR;     /* F¦RS¦K MED MAIL ADDRESS */
    END;
    CALL C678_CLOSE_ADDR_2_CURSOR;

                                        /* END USER DEFINED PROCESS */
                                        /* RESET LEVEL              */
 END C678_DEFAULT_ADDR;

1C678_MAIL_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H                                                    */
 /*                              - H#MTA MAILING ADRESS             */
 /*                                                                 */
 /*******************************************************************/
             CALL C678_OPEN_ADDR_3_CURSOR;
             CALL C678_READ_ADDR_3_CURSOR;
             SELECT(SQLCA.SQLCODE);         /* CHECK SQL CODE         */
               WHEN (0)                     /* MAIL.ADRESS FINNS      */
                  DO WHILE (SQLCA.SQLCODE = 0);
                      CALL C678_KOLLA_ADDR_RAD;
                      CALL C678_READ_ADDR_3_CURSOR;
                  END;

               WHEN (100)
                 DO;
                     PUT SKIP LIST('CUSTOMER NOT FOUND ||| ');
                       PUT SKIP LIST('KUND NR INPUT = ' ||
                           PARM_FILE_RCBDRF1.CUNOUSE);
                 END;

               END;
       CALL C678_CLOSE_ADDR_3_CURSOR;

 END C678_MAIL_ADDR;

1C678_RED_POST_NR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  REDIGERA POSTNUMMER                                  */
 /*                                                                 */
 /*******************************************************************/

      PARM_FILE_RCBDRF1.ICUSGZC = SUBSTR(TAB_280.TEXT,1,4);
      PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TAB_280.TEXT,6,24);

 END C678_RED_POST_NR;

1C678_RED_STREET_ADRESS: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  TA READ P$ B#STA GATUADRESS, DVS MED GATUNUMMER      */
 /*                                                                 */
 /*******************************************************************/

    SELECT(SUBSTR(TAB_280.TEXT,1,3));
        WHEN('   ')                   /* WORST CASE  */
            C678_CASE_1 = '5';
        WHEN('I  ')                   /* WORST CASE  */
            DO;
               SUBSTR(TAB_280.TEXT,1,1) = ' ';
               C678_CASE_1 = '5';
            END;
        WHEN(',  ')                   /* WORST CASE  */
            DO;
               SUBSTR(TAB_280.TEXT,1,1) = ' ';
               C678_CASE_1 = '5';
            END;
        WHEN('4  ')                   /* WORST CASE  */
            DO;
               SUBSTR(TAB_280.TEXT,1,1) = ' ';
               C678_CASE_1 = '5';
            END;
        WHEN('C/O')                   /* NEXT WORST CASE  */
            C678_CASE_1 = '4';
        WHEN('POS')                   /* POSTBOX     */
            C678_CASE_1 = '4';
        WHEN('BOX')                   /* BOX         */
            C678_CASE_1 = '4';
        WHEN('BAS')                   /* BASL        */
            C678_CASE_1 = '3';
        WHEN('PER')                   /* PERS        */
            C678_CASE_1 = '3';
        WHEN('BUD')                   /* BUDG.       */
            C678_CASE_1 = '3';
        WHEN('ATT')                   /* ATT         */
            C678_CASE_1 = '3';
        WHEN('SUP')                   /* SUPL        */
            C678_CASE_1 = '3';

        OTHER DO;
                 C678_CASE_1 = '2';
                 DO C678_NUM_1 = 1 TO 30;
                    IF C678_POS(C678_NUM_1) >= '0' &
                       C678_POS(C678_NUM_1) <= '9'
                    THEN DO;            /* BEST CASE   */
                            C678_CASE_1 = '1';
                         END;
                 END;
              END;                 /* OTHER  */
        END;                      /* SELECT */
    IF C678_CASE_1 <= C678_CASE_2
    THEN DO;
            C678_CASE_2 = C678_CASE_1;
            PARM_FILE_RCBDRF1.NCUSSTR = TAB_280.TEXT;
         END;

 END C678_RED_STREET_ADRESS;

1C678_OPEN_ADDR_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C678_ADDR_CURSOR CURSOR FOR
         SELECT
             A.LINE_NUMBER,
             A.TEXT,
             B.ZIP_CODE
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C678_COUNTRY_DENMARK AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C678_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = :C678_PARM_FILE_RCBDRF1_AAS_ADD AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER
         ORDER BY LINE_NUMBER
         FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C678_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
          PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           CALL C678_CLOSE_ADDR_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C678_OPEN_ADDR_CURSOR;

1C678_CLOSE_ADDR_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/

    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C678_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C678_CLOSE_ADDR_CURSOR;

1C678_READ_ADDR_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/

    EXEC SQL
         FETCH C678_ADDR_CURSOR
         INTO
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT,
           :TAB_150.ZIP_CODE;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH CMT_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C678_CLOSE_ADDR_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C678_READ_ADDR_CURSOR;

1C678_OPEN_ADDR_2_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C678_ADDR_2_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT,
             B.ZIP_CODE
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C678_COUNTRY_DENMARK AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C678_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),3,1) = '1'
               AND   A.ADDRESS_NUMBER = (SELECT MIN(C.ADDRESS_NUMBER)
             FROM RCBT0280_ADDR_LINE C, RCBT0150_CUST_ADDR D
               WHERE C.COUNTRY_NUMBER  = :C678_COUNTRY_DENMARK AND
               C.COUNTRY_NUMBER  = D.COUNTRY_NUMBER AND
               C.CUSTOMER_NUMBER = :C678_PARM_FILE_RCBDRF1_CUNOUSE AND
               C.CUSTOMER_NUMBER = D.CUSTOMER_NUMBER  AND
               C.ADDRESS_NUMBER  = D.ADDRESS_NUMBER   AND
               CURRENT DATE     >= D.EFFECTIVE_DATE   AND /*C0003-0201*/
               CURRENT DATE     <= D.END_DATE         AND /*C0003-0201*/
               SUBSTR((D.ADDRESS_MASK),3,1) = '1')
               ORDER BY LINE_NUMBER
              FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C678_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
           PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_2_CURSOR');
           PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           PUT SKIP LIST('FEL, ST{NGER CURSOR');
           CALL C678_CLOSE_ADDR_2_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C678_OPEN_ADDR_2_CURSOR;

1C678_CLOSE_ADDR_2_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C678_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_2_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C678_CLOSE_ADDR_2_CURSOR;

1C678_READ_ADDR_2_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/
    EXEC SQL
         FETCH C678_ADDR_2_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT,
           :TAB_150.ZIP_CODE;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH ADDR_2_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C678_CLOSE_ADDR_2_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C678_READ_ADDR_2_CURSOR;

1C678_OPEN_ADDR_3_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*                        MAILING ADRESS                           */
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C678_ADDR_3_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT,
             B.ZIP_CODE
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C678_COUNTRY_DENMARK AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C678_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),1,1) = '1'
         ORDER BY LINE_NUMBER
         FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C678_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
          PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_3_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           CALL C678_CLOSE_ADDR_3_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C678_OPEN_ADDR_3_CURSOR;

1C678_CLOSE_ADDR_3_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*               MAILING ADRESS                                      */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C678_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_3_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C678_CLOSE_ADDR_3_CURSOR;

1C678_READ_ADDR_3_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/
    EXEC SQL
         FETCH C678_ADDR_3_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT,
           :TAB_150.ZIP_CODE;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                      /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH ADDR_3_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C678_CLOSE_ADDR_3_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C678_READ_ADDR_3_CURSOR;

1/*-------------------------------------------------------------------*/
 /* C806_PROC                                                         */
 /* CALLED FROM USER DEFINED PROCESS                                  */
 /*-------------------------------------------------------------------*/
 C806_PROC: PROCEDURE;
 C806_PARM_FILE_RCBDRF1_CUNOUSE = PARM_FILE_RCBDRF1.CUNOUSE;
 C806_PARM_FILE_RCBDRF1_AAS_ADD = PARM_FILE_RCBDRF1.AAS_ADD;

 PARM_FILE_RCBDRF1.IODPDBU.BUDIV = '2';
 IF  PARM_FILE_RCBDRF1.FCUSEMB = 'D'
     THEN
       DO;
          PARM_FILE_RCBDRF1.FCUSEMB = '1';
       END;
     ELSE
          PARM_FILE_RCBDRF1.FCUSEMB = ' ';

 /****************************************************************/
 /********  #NDRINGEN ENLIGT BEST#LLNINGEN AV K-G LINDGREN *******/
 /**                      FR$N 99.11.09                         **/
 /** OM CASH ON DELIVERY = 'R' I CEDS SKALL F#LTET S#TTAS TILL  **/
 /**     BLANKT I EXTRACT-FILEN                                 **/
 /****************************************************************/
 IF  PARM_FILE_RCBDRF1.CCUACOD = 'R'
     THEN
       DO;
          PARM_FILE_RCBDRF1.CCUACOD = ' ';
       END;
 /******                                                    ******/

 IF PARM_USER_EXTRA_INFO.HW_ADDR_FLAG = '1'
    THEN
       DO;  /* MASKINEN FINNS MED I TBL 340 --> INST.ADRESS FINNS    */
          CALL C806_INST_ADDR;
       END;
    ELSE
       DO;  /* INSTAL.ADRESS SAKNAS, H#MTA DEFAULT ELLER MAIL.ADDRES */
          CALL C806_DEFAULT_ADDR;
          CALL C806_CREATE_BU_CODE;
       END;

 END C806_PROC;

1C806_KOLLA_ADDR_RAD: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  HANTERA ADRESS-RADER                                 */
 /*                                                                 */
 /*******************************************************************/
   IF TAB_280.LINE_NUMBER = '01'
      THEN             /* LINE 1 #R ALLTID KUNDENS NAMN |||         */
          PARM_FILE_RCBDRF1.CUNAME = TAB_280.TEXT;
      ELSE
        DO;
           C806_TEXT_RAD = TAB_280.TEXT;
           C806_VAT_NUM = SUBSTR(TAB_280.TEXT,3,9);      /*S1710905*/
           IF  SUBSTR(C806_TEXT_RAD,5,1) = ' ' &
             SUBSTR(C806_TEXT_RAD,1,4) = SUBSTR(TAB_150.ZIP_CODE,1,4)
                THEN
                  DO;
                     CALL C806_RED_POST_NR;
                  END;
                 ELSE
         /*          IF VERIFY(C806_TEXT_FALT,'S0123456789') = '0' */
         /*                      & SUBSTR(C806_TEXT_RAD,3,1) = ' ' */
                     IF SUBSTR(C806_TEXT_RAD,1,2) = 'D:'
                      THEN
                         DO;
                              CALL C806_RED_PHONE_NR;
                         END;

                 ELSE                             /*SOC S1710905*/
                   IF VERIFY(C806_TEXT_FALT,' 0123456789') ¬= '0'
                   & (SUBSTR(TAB_280.TEXT,1,2)¬='NO'
                   | VERIFY(C806_VAT_NUM,' 0123456789') ¬= '0'
                   |  SUBSTR(TAB_280.TEXT,12,3)¬='MVA')
                   THEN                           /*EOC S1710905*/
                     DO;
                       CALL C806_RED_STREET_ADRESS;
                     END;
      END;
 END C806_KOLLA_ADDR_RAD;

1C806_CREATE_BU_CODE: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  SKAPA DEFAULT BU KOD OM BU = BLANK                   */
 /*                                                                 */
 /*******************************************************************/
    IF PARM_FILE_RCBDRF1.FHSISOI = 'A'  THEN
    DO;
       PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '9080000';
    END;
 END C806_CREATE_BU_CODE;

1C806_RED_PHONE_NR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  REDIGERA TELEFONNUMMER                                */
 /*                                                                 */
 /*******************************************************************/
     C806_ADDR_LINE = ' ';

      IF SUBSTR(TEXT,1,3) = 'VX=' |    /* FR$N SOF */
         SUBSTR(TEXT,1,3) = 'VX<'      /* FR$N SOF */
      THEN
         C806_LINE_1_11 = SUBSTR(TAB_280.TEXT,4,11);
      ELSE
         C806_LINE_1_11 = TEXT;

      C806_NUM = VERIFY(C806_LINE_1_11,' 0123456789');
      IF C806_NUM ¬= 0
      THEN
         SUBSTR(C806_LINE_1_11,C806_NUM,1) = ' ';

    PARM_FILE_RCBDRF1.ICUS3AD =
              C806_ADDR_LINE ;           /* NEW TELEPHONENUMBER
 /* PARM_FILE_RCBDRF1.ICUS3AD = (SUBSTR(C806_ADDR_LINE,1,2)||   */
 /*                              SUBSTR(C806_ADDR_LINE,4,8));   */
 /* PARM_FILE_RCBDRF1.ICUS3AD = SUBSTR(TAB_280.TEXT,3,28);     */


 END C806_RED_PHONE_NR;

1C806_INST_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H#MTA INST. ADRESS FR}N TBL. 280                     */
 /*                                                                 */
 /*******************************************************************/
      CALL C806_OPEN_ADDR_CURSOR; /* @PPNA CURSOR F@R ADRESS TABELL  */
      CALL C806_READ_ADDR_CURSOR; /*   L#S ALLA AKTUELLA RECORD I    */
                                  /*  ADDR_LINE TABELL VIA CURSOR    */
      SELECT(SQLCA.SQLCODE);      /* CHECK SQL CODE                  */

         WHEN (0)                 /* INSTALLATIONSADRESS             */
            DO WHILE (SQLCA.SQLCODE = 0);
                 CALL C806_KOLLA_ADDR_RAD;
                 CALL C806_CREATE_BU_CODE;
                 CALL C806_READ_ADDR_CURSOR;
            END;                                     /* END DO WHILE */

         WHEN (100);

      END; /* END SELECT */
      CALL C806_CLOSE_ADDR_CURSOR;   /* ST#NG CURSOR */
 END C806_INST_ADDR;

1C806_DEFAULT_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H#MTA ADRESS INST. ADRESS MED DEN L#GSTA ADRESS      */
 /*            NUMMER, OM SAKNAS - H#MTA MAILING ADRESS             */
 /*                                                                 */
 /*******************************************************************/
    /* PUT SKIP LIST('I B¦RJAN AV C806_DEFAULT_ADDR.'); */
    CALL C806_OPEN_ADDR_2_CURSOR;  /* @PPNA CURSOR F@R ADRESS TABELL*/
                                   /* 150 OCH 280                   */
    C806_CASE_2 = '5';             /*  SET WORST CASE VALUE         */
    CALL C806_READ_ADDR_2_CURSOR;  /* L#S ALLA AKTUELLA RECORD I    */
                                   /* VIA CURSOR                    */
    SELECT(SQLCA.SQLCODE);         /* CHECK SQL CODE                */
       WHEN (0)                    /* HITTAT DEFAULT INST. ADRESS   */
          DO WHILE (SQLCA.SQLCODE = 0);
             CALL C806_KOLLA_ADDR_RAD;
             CALL C806_READ_ADDR_2_CURSOR;
          END;

       WHEN (100)
           CALL C806_MAIL_ADDR;     /* F¦RS¦K MED MAIL ADDRESS */
    END;
    CALL C806_CLOSE_ADDR_2_CURSOR;

                                        /* END USER DEFINED PROCESS */
                                        /* RESET LEVEL              */
 END C806_DEFAULT_ADDR;

1C806_MAIL_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H                                                    */
 /*                              - H#MTA MAILING ADRESS             */
 /*                                                                 */
 /*******************************************************************/
  /*  PUT SKIP LIST('I B¦RJAN AV C806_MAIL_ADDR.************');      */
             CALL C806_OPEN_ADDR_3_CURSOR;
             CALL C806_READ_ADDR_3_CURSOR;
             SELECT(SQLCA.SQLCODE);         /* CHECK SQL CODE         */
               WHEN (0)                     /* MAIL.ADRESS FINNS      */
                  DO WHILE (SQLCA.SQLCODE = 0);
                      CALL C806_KOLLA_ADDR_RAD;
   /*                    PUT SKIP LIST('CUSTOMER  FOUND ||| ');      */
   /*                    PUT SKIP LIST('KUND NR INPUT = ' ||        */
   /*                      PARM_FILE_RCBDRF1.CUNOUSE);              */
   /*                      PUT SKIP LIST('ADDR NR INPUT = ' ||      */
   /*                        PARM_FILE_RCBDRF1.AAS_ADD);            */
                      CALL C806_READ_ADDR_3_CURSOR;
                  END;

               WHEN (100)
                 DO;
                     PUT SKIP LIST('CUSTOMER NOT FOUND ||| ');
                       PUT SKIP LIST('KUND NR INPUT = ' ||
                           PARM_FILE_RCBDRF1.CUNOUSE);
     /*                  PUT SKIP LIST('ADDR NR INPUT = ' ||       */
     /*                      PARM_FILE_RCBDRF1.AAS_ADD);           */
                 END;

               END;
       CALL C806_CLOSE_ADDR_3_CURSOR;

 END C806_MAIL_ADDR;

1C806_RED_POST_NR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  REDIGERA POSTNUMMER                                  */
 /*                                                                 */
 /*******************************************************************/

      PARM_FILE_RCBDRF1.ICUSGZC = SUBSTR(TAB_280.TEXT,1,4);
      PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TAB_280.TEXT,6,24);

 END C806_RED_POST_NR;

1C806_RED_STREET_ADRESS: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  TA READ P$ B#STA GATUADRESS, DVS MED GATUNUMMER      */
 /*                                                                 */
 /*******************************************************************/
    SELECT(SUBSTR(TAB_280.TEXT,1,3));
        WHEN('   ')                   /* WORST CASE  */
            C806_CASE_1 = '5';

        WHEN('C/O')                   /* NEXT WORST CASE  */
            C806_CASE_1 = '4';
        WHEN('POS')                   /* POSTBOKS    */
            C806_CASE_1 = '4';
        WHEN('BOK')                   /* BOKS        */
            C806_CASE_1 = '4';
        WHEN('BOX')                   /* BOX         */
            C806_CASE_1 = '4';
        WHEN('PF5')                   /* PF5....     */
            C806_CASE_1 = '4';
        WHEN('PF6')                   /* PF6....     */
            C806_CASE_1 = '4';
        WHEN('REF')                   /* REF         */
            C806_CASE_1 = '3';
        WHEN('ATT')                   /* ATT:        */
            C806_CASE_1 = '3';
        WHEN('BES')                   /* BEST        */
            C806_CASE_1 = '3';

        OTHER DO;
                 C806_CASE_1 = '2';
                 DO C806_NUM_1 = 1 TO 30;
                    IF C806_POS(C806_NUM_1) >= '0' &
                       C806_POS(C806_NUM_1) <= '9'
                    THEN DO;            /* BEST CASE   */
                            C806_CASE_1 = '1';
                         END;
                 END;
              END; /* OTHER  */
        END; /* SELECT */

    IF C806_CASE_1 <= C806_CASE_2
    THEN DO;
            C806_CASE_2 = C806_CASE_1;
            PARM_FILE_RCBDRF1.NCUSSTR = TAB_280.TEXT;
         END;

 END C806_RED_STREET_ADRESS;

1C806_OPEN_ADDR_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C806_ADDR_CURSOR CURSOR FOR
         SELECT
             A.LINE_NUMBER,
             A.TEXT,
             B.ZIP_CODE
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C806_COUNTRY_NORWAY AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C806_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = :C806_PARM_FILE_RCBDRF1_AAS_ADD AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER
         ORDER BY LINE_NUMBER
         FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C806_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
          PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           CALL C806_CLOSE_ADDR_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C806_OPEN_ADDR_CURSOR;

1C806_CLOSE_ADDR_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/

    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C806_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C806_CLOSE_ADDR_CURSOR;

1C806_READ_ADDR_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/

    EXEC SQL
         FETCH C806_ADDR_CURSOR
         INTO
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT,
           :TAB_150.ZIP_CODE;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH CMT_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C806_CLOSE_ADDR_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
    /* PUT SKIP LIST ('L{ST CURSOR 2');   */
 END C806_READ_ADDR_CURSOR;

1C806_OPEN_ADDR_2_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
 /* PUT SKIP LIST('¦PPNAR CURSOR 2');     */
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C806_ADDR_2_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT,
             B.ZIP_CODE
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C806_COUNTRY_NORWAY AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C806_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),3,1) = '1'
               AND   A.ADDRESS_NUMBER = (SELECT MIN(C.ADDRESS_NUMBER)
             FROM RCBT0280_ADDR_LINE C, RCBT0150_CUST_ADDR D
               WHERE C.COUNTRY_NUMBER  = :C806_COUNTRY_NORWAY AND
               C.COUNTRY_NUMBER  = D.COUNTRY_NUMBER AND
               C.CUSTOMER_NUMBER = :C806_PARM_FILE_RCBDRF1_CUNOUSE AND
               C.CUSTOMER_NUMBER = D.CUSTOMER_NUMBER  AND
               C.ADDRESS_NUMBER  = D.ADDRESS_NUMBER
               AND     SUBSTR((D.ADDRESS_MASK),3,1) = '1')
               ORDER BY LINE_NUMBER
              FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C806_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
           PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_2_CURSOR');
           PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           PUT SKIP LIST('FEL, ST{NGER CURSOR');
           CALL C806_CLOSE_ADDR_2_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C806_OPEN_ADDR_2_CURSOR;

1C806_CLOSE_ADDR_2_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C806_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_2_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C806_CLOSE_ADDR_2_CURSOR;

1C806_READ_ADDR_2_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/
    EXEC SQL
         FETCH C806_ADDR_2_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT,
           :TAB_150.ZIP_CODE;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH ADDR_2_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C806_CLOSE_ADDR_2_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C806_READ_ADDR_2_CURSOR;

1C806_OPEN_ADDR_3_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*                        MAILING ADRESS                           */
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C806_ADDR_3_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT,
             B.ZIP_CODE
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C806_COUNTRY_NORWAY AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C806_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),1,1) = '1'
         ORDER BY LINE_NUMBER
         FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C806_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
          PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_3_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           CALL C806_CLOSE_ADDR_3_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C806_OPEN_ADDR_3_CURSOR;

1C806_CLOSE_ADDR_3_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*               MAILING ADRESS                                      */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C806_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_3_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C806_CLOSE_ADDR_3_CURSOR;

1C806_READ_ADDR_3_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/
    EXEC SQL
         FETCH C806_ADDR_3_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT,
           :TAB_150.ZIP_CODE;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                      /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH ADDR_3_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C806_CLOSE_ADDR_3_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C806_READ_ADDR_3_CURSOR;

1/*-------------------------------------------------------------------*/
 /* C702_PROC                                                         */
 /* CALLED FROM USER DEFINED PROCESS                                  */
 /*-------------------------------------------------------------------*/
 C702_PROC: PROCEDURE;
 C702_PARM_FILE_RCBDRF1_CUNOUSE = PARM_FILE_RCBDRF1.CUNOUSE;
 PARM_FILE_RCBDRF1.IODPDBU.BUDIV = '2';
 IF (PARM_FILE_RCBDRF1.FCUSEMB = 'D' |
     PARM_FILE_RCBDRF1.FCUSEMB = 'E' |
     PARM_FILE_RCBDRF1.FCUSEMB = 'N' |
     PARM_FILE_RCBDRF1.FCUSEMB = 'R')
    THEN
      DO;
        PARM_FILE_RCBDRF1.FCUSEMB = '1';
      END;
    ELSE PARM_FILE_RCBDRF1.FCUSEMB = ' ';

 IF PARM_FILE_RCBDRF1.CCUACOD = '5'    /* CASH ON DELIVERY CODE  */
    THEN
      DO;
        PARM_FILE_RCBDRF1.CCUACOD = 'Y';
      END;

 /****************************************************************/
 /********  #NDRINGEN ENLIGT BEST#LLNINGEN AV K-G LINDGREN *******/
 /**                      FR$N 99.11.09                         **/
 /** OM CASH ON DELIVERY = 'R' I CEDS SKALL F#LTET S#TTAS TILL  **/
 /**     BLANKT I EXTRACT-FILEN                                 **/
 /****************************************************************/
 IF  PARM_FILE_RCBDRF1.CCUACOD = 'R'
     THEN
       DO;
          PARM_FILE_RCBDRF1.CCUACOD = ' ';
       END;

 IF PARM_USER_EXTRA_INFO.HW_ADDR_FLAG = '1'            /*SOC-S1697635*/
    THEN
       DO;  /* MASKINEN FINNS MED I TBL 340 --> INST.ADRESS FINNS    */
          CALL C702_INST_ADDR;
       END;
    ELSE
       DO;  /* INSTAL.ADRESS SAKNAS, H#MTA DEFAULT ELLER MAIL.ADDRES */
          CALL C702_DEFAULT_ADDR;
          CALL C702_CREATE_BU_CODE;
       END;

 END C702_PROC;                                        /*EOC-S1697635*/

 C702_INST_ADDR: PROC;
0/*------------------------------------------------------------------*/
 /*   @PPNA CURSOR F@R ADRESS TABELL                                 */
 /*------------------------------------------------------------------*/
    CALL C702_OPEN_ADDR_CURSOR;
0/*------------------------------------------------------------------*/
 /*   L#S ALLA AKTUELLA RECORD I ADDR_LINE TABELL VIA CURSOR         */
 /*------------------------------------------------------------------*/

    C702_CASE_2 = '5';     /* SET WORST CASE VALUE  */

    PARM_FILE_RCBDRF1.ICUSGZC = ' ';
    PARM_FILE_RCBDRF1.ICUSCTY = ' ';

    CALL C702_READ_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN (0)                      /*INSTALLATION ADDRESS  */
        DO WHILE (SQLCA.SQLCODE = 0);
          CALL C702_KOLLA_ADDR_RAD;                     /*SOC S1697635*/
          CALL C702_CREATE_BU_CODE;
          CALL C702_READ_ADDR_CURSOR;
        END;
      WHEN(100);
      END;
      CALL C702_CLOSE_ADDR_CURSOR;
                                                        /*EOC S1697635*/
 END C702_INST_ADDR;

 C702_KOLLA_ADDR_RAD: PROC;                               /*S1697635*/
             SELECT(LINE_NUMBER);
               WHEN ('01')
                  DO;
                     PARM_FILE_RCBDRF1.CUNAME = TAB_280.TEXT;
                  END;
               OTHER
                  DO;
                    CALL C702_CREATE_INSTALL_STREET_ADDR;
                  END;
             END;
 END C702_KOLLA_ADDR_RAD;                                 /*S1697635*/

1C702_DEFAULT_ADDR: PROC;                             /*SOC-S1697635*/
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H#MTA ADRESS INST. ADRESS MED DEN L#GSTA ADRESS      */
 /*            NUMMER, OM SAKNAS - H#MTA MAILING ADRESS             */
 /*                                                                 */
 /*******************************************************************/
    CALL C702_OPEN_ADDR_2_CURSOR;  /* @PPNA CURSOR F@R ADRESS TABELL*/
                                   /* 150 OCH 280                   */
    C702_CASE_2 = '5';             /*  SET WORST CASE VALUE         */
    CALL C702_READ_ADDR_2_CURSOR;  /* L#S ALLA AKTUELLA RECORD I    */
                                   /* VIA CURSOR                    */
    SELECT(SQLCA.SQLCODE);         /* CHECK SQL CODE                */
       WHEN (0)                    /* HITTAT DEFAULT INST. ADRESS   */
          DO WHILE (SQLCA.SQLCODE = 0);
             CALL C702_KOLLA_ADDR_RAD;
             CALL C702_READ_ADDR_2_CURSOR;
          END;

       WHEN (100)
         DO;
           CALL C702_CREATE_MAILING_STREET_ADDR; /* MAIL ADDRESS */
           CALL C702_CREATE_BU_CODE;
         END;
    END;
    CALL C702_CLOSE_ADDR_2_CURSOR;
 END C702_DEFAULT_ADDR;                               /*EOC-S1697635*/

1C702_OPEN_ADDR_2_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C702_ADDR_2_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT,
             B.ZIP_CODE
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C702_COUNTRY_FINLAND AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C702_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),3,1) = '1'      /*SOC S1697635*/
               AND   A.ADDRESS_NUMBER = (SELECT MIN(C.ADDRESS_NUMBER)
             FROM RCBT0280_ADDR_LINE C, RCBT0150_CUST_ADDR D
               WHERE C.COUNTRY_NUMBER  = :C702_COUNTRY_FINLAND AND
               C.COUNTRY_NUMBER  = D.COUNTRY_NUMBER AND
               C.CUSTOMER_NUMBER = :C702_PARM_FILE_RCBDRF1_CUNOUSE AND
               C.CUSTOMER_NUMBER = D.CUSTOMER_NUMBER  AND
               C.ADDRESS_NUMBER  = D.ADDRESS_NUMBER   AND
               CURRENT DATE     >= D.EFFECTIVE_DATE   AND /*C0003-0201*/
               CURRENT DATE     <= D.END_DATE         AND /*C0003-0201*/
               SUBSTR((D.ADDRESS_MASK),3,1) = '1')
               ORDER BY LINE_NUMBER                    /*EOC S1697635*/
              FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C702_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
           PUT SKIP LIST('RCBDR4U  : ERROR OPEN ADDR_2_CURSOR');
           PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
           PUT SKIP LIST('FEL, ST{NGER CURSOR');
           CALL C702_CLOSE_ADDR_2_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C702_OPEN_ADDR_2_CURSOR;

1C702_CLOSE_ADDR_2_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C702_ADDR_2_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PUT SKIP LIST('RCBDR4U  : ERROR CLOSE ADDR_2_CURSOR');
          PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C702_CLOSE_ADDR_2_CURSOR;

1C702_READ_ADDR_2_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/
    EXEC SQL
         FETCH C702_ADDR_2_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT,
           :TAB_150.ZIP_CODE;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        PUT SKIP LIST('RCBDR4U  : ERROR FETCH ADDR_2_CURSOR');
        PUT SKIP LIST('SQLCODE = ' || SQLCA.SQLCODE);
        CALL C702_CLOSE_ADDR_2_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C702_READ_ADDR_2_CURSOR;
1C702_CREATE_BU_CODE: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  SKAPA DEFAULT BU KOD OM BU = BLANK                   */
 /*                                                                 */
 /*******************************************************************/
    IF PARM_FILE_RCBDRF1.FHSISOI = 'A'  THEN
    DO;
       PARM_FILE_RCBDRF1.IODPDBU.BUCODE = '130X000';
    END;
 END C702_CREATE_BU_CODE;

1C702_CREATE_INSTALL_STREET_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H#MTA B#STA INSTALLATIONSADRESS                      */
 /*                                                                 */
 /*******************************************************************/

 /*PARM_FILE_RCBDRF1.AAS_ADD = TAB_280.ADDRESS_NUMBER;................*/

  C702_TEXT_RAD = TAB_280.TEXT;
  IF VERIFY(C702_TEXT_FALT,'0123456789') = '0' |
     C702_TEXT_FALT = 'SF-' |
     C702_TEXT_FALT = 'SF '
                                /*  TROLIGT POSTNUMMER       */
     THEN
        DO;
           CALL C702_RED_POST_NR;
        END;
  ELSE
     IF (SUBSTR(TAB_280.TEXT,1,4) = 'FIN-' |  /* @VRIG VARIANT */
        SUBSTR(TAB_280.TEXT,1,4) = 'FIN ')
        THEN
           DO;
              CALL C702_RED_POST_NR;
           END;

     ELSE
        IF (SUBSTR(TAB_280.TEXT,7,1) <= '9' &  /* BALTIC STATES */
           SUBSTR(TAB_280.TEXT,7,1) >= '0'  &
           SUBSTR(TAB_280.TEXT,8,1) = ' ')
           THEN
              DO;
                 PARM_FILE_RCBDRF1.ICUSGZC = SUBSTR(TAB_280.TEXT,1,7);
                 PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TAB_280.TEXT,9,22);
              END;

        ELSE
           IF (SUBSTR(TAB_280.TEXT,8,1) <= '9' &  /* BALTIC STATES */
              SUBSTR(TAB_280.TEXT,8,1) >= '0'  &
              SUBSTR(TAB_280.TEXT,9,1) = ' ')
              THEN
                 DO;
                    PARM_FILE_RCBDRF1.ICUSGZC =
                              SUBSTR(TAB_280.TEXT,1,8);
                    PARM_FILE_RCBDRF1.ICUSCTY =
                              SUBSTR(TAB_280.TEXT,10,21);
                 END;
           ELSE
             DO;
                    C702_VAT_FIN = SUBSTR(TAB_280.TEXT,3,8);
                    C702_VAT_EST = SUBSTR(TAB_280.TEXT,3,9);
                    C702_VAT_LIT = SUBSTR(TAB_280.TEXT,3,9);
                    C702_VAT_LAT = SUBSTR(TAB_280.TEXT,3,11);

                    IF  (SUBSTR(TAB_280.TEXT,1,2)¬='FI'
                        & VERIFY(C702_VAT_FIN,' 0123456789') ¬= '0')
                     |(SUBSTR(TAB_280.TEXT,1,2)¬='EE'
                       & VERIFY(C702_VAT_EST,' 0123456789') ¬= '0')
                     |(SUBSTR(TAB_280.TEXT,1,2)¬='LT'
                       & VERIFY(C702_VAT_LIT,' 0123456789') ¬= '0')
                     |(SUBSTR(TAB_280.TEXT,1,2)¬='LV'
                       & VERIFY(C702_VAT_LAT,' 0123456789') ¬= '0')

                    THEN                  /*EOC S1710905*/
                      DO;
                       CALL C702_RED_STREET_ADRESS;
                     END;
             END; /* ELSE */
 END C702_CREATE_INSTALL_STREET_ADDR;

1C702_CREATE_MAILING_STREET_ADDR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  H#MTA ADRESS FR$N MAILING ADRESS                     */
 /*                                                                 */
 /*******************************************************************/
0/*------------------------------------------------------------------*/
 /*   @PPNA CURSOR F@R ADRESS TABELL  150 OCH 280                    */
 /*------------------------------------------------------------------*/
    CALL C702_OPEN_ADDR_3_CURSOR;                    /*S1697635*/
0/*------------------------------------------------------------------*/
 /*   L#S ALLA AKTUELLA RECORD I VIA CURSOR                          */
 /*------------------------------------------------------------------*/
    C702_CASE_2 = '5';     /* SET WORST CASE VALUE  */

    CALL C702_READ_ADDR_3_CURSOR;                    /*S1697635*/

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE       */
       WHEN (0)
          DO WHILE (SQLCA.SQLCODE = 0);
                                       /* MAILINGADRESS            */

 /*..........PARM_FILE_RCBDRF1.AAS_ADD = TAB_280.ADDRESS_NUMBER;......*/

             IF TAB_280.LINE_NUMBER = '01'
             THEN                      /* LINE 1 #R ALLTID KUNDENS */
                                       /* NAMN |||                 */
                PARM_FILE_RCBDRF1.CUNAME = TAB_280.TEXT;
             ELSE
                DO;
                   C702_TEXT_RAD = TAB_280.TEXT;
                   IF VERIFY(C702_TEXT_FALT,'0123456789') = '0' |
                      C702_TEXT_FALT = 'SF-' |
                      C702_TEXT_FALT = 'SF '
                                   /*  TROLIGT POSTNUMMER       */
                      THEN
                         DO;
                           CALL C702_RED_POST_NR;
                         END;
                                            /*SOC S1710905*/
                   ELSE
                   DO;
                    C702_VAT_FIN = SUBSTR(TAB_280.TEXT,3,8);
                    C702_VAT_EST = SUBSTR(TAB_280.TEXT,3,9);
                    C702_VAT_LIT = SUBSTR(TAB_280.TEXT,3,9);
                    C702_VAT_LAT = SUBSTR(TAB_280.TEXT,3,11);

                    IF (SUBSTR(TAB_280.TEXT,1,2)¬='FI'
                        & VERIFY(C702_VAT_FIN,' 0123456789') ¬= '0')
                     |(SUBSTR(TAB_280.TEXT,1,2)¬='EE'
                       & VERIFY(C702_VAT_EST,' 0123456789') ¬= '0')
                     |(SUBSTR(TAB_280.TEXT,1,2)¬='LT'
                       & VERIFY(C702_VAT_LIT,' 0123456789') ¬= '0')
                     |(SUBSTR(TAB_280.TEXT,1,2)¬='LV'
                       & VERIFY(C702_VAT_LAT,' 0123456789') ¬= '0')

                    THEN                  /*EOC S1710905*/
                      DO;
                        CALL C702_RED_STREET_ADRESS;
                      END;
                  END; /* ELSE*/
                END;

             CALL C702_READ_ADDR_3_CURSOR;          /*S1697635*/

          END;

       WHEN (100)
           DO;
                  /* PUT SKIP LIST('CUSTOMER NOT FOUND ||| ');  */
           /* PUT SKIP LIST('KUND NR INPUT = ' || */
           /*     PARM_FILE_RCBDRF1.CUNOUSE);     */
           /* PUT SKIP LIST('ADDR NR INPUT = ' || */
           /*     PARM_FILE_RCBDRF1.AAS_ADD);    */
           END;

       END;

    CALL C702_CLOSE_ADDR_3_CURSOR;         /*ST#NG CURSOR *//*S1697635*/
 END C702_CREATE_MAILING_STREET_ADDR;

1C702_RED_POST_NR: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  REDIGERA POSTNUMMER                                  */
 /*                                                                 */
 /*******************************************************************/
    IF (SUBSTR(TAB_280.TEXT,1,3) = 'SF-' |
       SUBSTR(TAB_280.TEXT,1,3) = 'SF ')
    THEN
       DO;
          PARM_FILE_RCBDRF1.ICUSGZC = SUBSTR(TAB_280.TEXT,4,5);
          PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TAB_280.TEXT,9,22);
       END;
    ELSE
       IF (SUBSTR(TAB_280.TEXT,1,4) = 'FIN-' |
           SUBSTR(TAB_280.TEXT,1,4) = 'FIN ')
           THEN
           DO;
              PARM_FILE_RCBDRF1.ICUSGZC = SUBSTR(TAB_280.TEXT,5,5);
              PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TAB_280.TEXT,10,21);
           END;
       ELSE
          IF (SUBSTR(TAB_280.TEXT,5,1) <= '9' &  /* FINNS POSTNUMMER*/
              SUBSTR(TAB_280.TEXT,5,1) >= '0')
              THEN
              DO;
                 PARM_FILE_RCBDRF1.ICUSGZC =
                           SUBSTR(TAB_280.TEXT,1,5)||'  ';
                 PARM_FILE_RCBDRF1.ICUSCTY = SUBSTR(TAB_280.TEXT,7,22);
              END;
          ELSE
              DO;
                PARM_FILE_RCBDRF1.ICUSGZC = '99999';
                PARM_FILE_RCBDRF1.ICUSCTY = 'ZONENUMBER NOT FOUND';
              END;

 END C702_RED_POST_NR;

1C702_RED_STREET_ADRESS: PROC;
0/*******************************************************************/
 /*                                                                 */
 /* FUNCTION:  TA READ P$ B#STA GATUADRESS, DVS MED GATUNUMMER      */
 /*                                                                 */
 /*******************************************************************/
    SELECT(SUBSTR(TAB_280.TEXT,1,3));
       WHEN('   ')                   /* WORST CASE  */
           C702_CASE_1 = '5';

       WHEN(',  ')                   /* WORST CASE  */
           DO;
              SUBSTR(TAB_280.TEXT,1,1) = ' ';
              C702_CASE_1 = '5';
           END;
       WHEN('C/O')                   /* NEXT WORST CASE  */
              C702_CASE_1 = '4';
       WHEN('BOX')                   /* NEXT WORST CASE  */
              C702_CASE_1 = '3';
       OTHER DO;
              C702_CASE_1 = '2';
              DO C702_NUM_1 = 1 TO 30;
                 IF C702_POS(C702_NUM_1) >= '0' &
                    C702_POS(C702_NUM_1) <= '9'
                 THEN DO;            /* BEST CASE   */
                        C702_CASE_1 = '1';
                      END;
              END;
       END; /* OTHER  */
    END; /* SELECT */

    IF C702_CASE_1 <= C702_CASE_2
       THEN DO;
              C702_CASE_2 = C702_CASE_1;
              PARM_FILE_RCBDRF1.NCUSSTR = TAB_280.TEXT;
            END;

 END C702_RED_STREET_ADRESS;

1C702_OPEN_ADDR_CURSOR: PROC;
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C702_ADDR_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C702_COUNTRY_FINLAND AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C702_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),3,1) = '1'
         FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C702_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
           CALL C702_CLOSE_ADDR_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C702_OPEN_ADDR_CURSOR;

1C702_CLOSE_ADDR_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C702_ADDR_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C702_CLOSE_ADDR_CURSOR;

1C702_READ_ADDR_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/

    EXEC SQL
         FETCH C702_ADDR_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        CALL C702_CLOSE_ADDR_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C702_READ_ADDR_CURSOR;

1C702_OPEN_ADDR_3_CURSOR: PROC;                    /*SOC S1697635*/
0/*******************************************************************/
 /* FUNCTION:  DEKLARERA OCH @PPNA CURSOR F@R ADDR_LINE TABELLEN    */
 /*            SELEKTERA ADRESSER F@R COUNTRY, CUSTOMER OCH ADRESSNR*/
 /*******************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
         DECLARE C702_ADDR_3_CURSOR CURSOR FOR
         SELECT
             A.ADDRESS_NUMBER,
             A.LINE_NUMBER,
             A.TEXT
         FROM RCBT0280_ADDR_LINE A, RCBT0150_CUST_ADDR B
         WHERE A.COUNTRY_NUMBER  = :C702_COUNTRY_FINLAND AND
               A.COUNTRY_NUMBER  = B.COUNTRY_NUMBER AND
               A.CUSTOMER_NUMBER = :C702_PARM_FILE_RCBDRF1_CUNOUSE AND
               A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER AND
               A.ADDRESS_NUMBER  = B.ADDRESS_NUMBER AND
               SUBSTR((B.ADDRESS_MASK),1,1) = '1'
         FOR FETCH ONLY;

    EXEC SQL                            /* OPEN CURSOR           */
         OPEN C702_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
         WHEN(0);                   /* TEST FOR VALID SQL CODES */
         OTHERWISE                     /* NO VALID SQL CODE ABEND  */
         DO;
           CALL C702_CLOSE_ADDR_3_CURSOR;
           PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
           PARM_INT_AREA.ERR_TYPE  = 'DB2';
           PARM_INT_AREA.CALL_ID   = '#001';
           IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
           CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
         END;
    END;
 END C702_OPEN_ADDR_3_CURSOR;

1C702_CLOSE_ADDR_3_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    ST#NGA CURSER F@R ADDR_LINE TABLE                     */
 /*                                                                   */
 /*********************************************************************/
    SQLCA.SQLCODE  = '';
    EXEC SQL
       CLOSE C702_ADDR_3_CURSOR;

    SELECT(SQLCA.SQLCODE);       /* CHECK SQL CODE           */
       WHEN(0);                   /* TEST FOR VALID SQL CODES */
       OTHERWISE                     /* NO VALID SQL CODE ABEND  */
       DO;
          PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
          PARM_INT_AREA.ERR_TYPE  = 'DB2';
          PARM_INT_AREA.CALL_ID   = '#002';
          IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
          CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
       END;
    END;
 END C702_CLOSE_ADDR_3_CURSOR;

1C702_READ_ADDR_3_CURSOR: PROC;
0/*********************************************************************/
 /* FUNCTION    DEKLARERA OCH @PPNA CURSER F@R ADDR_LINE TABLE        */
 /*             SELECTERA ALLA ADRESSRADER F@R DENNA                  */
 /*********************************************************************/

    EXEC SQL
         FETCH C702_ADDR_3_CURSOR
         INTO
           :TAB_280.ADDRESS_NUMBER,
           :TAB_280.LINE_NUMBER,
           :TAB_280.TEXT;

    SELECT(SQLCA.SQLCODE);          /* CHECK SQL CODE           */
      WHEN(0);                    /* TEST FOR VALID SQL CODES */
      WHEN(100);
      OTHERWISE                     /* NO VALID SQL CODE ABEND  */
      DO;
        CALL C702_CLOSE_ADDR_3_CURSOR;
        PARM_INT_AREA.PTR_ERROR = ADDR (SQLCA);
        PARM_INT_AREA.ERR_TYPE  = 'DB2';
        PARM_INT_AREA.CALL_ID   = '#003';
        IF PARM_INT_AREA.MSG_AREA.PROC_ID ¬= '' THEN
        CALL RCB0E1M (PTR_INT_AREA);  /* CALL ERROR RUTINE */
      END;
    END;
 END C702_READ_ADDR_3_CURSOR;                           /*EOC S1697635*/


1ZZZ_PUT_SKIP_LIST_START: PROC;
0/*********************************************************************/
 /* SAVE THE VALUES BEFORE THE USEREXIT STARTS TO WORK                */
 /*********************************************************************/
 ZZZ_RCBDRFS_OLD = PARM_FILE_RCBDRF1.DATA, BY NAME;
 PUT SKIP LIST('ENTRY-----------------------------------------------');
 END ZZZ_PUT_SKIP_LIST_START;

1ZZZ_PUT_SKIP_LIST_TRACE: PROC;
0/*********************************************************************/
 /* PUT SKIP LIST INFORMATION                                         */
 /*********************************************************************/
 ZZZ_RCBDRFS_NEW = PARM_FILE_RCBDRF1.DATA, BY NAME;
 PUT SKIP LIST('----------------------------------------------------');
 PUT SKIP LIST('HW_ADDR_FLAG=' || PARM_USER_EXTRA_INFO.HW_ADDR_FLAG);
 ZZZ_FLAGGA             = 'N';
 IF (PARM_FILE_RCBDRF1.BUDIV   ¬= ZZZ_RCBDRFS_OLD.BUDIV ) THEN
 DO;
    ZZZ_FLAGGA          = 'Y';
    PUT SKIP LIST('BUDIV, N:A='||PARM_FILE_RCBDRF1.BUDIV|| ' '||
                   'BUDIV, G:A ='||ZZZ_RCBDRFS_OLD.BUDIV);
 END;
 IF (PARM_FILE_RCBDRF1.BUCODE  ¬= ZZZ_RCBDRFS_OLD.BUCODE ) THEN
 DO;
    ZZZ_FLAGGA          = 'Y';
    PUT SKIP LIST('BUCODE, N:A='||PARM_FILE_RCBDRF1.BUCODE|| ' '||
                   'BUCODE, G:A ='||ZZZ_RCBDRFS_OLD.BUCODE     );
 END;
 IF (PARM_FILE_RCBDRF1.CUNAME  ¬= ZZZ_RCBDRFS_OLD.CUNAME ) THEN
 DO;
    ZZZ_FLAGGA          = 'Y';
    PUT SKIP LIST('CUNAME, N:A='||PARM_FILE_RCBDRF1.CUNAME|| ' '||
                   'CUNAME, G:A ='||ZZZ_RCBDRFS_OLD.CUNAME     );
 END;
 IF (PARM_FILE_RCBDRF1.NCUSSTR ¬= ZZZ_RCBDRFS_OLD.NCUSSTR ) THEN
 DO;
    ZZZ_FLAGGA          = 'Y';
    PUT SKIP LIST('NCUSSTR, N:A='||PARM_FILE_RCBDRF1.NCUSSTR|| ' '||
                   'NCUSSTR, G:A ='||ZZZ_RCBDRFS_OLD.NCUSSTR    );
 END;
 IF (PARM_FILE_RCBDRF1.ICUSCTY ¬= ZZZ_RCBDRFS_OLD.ICUSCTY ) THEN
 DO;
    ZZZ_FLAGGA          = 'Y';
    PUT SKIP LIST('ICUSCTY, N:A='||PARM_FILE_RCBDRF1.ICUSCTY|| ' '||
                   'ICUSCTY, G:A ='||ZZZ_RCBDRFS_OLD.ICUSCTY    );
 END;
 IF (PARM_FILE_RCBDRF1.ICUS3AD ¬= ZZZ_RCBDRFS_OLD.ICUS3AD ) THEN
 DO;
    ZZZ_FLAGGA          = 'Y';
    PUT SKIP LIST('ICUS3AD, N:A='||PARM_FILE_RCBDRF1.ICUS3AD|| ' '||
                   'ICUS3AD, G:A ='||ZZZ_RCBDRFS_OLD.ICUS3AD    );
 END;
 IF (PARM_FILE_RCBDRF1.ICUSGZC ¬= ZZZ_RCBDRFS_OLD.ICUSGZC ) THEN
 DO;
    ZZZ_FLAGGA          = 'Y';
    PUT SKIP LIST('ICUSGZC, N:A='||PARM_FILE_RCBDRF1.ICUSGZC|| ' '||
                   'ICUSGZC, G:A ='||ZZZ_RCBDRFS_OLD.ICUSGZC    );
 END;
 IF (PARM_FILE_RCBDRF1.FHSISOI ¬= ZZZ_RCBDRFS_OLD.FHSISOI ) THEN
 DO;
    ZZZ_FLAGGA          = 'Y';
    PUT SKIP LIST('FHSISOI, N:A='||PARM_FILE_RCBDRF1.FHSISOI|| ' '||
                   'FHSISOI, G:A ='||ZZZ_RCBDRFS_OLD.FHSISOI    );
 END;
 IF (ZZZ_FLAGGA = 'Y') THEN
 DO;
    PUT SKIP LIST(' CUNOUSE='||PARM_FILE_RCBDRF1.CUNOUSE);
 END;
 ELSE
 DO;
    PUT SKIP LIST(' EJ #NDRAT  CUNOUSE='||PARM_FILE_RCBDRF1.CUNOUSE);
 END;
 END ZZZ_PUT_SKIP_LIST_TRACE;
 /*-------------------------------------------------------------------*/

                                         /* END USER DEFINED PROCESS */
                                         /* RESET LEVEL              */
 PARM_INT_AREA.ID_MOD_LEVEL = WRK_LEVEL - 1;
1/*******************************************************************/
 /*DO NOT CHANGE THIS PART, IT IS MEANT FOR ABR                     */
 /*******************************************************************/
  %INCLUDE DAIFPLH ;                     /* COMPILE DATE/TIME STAMP */
 $DAIMOD (RCBDR4U);                      /* MODULE TO BE COMPILED   */
 /*******************************************************************/
 /* END OF ABR BLOCK                                                */
 /*******************************************************************/

 %IF TEST = 'Y' %THEN %DO;                                        /*%*/
 PUT SKIP EDIT ('RCBDR4U  POS. 08')(A);                           /*%*/
 %END;                                                            /*%*/

 STRIPF:PROC($S)REORDER RED RETURNS(CHAR(256)VARYING);
     /*-----------------------------------------------------------*/
     /* strip leading and trailing blanks fixed length inpit      */
     /*-----------------------------------------------------------*/
      DCL (LENGTH,SUBSTR) BUILTIN;
        DCL $S CHAR(*) ;
        DCL (S,E) FIXED BIN(15);
        IF $S='' THEN RETURN('');
        DO S=1 TO LENGTH($S)
           WHILE(SUBSTR($S,S,1)=' ');
        END;
        DO E=LENGTH($S) TO S BY -1
           WHILE(SUBSTR($S,E,1)=' ');
        END;
        RETURN(SUBSTR($S,S,1+E-S));
 END STRIPF;
 END RCBDR4U;